<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ Integrations</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/</link><description>Recent content in Integrations on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.communityhealthtoolkit.org/apps/features/integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>Apps: Android</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/features/integrations/android/</guid><description>
&lt;p>The &lt;a href="https://github.com/medic/cht-android">CHT Android application&lt;/a> can be launched by clicking on a link or invoking an intent in another Android app. This is useful for enabling login by SMS, directing a user to a specific page, and integrating between Android applications.&lt;/p>
&lt;h2 id="sending-a-url">Sending a URL&lt;/h2>
&lt;figure class="right col-8 col-lg-4">&lt;a href="android-prompt.png">
&lt;img src="android-prompt.png"/> &lt;/a>
&lt;/figure>
&lt;p>When the user clicks on a link to a CHT instance from an SMS, email, WhatsApp, or any other app, Android will prompt the user to choose whether to open the URL in the Android app or the browser. If a CHT app is not installed then the URL will be opened in the browser.&lt;/p>
&lt;p>Users can choose &amp;ldquo;Always&amp;rdquo; to skip this prompt in future. The prompt may look different depending on the version of Android being used.&lt;/p>
&lt;h2 id="using-an-intent">Using an intent&lt;/h2>
&lt;p>To have another Android application launch the CHT Android application, use an &lt;a href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW">ACTION_VIEW&lt;/a> intent, for example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://myapplication.app.medicmobile.org&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">Intent&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">new&lt;/span> &lt;span style="color:#000">Intent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Intent&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">ACTION_VIEW&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">setData&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">Uri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#c4a000">parse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">startActivity&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="version-notes">Version notes&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>CHT Core version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Released&lt;/td>
&lt;td>3.10.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Apps: Custom</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/features/integrations/custom/</guid><description>
&lt;p>The CHT Core Framework includes functionality that allows sharing data with any API-based system. Developers have configured CHT integrations with OpenMRS, KenyaEMR, Bahmni, DHIS2, RapidPro, Apache NiFi, OpenHIM, custom electronic medical records (EMR), and several other systems.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Integrating a CHT App into your digital health ecosystem starts with identifying an integration use case. It&amp;rsquo;s important to first understand all the components present in the ecosystem (EMR, laboratory system, community health information system, etc) and then plan out what the workflow will look like operationally. It is important to consider what information is needed at each point, will it be available to them, what happens if it is not, is this workflow even useful for them.&lt;/p>
&lt;p>One of the biggest challenges in developing integrations between systems is patient matching and/or &lt;a href="https://en.wikipedia.org/wiki/Data_deduplication">deduplication&lt;/a>. Sometimes this can be controlled operationally, other times it requires complicated algorithms or human intervention.&lt;/p>
&lt;p>Below are a few example integration use cases:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Lost to Follow-up&lt;/strong>: EMR generates a list of patients that require follow-up in the community, that list is sent to the CHT and healthworkers receive a task in the CHT to find those patients and refer them to the health facility.&lt;/li>
&lt;li>&lt;strong>Referrals from the community&lt;/strong>: When a CHW does an assessment and determines the patient should be referred to a health facility, send the referral information to the EMR.&lt;/li>
&lt;li>&lt;strong>Contact Tracing&lt;/strong>: Similar to Lost to Follow-Up, the EMR generates a list of contacts to be followed up with and this is sent to the CHT so that a tracer can call those contacts to see if they have symptoms.&lt;/li>
&lt;li>&lt;strong>Interactive Messaging&lt;/strong>: Integrate with a messaging platform (such as RapidPro) to allow community members to initiate self-screening assessments, which can then be sent to the CHT for follow-up by a healthworker.&lt;/li>
&lt;/ol>
&lt;p>As you design your use cases, creating a &lt;a href="https://www.websequencediagrams.com/">sequence diagram&lt;/a> will be helpful in illustrating what the flow will look like. &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/integrations/rapidpro/#sequence-diagrams">Here&lt;/a> is an example sequence diagram for an integration use case with RapidPro.&lt;/p>
&lt;h2 id="integration-design-patterns">Integration Design Patterns&lt;/h2>
&lt;p>There are a number of different interactions that may occur between digital health systems. Below are some common use cases:&lt;/p>
&lt;ol>
&lt;li>Creating a patient in the CHT creates that patient in another system&lt;/li>
&lt;li>Creating a patient in another system creates that patient in the CHT&lt;/li>
&lt;li>Submitting a form in the CHT triggers an event in another system&lt;/li>
&lt;li>Submitting a form in the CHT sends data to another system&lt;/li>
&lt;li>Activity in another system triggers an event in the CHT&lt;/li>
&lt;li>Activity in another system stores the results in the CHT&lt;/li>
&lt;li>Another system needs to look up data in the CHT&lt;/li>
&lt;/ol>
&lt;h2 id="sending-data-to-other-systems">Sending data to other systems&lt;/h2>
&lt;p>Using the &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/">outbound push&lt;/a> feature, you can configure the CHT to send data to another system. Before starting, you&amp;rsquo;ll want to make sure you understand the APIs of the destination system and have login credentials with adequate privileges.&lt;/p>
&lt;p>To send data to other systems from the CHT, you will need to do the following:&lt;/p>
&lt;ol>
&lt;li>Enable &lt;code>outbound&lt;/code> in &lt;code>app_settings&lt;/code>&lt;/li>
&lt;li>Specify &lt;em>when&lt;/em> data is sent&lt;/li>
&lt;li>Specify &lt;em>where&lt;/em> data is sent&lt;/li>
&lt;li>Specify &lt;em>what&lt;/em> data is sent&lt;/li>
&lt;li>Set up credentials for the destination system&lt;/li>
&lt;/ol>
&lt;h3 id="enable-outbound">Enable outbound&lt;/h3>
&lt;p>&lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/#configuration">Enable&lt;/a> the &lt;code>mark_for_outbound&lt;/code> transition in &lt;code>app_settings&lt;/code>.&lt;/p>
&lt;h3 id="when-data-is-sent">When data is sent&lt;/h3>
&lt;p>Whenever a document is changed (such as submitting a form, creating a new contact, or editing an existing one) you can configure outbound to send data to another system. The &lt;code>relevant_to&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/#relevant_to">property&lt;/a> in the outbound configuration is used to identify which activities will trigger the sending of data.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example&lt;/h4>
Send data to the EMR whenever a CHW submits an &lt;code>assessment&lt;/code> form where &lt;code>referral = true&lt;/code>.
&lt;/div>
&lt;h3 id="where-data-is-sent">Where data is sent&lt;/h3>
&lt;p>The &lt;code>destination&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/#destination">property&lt;/a> in the outbound configuration is used to specify &lt;em>where&lt;/em> to send data. This will normally be the API endpoint of the destination system or interoperabiliy layer.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example&lt;/h4>
Send data to the &lt;code>/api/v1/referral&lt;/code> endpoint in the destination system.
&lt;/div>
&lt;h3 id="what-data-is-sent">What data is sent&lt;/h3>
&lt;p>You configure &lt;em>what&lt;/em> data is sent using the &lt;code>mapping&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/#mapping">property&lt;/a>. You will map data from the CHT to the format required by the destination API endpoint.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example&lt;/h4>
Map the &lt;code>contact.name&lt;/code> field in the CHT to the &lt;code>patient.name&lt;/code> field in the EMR.
&lt;/div>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>Credentials for the destination system are &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/#credentials">stored in CouchdDB&lt;/a>. You will need to set this up before you can test your configuration.&lt;/p>
&lt;h2 id="requests-from-other-systems">Requests from other systems&lt;/h2>
&lt;p>The CHT has a complete RESTful API that other systems can utilize to interact with data in the CHT.&lt;/p>
&lt;p>The most common uses are:&lt;/p>
&lt;ol>
&lt;li>Looking up data in the CHT from another system&lt;/li>
&lt;li>POSTing data to the CHT from another system&lt;/li>
&lt;/ol>
&lt;h3 id="look-up-data-in-the-cht">Look up data in the CHT&lt;/h3>
&lt;p>The CHT has a number of different API endpoints that can be used to look up data.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example 1&lt;/h4>
You have a patientâ€™s phone number and you want to look up more information about that patient, such as who their CHW is or what Catchment Area they live in.
&lt;/div>
&lt;p>You can use the &lt;code>contacts_by_phone&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/api/#get-apiv1contacts-by-phone">endpoint&lt;/a> will return the fully hydrated contact information for those patients.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example 2&lt;/h4>
You just have the internal UUID of a particular contact but want to get the complete information available for that contact.
&lt;/div>
&lt;p>You can use the &lt;code>hydrate&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/api/#get-apiv1hydrate">endpoint&lt;/a> to obtain this information. to look up the complete information for that contact.&lt;/p>
&lt;h3 id="post-data-to-the-cht">POST data to the CHT&lt;/h3>
&lt;p>The CHT API also allows you to POST data. Using these endpoints, you can create new records in your CHT API. You can store activities that took place in another system on that contact&amp;rsquo;s profile in the CHT, and even create tasks for CHWs in the CHT based on activities that took place in the other system.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example 1&lt;/h4>
You use RapidPro to send daily quarantine follow-up messages to a patient. You want to store the patientâ€™s responses to those messages on their profile in the CHT.
&lt;/div>
&lt;p>You can do this by submitting a JSON Form to the records &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/api/#post-apiv2records">endpoint&lt;/a>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Example 2&lt;/h4>
Continuing from Example 1, create a task for a CHW in the CHT whenever a patient responds that they have developed symptoms.
&lt;/div>
&lt;p>You would do this by simply configuring a &lt;a href="https://docs.communityhealthtoolkit.org/apps/features/tasks/">task&lt;/a> to be generated based on criteria available in the report that was created in Example 1.&lt;/p></description></item><item><title>Apps: DHIS2</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/dhis2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/features/integrations/dhis2/</guid><description>
&lt;p>Most health systems have regular reporting requirements for community-level activities. Health workers often carry around heavy logbooks to manually record all relevant activities. When it is time to submit their data, community health workers (CHWs) summarize what was recorded in their logbooks and share this information with their supervisors, who in turn create paper records of these totals across entire community units or health facilities. This paper record is often passed to yet another individual whose responsibility is to manually key in the data into a health information management system, such as DHIS2.&lt;/p>
&lt;p>In communities using digital health apps that do not integrate with DHIS2, it is highly likely that health workers are duplicating efforts by recording the same information both in their app and in their logbook(s). For example, they are not only registering new pregnancies in their app, but they are also manually recording this in their logbooks, manually adding them up at the end of the month, and then someone else is manually keying this into DHIS2.&lt;/p>
&lt;p>In communities using digital health apps built with the CHT, health systems can reduce or eliminate the need to complete paper based forms for DHIS2 reporting needs. This gives health workers more time to focus on caring for the families in their community while also increasing accuracy and timeliness of their DHIS2 reporting requirements.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The CHT Core Framework supports integrations with DHIS2 in a variety of ways:&lt;/p>
&lt;ol>
&lt;li>Sending patient data&lt;/li>
&lt;li>Sending event data&lt;/li>
&lt;li>Sending pre-aggregated &amp;ldquo;Service Reports&amp;rdquo;&lt;/li>
&lt;li>Aggregating data across multiple health workers into DHIS2 Data Values&lt;/li>
&lt;li>Exporting a file that can be imported into DHIS2 as a Data Set&lt;/li>
&lt;li>Exposing an API for DHIS2 app developers to pull aggregate data from CHT Core&lt;/li>
&lt;li>Receiving data from DHIS2&lt;/li>
&lt;/ol>
&lt;p>Sending patient, event, and pre-aggregated data can be achieved using the &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/">Outbound push&lt;/a> feature. Receiving data from DHIS2 can be achieved using the &lt;a href="https://github.com/medic/cht-core/tree/master/api">CHT Core Web API&lt;/a>.&lt;/p>
&lt;p>Aggregating data across multiple health workers requires a somewhat specific workflow and was designed with three key user personas in mind. The aggregate workflow is described in more detail below.&lt;/p>
&lt;h2 id="aggregate-workflow">Aggregate Workflow&lt;/h2>
&lt;p>The aggregate workflow was designed specifically for CHWs, Supervisors, and Health Records Information Officers (HRIO) but may be adapted to other contexts.&lt;/p>
&lt;p>&lt;strong>CHW (offline user)&lt;/strong>: Conducts home visits and records information in the app. Reviews aggregate data throughout the month and makes sure to sync at the end of the month.&lt;/p>
&lt;p>&lt;strong>Supervisor (offline user)&lt;/strong>: Provides supervision to the CHWs, reviews and verifies aggregate data for an entire community unit.&lt;/p>
&lt;p>&lt;strong>HRIO (online user)&lt;/strong>: Exports a file from the CHT and imports into DHIS2. Reviews data in DHIS2.&lt;/p>
&lt;h3 id="community-health-workers">Community Health Workers&lt;/h3>
&lt;p>CHWs support patients in their community by following care guides and recording responses in the CHT. The CHT calculates aggregate DHIS2 Data Values for each CHW based on rules configured in the CHT. CHWs can view these indicators on the Targets tab and should review them and sync at the end of the month.&lt;/p>
&lt;p>&lt;img src="chw.png" alt="CHWs" title="Feature Overview CHWs">&lt;/p>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/apps/features/targets/">Targets&lt;/a>&lt;/p>
&lt;h3 id="supervisors">Supervisors&lt;/h3>
&lt;p>In addition to their own targets, Supervisors can see the aggregate of each DHIS2 Data Value across &lt;em>all&lt;/em> CHWs in their area from the &lt;em>CHW Aggregate&lt;/em> view on the &lt;strong>Targets tab&lt;/strong>. By tapping on a target, they can also see each CHWâ€™s contribution towards that total. Supervisors can review and verify with CHWs that everyone has synced and that their data is correct. The Supervisor can communicate with the HRIO when everything has been validated.&lt;/p>
&lt;p>&lt;img src="supervisor.png" alt="Supervisors" title="Feature Overview Supervisors">&lt;/p>
&lt;h3 id="health-records-information-officers">Health Records Information Officers&lt;/h3>
&lt;p>HRIOs access the &lt;strong>CHT App Management&lt;/strong> tab and select the appropriate &lt;em>DHIS2 Data Set, Organisation Unit,&lt;/em> and &lt;em>Period&lt;/em>. They then &lt;em>Export&lt;/em> a file that is formatted for DHIS2. HRIOs will need access to the &lt;strong>Import/Export&lt;/strong> feature in DHIS2 so that they can &lt;strong>Import&lt;/strong> the file. Once it has been imported into DHIS2, they review the data from the &lt;strong>Data Entry&lt;/strong> screen in DHIS2.&lt;/p>
&lt;p>&lt;img src="data-entry-1.png" alt="Data Entry" title="Feature Overview Data Entry 1">&lt;/p>
&lt;h2 id="dhis2-apps">DHIS2 apps&lt;/h2>
&lt;p>The CHT also includes an &lt;a href="https://github.com/medic/cht-core/tree/master/api">API&lt;/a> that can be called from other applications that returns DHIS2 Data Sets. This means that you can build a &lt;a href="https://docs.dhis2.org/master/en/developer/html/apps_creating_apps.html">DHIS2 app&lt;/a> that pulls data from the CHT and imports it electronically into DHIS2. This would allow &lt;strong>Data Entry&lt;/strong> to control the process directly from DHIS2 without having to access the CHT.&lt;/p>
&lt;p>&lt;img src="data-entry-2.png" alt="Data Entry" title="Feature Overview Data Entry 2">&lt;/p>
&lt;h2 id="version-notes">Version Notes&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>CHT Core version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Calculate DHIS2 Data Values by aggregating data from CHT Core reports&lt;/td>
&lt;td>3.9.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Export file from CHT Core that can be imported into DHIS2 as a Data Set&lt;/td>
&lt;td>3.9.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Apps: OpenMRS</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/openmrs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/features/integrations/openmrs/</guid><description>
&lt;p>&lt;a href="https://openmrs.org">OpenMRS&lt;/a> is an open source electronic medical record system used in dozens of countries. Integrating CHT apps with OpenMRS can open up opportunities to improve health outcomes for patients by promoting better coordination of care. For example, referrals by CHWs in the community can be sent electronically to health facilities using OpenMRS so that nurses and clinicians can prepare for their visit and have full access to the assessment done by a CHW.&lt;/p>
&lt;p>Integrating CHT apps with OpenMRS can be achieved by following the CHT&amp;rsquo;s &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/integrations/openmrs/">OpenMRS integration guide&lt;/a>, which leverages the &lt;a href="https://rest.openmrs.org">OpenMRS REST API&lt;/a>.&lt;/p></description></item><item><title>Apps: OppiaMobile</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/oppia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/features/integrations/oppia/</guid><description>
&lt;p>&lt;a href="https://digital-campus.org/oppiamobile">OppiaMobile&lt;/a> is an open source mobile learning platform built by Digital Campus specially designed for delivering learning content, multimedia, and quizzes in low connectivity settings. All the content and activities can be accessed and used when no internet connection is available, and users can earn points and badges for completing activities and watching videos. To learn more about the platform, check out the &lt;a href="https://digital-campus.org/oppiamobile/developers">overview&lt;/a>, OppiaMobile on &lt;a href="https://github.com/DigitalCampus">Github&lt;/a>, and their &lt;a href="http://oppiamobile.readthedocs.io/en/latest">documentation site&lt;/a>. You can also join the OppiaMobile &lt;a href="https://community.oppia-mobile.org">Community Discussion Board&lt;/a>.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This documentation describes how the CHT and OppiaMobile can integrate to provide a learning and care experience for community health workers and other health care providers. It demonstrates how both apps link to one another to provide a seamless user experience, describes features of both applications, and the required configuration adjustments.&lt;/p>
&lt;p>We provide a detailed example of the CHT&amp;lt;&amp;gt;OppiaMobile integration, including how to access the learning material, an overview of the functionalities within educational modules, and post-course assessment and supervisor support.&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;p>This integration leverages the &lt;strong>remote onboarding, task &amp;amp; scheduling, and target features&lt;/strong> of the CHT core framework with the &lt;strong>curated, multimedia educational content&lt;/strong> available via OppiaMobileâ€™s learning platform.&lt;/p>
&lt;p>The CHT Core Framework &amp;amp; OppiaMobile integration currently supports the following capabilities and features:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/apps/features/tasks/">Task management&lt;/a> for notifications on new educational modules and software updates&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/apps/examples/training/">Remote onboarding&lt;/a> to new apps, software features, and workflows when they are updated, without relying on face-to-face training&lt;/li>
&lt;li>Optimized multimedia content with links to educational modules powered by OppiaMobile&lt;/li>
&lt;li>Message and feedback options, to contact supervisors with questions and seek support&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/apps/features/targets/#supervisor-view">Supervisor visibility&lt;/a> into CHW progress for onboarding, learning, and care&lt;/li>
&lt;li>Hosting options for government-led, government-owned platforms&lt;/li>
&lt;/ul></description></item><item><title>Apps: RapidPro</title><link>https://docs.communityhealthtoolkit.org/apps/features/integrations/rapidpro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/features/integrations/rapidpro/</guid><description>
&lt;p>&lt;a href="https://rapidpro.io/">RapidPro&lt;/a> is a software product that allows you to visually build logic to support interactive messaging flows. The flows support a variety of technologies such as: SMS, USSD, IVR, Telegram, Facebook Messenger, and WhatsApp. RapidPro is open source and provides an &lt;a href="https://community.rapidpro.io/rapidpros-api/">API&lt;/a> to integrate with other applications. To learn more about the platform, check out RapidPro on &lt;a href="https://rapidpro.github.io/rapidpro/">GitHub&lt;/a>, their &lt;a href="https://community.rapidpro.io/">Community&lt;/a> website, or join their Google &lt;a href="https://groups.google.com/g/rapidpro">Group&lt;/a>.&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>CHT-based &lt;a href="https://docs.communityhealthtoolkit.org/apps/concepts/workflows/#sms-messaging">SMS workflows&lt;/a> can be configured to support registering of new patients or pregnancies, recording outcomes of visits, confirmation via auto-responses, and scheduling reminders. Some projects are designed entirely around SMS workflows. The CHT also supports person to person SMS &lt;a href="https://docs.communityhealthtoolkit.org/apps/features/messaging/">messaging&lt;/a> from the Messages tab.&lt;/p>
&lt;p>For more complex messaging workflows or to utilize other messaging platforms, you can design workflows that leverage the functionality of RapidPro and the CHT together. This enables semi-automated, direct to patient approaches to health assessments and care coordination at the community level.&lt;/p>
&lt;h2 id="workflows">Workflows&lt;/h2>
&lt;p>Integrated RapidPro/CHT workflows are very flexible and leverage the full functionality of each application; You configure RapidPro directly in RapidPro, and configure the CHT in the CHT and the two systems communicate with each other through APIs and &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/app-settings/outbound/">Outbound push&lt;/a>. With this architecture, you are not limited to a subset of functionality within either application.&lt;/p>
&lt;p>A simple RapidPro/CHT integration might include triggering an interactive SMS messaging flow in RapidPro whenever a new patient is registered in the CHT and then storing the responses of that messaging flow in the CHT. You could then conditionally trigger a &lt;a href="https://docs.communityhealthtoolkit.org/apps/features/tasks/">Task&lt;/a> for a health worker in the CHT based on the patient responses from the RapidPro flow.&lt;/p>
&lt;p>App builders have built and deployed a number of interactive messaging workflows that integrate RapidPro and the CHT already, see below for a few examples.&lt;/p>
&lt;h3 id="contact-tracing">Contact Tracing&lt;/h3>
&lt;p>The &lt;a href="https://docs.communityhealthtoolkit.org/apps/examples/contact-tracing/#workflow-example">COVID-19 Contact Tracing app&lt;/a> uses RapidPro to send messages to quarantined COVID-19 patients. Messages are sent to the patients daily asking whether or not they developed new symptoms. If so, a health worker will be notified by SMS and receive a CHT task. All responses to the RapidPro workflow are recorded in the CHT and can be queried in analytics.&lt;/p>
&lt;h3 id="remote-training">Remote Training&lt;/h3>
&lt;p>The &lt;a href="https://docs.communityhealthtoolkit.org/apps/examples/training/#remote-training-by-sms">Remote Training by SMS app&lt;/a> uses RapidPro to train health workers on Antenatal Care in the language of their choice. If the health worker answers a training question incorrectly, a task can be created for their supervisor to follow up with them.&lt;/p>
&lt;h3 id="chw-symptom-and-mental-health-checks">CHW Symptom and Mental Health Checks&lt;/h3>
&lt;p>The &lt;a href="https://docs.google.com/document/d/19F6vOCNFKQnSyREiaBnryUmre20s5QZzYe0hWuWn-0k/edit">CHW Symptom and Mental Health Checks app&lt;/a> is used to proactively check in with health workers to screen for COVID-19 symptoms and/or the need for psychosocial counseling.&lt;/p></description></item></channel></rss>