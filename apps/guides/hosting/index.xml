<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ Hosting</title><link>https://docs.communityhealthtoolkit.org/apps/guides/hosting/</link><description>Recent content in Hosting on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/index.xml" rel="self" type="application/rss+xml"/><item><title>Apps: Requirements</title><link>https://docs.communityhealthtoolkit.org/apps/guides/hosting/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/hosting/requirements/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>For production CHT deployments, Linux is recommended, with &lt;a href="https://ubuntu.com/server">Ubuntu&lt;/a> the most commonly used. For CHT development, Linux or macOS may be used. Windows can be used for either, but without recommendation.&lt;/p>
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
These requirements apply to both 3.x and 4.x CHT hosting
&lt;/div>
&lt;p>Hosting a CHT instance in a cloud provider like AWS or on bare-metal requires you have sufficient hardware specifications, Docker and Docker Compose installed and other infrastructure requirements met.&lt;/p>
&lt;h2 id="hardware-requirements">Hardware Requirements&lt;/h2>
&lt;ul>
&lt;li>4 GiB RAM&lt;/li>
&lt;li>2 CPU/vCPU&lt;/li>
&lt;li>8 GB Hard Disk (SSD prefered)&lt;/li>
&lt;li>SSL certificates ( To be able to use the CHT app on mobile)&lt;/li>
&lt;li>Root Access&lt;/li>
&lt;/ul>
&lt;p>Depending on the scale of your operation these may need to be adjusted. Be sure to monitor disk usage so that the 8 GB can be increased as needed.&lt;/p>
&lt;h2 id="docker">Docker&lt;/h2>
&lt;p>Install both &lt;code>docker&lt;/code> and &lt;code>docker-compose&lt;/code> to run the two &lt;code>medic-os&lt;/code> and &lt;code>haproxy&lt;/code> containers.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Skip this step if you&amp;rsquo;re following the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/ec2-setup-guide/#create-and-configure-ec2-instance">EC2 guide 3.x&lt;/a> as &lt;code>docker&lt;/code> and &lt;code>docker-compose&lt;/code> are automatically installed when following the setup scripts.
&lt;/div>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;p>Depending on which distro you run, install the Docker packages from &lt;a href="https://docs.docker.com/engine/install/#server">Docker&amp;rsquo;s Linux options&lt;/a>. Historically, Medic runs Ubuntu: see &lt;a href="https://docs.docker.com/engine/install/ubuntu/">Docker CE&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker-compose&lt;/a> install pages.&lt;/p>
&lt;h3 id="windows">Windows&lt;/h3>
&lt;p>Docker Desktop for Windows needs either Hyper-V support or Windows Subsystem for Linux 2 (WSL 2). &lt;a href="https://docs.docker.com/docker-for-windows/install/">Docker&amp;rsquo;s Windows Docker Desktop install page&lt;/a> covers both scenarios.&lt;/p>
&lt;h3 id="macos">macOS&lt;/h3>
&lt;p>See &lt;a href="https://docs.docker.com/docker-for-mac/install/">Docker&amp;rsquo;s macOS Docker Desktop install page&lt;/a>.&lt;/p>
&lt;h3 id="verify-install">Verify install&lt;/h3>
&lt;p>Test that &lt;code>docker&lt;/code> and &lt;code>docker-compose&lt;/code> installed correctly by showing their versions with &lt;code>sudo docker-compose --version&lt;/code> and &lt;code>sudo docker --version&lt;/code>. Note, your version may be different:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker-compose --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose version 1.27.1, build 509cfb99
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Docker version 19.03.12, build 48a66213fe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, confirm you can run the &amp;ldquo;hello world&amp;rdquo; docker container: &lt;code>sudo docker run hello-world&lt;/code>&lt;/p>
&lt;h2 id="considerations">Considerations&lt;/h2>
&lt;p>There are serious implications to consider when deploying a CHT instance beyond the above requirements. Be sure to account for:&lt;/p>
&lt;ul>
&lt;li>Alerting - How will alerts be sent in the case of downtime or degraded service?&lt;/li>
&lt;li>Power failures and unplanned restarts - Will the server cleanly restart such that the CHT resumes service correctly?&lt;/li>
&lt;li>Backups - What happens to the CHT data if there&amp;rsquo;s a hard drive failure?&lt;/li>
&lt;li>Disaster Recovery - What happens if there is a flood at the facility and on-site active and backup data are destroyed?&lt;/li>
&lt;li>Scale - What happens when the hardware deployed needs to be upgraded to increase capacity?&lt;/li>
&lt;li>Updates - By definition TLS certificates expire and software needs to be updated - how will the deployment get these updates on a regular basis?&lt;/li>
&lt;li>Security - While the TLS certificate will protect data on the LAN, is the server hard drive encrypted in the event of property theft?&lt;/li>
&lt;li>Privacy - The CHT inherently carries sensitive patient medical information in the database. Are there sufficient measures in place to protect this sensitive data?&lt;/li>
&lt;/ul></description></item><item><title>Apps: Monitoring and alerting on the CHT</title><link>https://docs.communityhealthtoolkit.org/apps/guides/hosting/monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/hosting/monitoring/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This guide applies to all production instances of the CHT including &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/self-hosting/">self hosted&lt;/a> and &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/ec2-setup-guide/">AWS hosted&lt;/a>. It also works with &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/app-developer/">app developer&lt;/a> and &lt;a href="https://docs.communityhealthtoolkit.org/contribute/code/core/dev-environment/">CHT core developer&lt;/a> setups if you&amp;rsquo;re looking to test how it works or develop monitoring tools.&lt;/p>
&lt;p>These instructions apply to both 3.x and 4.x CHT monitoring&lt;/p>
&lt;/div>
&lt;p>While this guide does not detail exactly how to set up monitoring and alerting, it will outline the items you should monitor and alert on. At a later date we&amp;rsquo;ll deploy an opinionated guide on which software and services to use when doing real world hosting.&lt;/p>
&lt;p>Each deployment will experience different stresses on its resources. Be sure to tune the alerting levels in the case of an outage so that you may avoid it in the future. Any thresholds for alerts, and even what is alerted on, is just a guideline, not a garuntee of uptime.&lt;/p>
&lt;h2 id="monitoring-vs-alerting">Monitoring vs Alerting&lt;/h2>
&lt;p>Monitoring allows CHT admins to see statistics about their server, often over time. This can be helpful when you want to be aware of growth in your deployment (eg number of active users or number of reports per region). It should not be assumed that these will be checked regularly enough to notice a problem, for example a spike in number of feedback documents.&lt;/p>
&lt;p>Alerting is a push mechanism designed to notify users who can act on the alert. These can go over SMS, email, Slack, WhatsApp or any other channel to notify the right users.&lt;/p>
&lt;p>The process of setting up monitoring and alerting should be done together. Monitoring sets the baseline and then alerting tells admins when the metric has gone beyond the baseline to a critical state. Certain metrics, like uptime for example, likely do not need to have a monitoring visualization on a dashboard, but the monitoring system should still be the authority to send an alert to denote when the service has restarted unexpectedly.&lt;/p>
&lt;h2 id="outside-the-cht">Outside the CHT&lt;/h2>
&lt;p>Be sure to monitor important items that the CHT depends on in order to be healthy. You should alert when any of these are close to their maximum (disk space) or minimum (days left of valid TLS certificate):&lt;/p>
&lt;ul>
&lt;li>Domain expiration with registrar&lt;/li>
&lt;li>TLS certificate expiration&lt;/li>
&lt;li>Disk &amp;amp; swap space&lt;/li>
&lt;li>CPU utilization&lt;/li>
&lt;li>Memory utilization&lt;/li>
&lt;li>Network utilization&lt;/li>
&lt;li>Process count&lt;/li>
&lt;li>OS Uptime&lt;/li>
&lt;/ul>
&lt;h2 id="inside-the-cht">Inside the CHT&lt;/h2>
&lt;p>The &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/api/#get-apiv2monitoring">monitoring API&lt;/a> was added in 3.9.0 and does not require any authentication and so can easily be used with third party tools as they do not need a CHT user account.&lt;/p>
&lt;p>All metrics need to be monitored over time so that you can easily see longitudinal patterns when debugging an outage or slow down.&lt;/p>
&lt;h3 id="specific-of-monitoring">Specific of monitoring&lt;/h3>
&lt;h4 id="explosive-growth">Explosive Growth&lt;/h4>
&lt;p>Many of the values in the monitoring API do not mean much in isolation. For example if an instance has 10,714,278 feedback docs, is that bad? If it&amp;rsquo;s years old and has thousands of users, then this is normal. If it is 4 months old and has 100 users, this is a dire problem!&lt;/p>
&lt;p>You should monitor these metrics for unexpected growth as measured by percent change over 24 hours. Ideally this can be subjectively calculated when it is more than 5% growth than the prior day. They&amp;rsquo;re marked as &lt;code>growth&lt;/code> in the table below.&lt;/p>
&lt;h4 id="non-zero-values">Non-Zero Values&lt;/h4>
&lt;p>Other values should always be zero, and you should alert when they are not. You may opt to alert only when they are non-zero for more than 24 hours. These are marked as &lt;code>non-zero&lt;/code> in the table below.&lt;/p>
&lt;h4 id="zero-or-near-zero-values">Zero or Near Zero Values&lt;/h4>
&lt;p>Finally, these values should always be &lt;em>not&lt;/em> zero, and you should alert when are zero or very close to it. You may opt to alert only when they are zero for more than 24 hours. They&amp;rsquo;re marked with &lt;code>zero&lt;/code> below.&lt;/p>
&lt;h4 id="elements-types-and-samples">Elements, types and samples&lt;/h4>
&lt;p>The names below are extrapolated from the paths in the JSON returned by the API and should be easy to find when viewing the Monitoring API URL on your CHT instance:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Example Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Conflict Count&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>23,318&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Medic Doc Count&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>16,254,271&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Medic Fragmentation&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>1.4366029665729645&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Sentinel Doc Count&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>15,756,449&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Sentinel Fragmentation&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>2.388733774539664&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Users Doc Count&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>535&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Users Fragmentation&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>2.356411021364134&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CouchDB Users Meta Doc Count&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>10,761,549&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Feedback Count&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>10,714,368&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Messaging Outgoing State Due&lt;/td>
&lt;td>&lt;code>growth&lt;/code>&lt;/td>
&lt;td>3,807&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Messaging Outgoing State Failed&lt;/td>
&lt;td>&lt;code>non-zero&lt;/code>&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Outbound Push Backlog&lt;/td>
&lt;td>&lt;code>non-zero&lt;/code>&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sentinel Backlog&lt;/td>
&lt;td>&lt;code>non-zero&lt;/code>&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Date Uptime&lt;/td>
&lt;td>&lt;code>zero&lt;/code>&lt;/td>
&lt;td>1,626,508.148&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Apps: 3.x</title><link>https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>To get an overview on how these hosting solutions use &lt;code>docker&lt;/code> and &lt;code>docker-compose&lt;/code>, as well as other key CHT concepts, be sure to read the &lt;a href="https://docs.communityhealthtoolkit.org/apps/tutorials/local-setup/">guide on a Local Setup&lt;/a>. Note that while this is for CHT 4.x, the concepts apply to 3.x.&lt;/p>
&lt;/div>
&lt;p>Before beginning any of these guides, be sure to meet all of the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/requirements/">CHT hosting requirements&lt;/a> first.&lt;/p>
&lt;p>To host a production instance of CHT, use either the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/ec2-setup-guide/">AWS&lt;/a> or &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/self-hosting/">Self&lt;/a> hosting guides. To do app development, see our &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/app-developer/">App Developer&lt;/a> hosting guide.&lt;/p>
&lt;p>To view 4.x hosting options, see the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/4.x/">4.x hosting section&lt;/a>&lt;/p></description></item><item><title>Apps: 4.x</title><link>https://docs.communityhealthtoolkit.org/apps/guides/hosting/4.x/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/hosting/4.x/</guid><description>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
To get an overview on how these hosting solutions use &lt;code>docker&lt;/code> and &lt;code>docker-compose&lt;/code>, as well as other key CHT concepts, be sure to read the &lt;a href="https://docs.communityhealthtoolkit.org/apps/tutorials/local-setup/">guide on a Local Setup&lt;/a>.
&lt;/div>
&lt;p>Before beginning any of these guides, be sure to meet all of the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/requirements/">CHT hosting requirements&lt;/a> first.&lt;/p>
&lt;p>To host a production instance of CHT, use either the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/4.x/self-hosting-single-node/">Self Hosting in CHT 4.x&lt;/a> guide. To do app development, see our &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/4.x/app-developer/">App Developer&lt;/a> hosting guide.&lt;/p>
&lt;p>To view 3.x hosting options, see the &lt;a href="https://docs.communityhealthtoolkit.org/apps/guides/hosting/3.x/">3.x hosting section&lt;/a>&lt;/p></description></item></channel></rss>