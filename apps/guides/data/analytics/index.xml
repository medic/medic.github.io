<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Synchronization and Analytics on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/</link><description>Recent content in Data Synchronization and Analytics on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction &amp; Prerequisites to data synchronization and analytics</title><link>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/introduction/</guid><description>The pages in this section apply to both CHT 3.x (beyond 3.12) and CHT 4.x.
CHT Sync schema differs from CHT Couch2pg.
Most CHT deployments require some sort of analytics so that stakeholders can make data driven decisions. CouchDB, which is the database used by the CHT, is not designed for analytics. It is a document database, which means that it is optimized for storing and retrieving documents, and not for aggregating data.</description></item><item><title>Local CHT Sync Setup</title><link>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/setup/</guid><description>Before setting up CHT Sync in production, it&amp;rsquo;s very handy to be able to run it locally. This will allow you to experiment with the data flow and easily query development data quickly and locally.
These instructions assume you&amp;rsquo;re running CHT Sync, CHT Core and PostgreSQL either locally on your workstation or on a local server. They are not meant to be used to deploy a secure, always on production instance.</description></item><item><title>Production CHT Sync Setup</title><link>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/production/</guid><description>We recommend running cht-sync in production using Kubernetes. This guide will walk you through setting up a production deployment of CHT Sync with the CHT using Kubernetes.
Pre-requisites: A Kubernetes cluster: You can use a managed Kubernetes service like Google Kubernetes Engine (GKE), Amazon Elastic Kubernetes Service (EKS), or Azure Kubernetes Service (AKS), or you can set up a cluster using a tool like Minikube. kubectl: The Kubernetes command-line tool. You can install it using the kubectl installation instructions.</description></item><item><title>Environment Variables</title><link>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/environment-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/data/analytics/environment-variables/</guid><description>There are three environment variable groups in the .env file. To successfully set up CHT Sync, it is important to understand the difference between them.
POSTGRES_: Used by PostgreSQL to establish the PostgreSQL database to synchronize CouchDB data to. They define the schema and table names to store the CouchDB data, as well as where the tables and views for the models defined in CHT_PIPELINE_BRANCH_URL will be created. COUCHDB_: Used by CouchDB to define the CouchDB instance to sync with.</description></item></channel></rss>