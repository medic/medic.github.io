<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ Messaging and SMS</title><link>https://docs.communityhealthtoolkit.org/apps/guides/messaging/</link><description>Recent content in Messaging and SMS on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://docs.communityhealthtoolkit.org/apps/guides/messaging/index.xml" rel="self" type="application/rss+xml"/><item><title>Apps: Messaging Gateways</title><link>https://docs.communityhealthtoolkit.org/apps/guides/messaging/gateways/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/messaging/gateways/</guid><description/></item><item><title>Apps: SMS message states</title><link>https://docs.communityhealthtoolkit.org/apps/guides/messaging/sms-states/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/messaging/sms-states/</guid><description>
&lt;h2 id="interaction-with-sms-providers">Interaction with SMS providers&lt;/h2>
&lt;p>&lt;a href="https://github.com/medic/cht-core">CHT Applications&lt;/a> can use &lt;a href="https://github.com/medic/cht-gateway">CHT Gateway&lt;/a> and third party aggregators to send and receive SMS messages.&lt;/p>
&lt;p>When an SMS report comes in from a user, &lt;a href="https://github.com/medic/medic-sentinel">medic-sentinel&lt;/a> adds the appropriate list of scheduled messages (to be sent at a future date) to the report doc.&lt;/p>
&lt;p>Periodically, sentinel checks for messages that need to be sent, and &lt;a href="https://github.com/medic/medic-sentinel/blob/master/schedule/due_tasks.js">sets their state to &lt;code>pending&lt;/code>&lt;/a> if their scheduled sending time has been reached or passed.&lt;/p>
&lt;p>Periodically, the aggregator checks for messages that need to be sent (i.e. that are in &lt;code>pending&lt;/code> state).&lt;/p>
&lt;p>The aggregator also reports on the status of the messages it&amp;rsquo;s sending.&lt;/p>
&lt;h2 id="message-statusesstates">Message statuses/states&lt;/h2>
&lt;p>Both webapp and the aggregator store states/statuses of the messages to keep track of the exchange. They each have their set of statuses, which sometimes are called the same but do not mean the same thing. Watch out.&lt;/p>
&lt;h3 id="message-statuses-in-cht-gateway">Message statuses in cht-gateway&lt;/h3>
&lt;p>See &lt;a href="https://github.com/medic/cht-gateway#user-content-content">https://github.com/medic/cht-gateway#content&lt;/a>&lt;/p>
&lt;h3 id="message-states-in-medic">Message states in medic&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>State&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>scheduled&lt;/td>
&lt;td>Not yet due. Messages as part of a configured schedule start in this state and are changed to &lt;code>pending&lt;/code> when due.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pending&lt;/td>
&lt;td>Due to be sent. The SMS gateway should pick this up for sending. Auto replies and instant messages start in this state.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>forwarded-to-gateway&lt;/td>
&lt;td>Message has been sent to gateway.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>received-by-gateway&lt;/td>
&lt;td>Has been received by the gateway.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>forwarded-by-gateway&lt;/td>
&lt;td>Gateway has tried sending the message.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sent&lt;/td>
&lt;td>Successfully delivered to the sms network.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>delivered&lt;/td>
&lt;td>Successfully received by the recipient&amp;rsquo;s device.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>failed&lt;/td>
&lt;td>The sending attempt failed. Sending will not be retried without user intervention.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>denied&lt;/td>
&lt;td>This will not be sent. The recipient phone number is configured to be denied via &lt;code>outgoing_deny_list&lt;/code>, &lt;code>outgoing_deny_with_alphas&lt;/code>, or &lt;code>outgoing_deny_shorter_than&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cleared&lt;/td>
&lt;td>This will not be sent as a report has triggered an event to stop it. This can happen if a patient visit has occurred before the visit reminder is sent.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>muted&lt;/td>
&lt;td>This will not be sent as the task has been deliberately stopped. Messages in this state can be unmuted by user action.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="timeline-of-the-cht-gateway-protocol-for-webapp-originating-message">Timeline of the cht-gateway protocol for webapp-originating message&lt;/h2>
&lt;p>Read the table below like a vertical timeline : each time an event happens, the states/statuses corresponding to the message get updated.&lt;/p>
&lt;p>Note 1 : Gateway only sends a status update for a message only if the &amp;ldquo;needs forwarding&amp;rdquo; flag for the message status is true, and then sets it back to false. So it only sends status updates once.&lt;/p>
&lt;p>Note 2 : If api sends the same WO message again, then gateway sets its needs forwarding flag to true, and so sends the status at the next poll.&lt;/p>
&lt;p>Note 3 : not all of the events below happen every time : this is assuming only one step of SMS-sending happens between each poll. If several steps happened, then some of the events below are skipped. If several status changes have happened between polls, Gateway will report the multiple new statuses at the next poll.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>number&lt;/th>
&lt;th>Event&lt;/th>
&lt;th>webapp state&lt;/th>
&lt;th>gateway status&lt;/th>
&lt;th>gateway &amp;ldquo;Needs forwarding&amp;rdquo; flag&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>Due date to send the message passes&lt;/td>
&lt;td>pending&lt;/td>
&lt;td>&amp;mdash;&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>Gateway polls and gets a new WO message&lt;/td>
&lt;td>forwarded-to-gateway&lt;/td>
&lt;td>&amp;mdash;&lt;/td>
&lt;td>&amp;mdash;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>Gateway saves message in its DB&lt;/td>
&lt;td>forwarded-to-gateway&lt;/td>
&lt;td>UNSENT&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>Gateway reports UNSENT status for the message&lt;/td>
&lt;td>received-by-gateway&lt;/td>
&lt;td>UNSENT&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>Gateway sends the message&lt;/td>
&lt;td>received-by-gateway&lt;/td>
&lt;td>PENDING&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td>Gateway reports PENDING status for the message&lt;/td>
&lt;td>forwarded-by-gateway&lt;/td>
&lt;td>PENDING&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7&lt;/td>
&lt;td>Gateway gets confirmation the message left&lt;/td>
&lt;td>forwarded-by-gateway&lt;/td>
&lt;td>SENT&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>Gateway reports SENT status for the message&lt;/td>
&lt;td>sent&lt;/td>
&lt;td>SENT&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9&lt;/td>
&lt;td>Gateway gets confirmation the message arrived&lt;/td>
&lt;td>sent&lt;/td>
&lt;td>DELIVERED&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>Gateway reports DELIVERED status for the message&lt;/td>
&lt;td>delivered&lt;/td>
&lt;td>DELIVERED&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Apps: Short Contact Identifiers</title><link>https://docs.communityhealthtoolkit.org/apps/guides/messaging/shortcodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/messaging/shortcodes/</guid><description>
&lt;p>Short unique identifiers for contacts are often used to identify contacts in messaging workflows. Unique short codes are generated on &lt;code>doc.patient_id&lt;/code> against any document of a &lt;code>person&lt;/code> &lt;code>type&lt;/code>, and on every &lt;code>doc.place_id&lt;/code> against any document of a &lt;code>place&lt;/code> &lt;code>type&lt;/code>. By default, these IDs start at 5 numeric digits long, and will increase in length as deemed necessary by the generation algorithm.&lt;/p>
&lt;p>If the length is increased, this increase is stored in a CouchDB documented called &lt;code>shortcode-id-length&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;shortcode-id-length&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;current_length&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuring-a-minimum-length">Configuring a minimum length&lt;/h2>
&lt;p>If you wish to change the minimum length of the generated identifiers, create or edit the &lt;code>shortcode-id-length&lt;/code> document in CouchDB. For example, if you wish for the minimum length to be 7:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;shortcode-id-length&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;current_length&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If this file already exists be sure to include the existing &lt;code>_rev&lt;/code> property.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If you are changing this document and want to make it relevant straight away, &lt;strong>you must restart Sentinel.&lt;/strong> Otherwise there may be a collection of cached already accepted IDs of the previous length that Sentinel will work through first.
&lt;/div>
&lt;h2 id="configuring-a-maximum-length-locking-down-an-exact-length-etc">Configuring a maximum length, locking down an exact length etc&lt;/h2>
&lt;p>It is not possible to either alter the maximum length of IDs, to stop it automatically increasing, or to tweak when it decides to automatically increase. IDs automatically increasing in length when required is important to the continual correct functioning of Sentinel.&lt;/p>
&lt;h2 id="valid-sizes">Valid sizes&lt;/h2>
&lt;p>The shortcode identifiers can be between 5 and 13 digits long. Due to the last digit being a checksum digit, there are at most 10,000 5 digit ids, and at most 1,000,000,000,000 13 digit IDs.&lt;/p></description></item><item><title>Apps: Message Loops</title><link>https://docs.communityhealthtoolkit.org/apps/guides/messaging/message-loops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/messaging/message-loops/</guid><description>
&lt;p>Endless messaging loops can between the webapp and a mobile number via the gateway due to autoreplies from the webapp.&lt;/p>
&lt;p>See the &lt;a href="https://github.com/medic/cht-core/issues/750">Github Issue&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Solution:&lt;/strong> Add the offending number(e.g &lt;code>800&lt;/code> or &lt;code>SAFARICOM&lt;/code>) to the &lt;code>Outgoing Deny List&lt;/code> in the webapp&amp;rsquo;s &lt;code>app_settings&lt;/code> configuration file.&lt;/p>
&lt;pre tabindex="0">&lt;code> &amp;#34;multipart_sms_limit&amp;#34;: 10,
&amp;#34;outgoing_deny_list&amp;#34;: &amp;#34;800, SAFARICOM&amp;#34;,
&amp;#34;contact_summary&amp;#34;: &amp;#34;&amp;#34;
&lt;/code>&lt;/pre></description></item></channel></rss>