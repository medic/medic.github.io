<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debugging Applications on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/apps/guides/debugging/</link><description>Recent content in Debugging Applications on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/apps/guides/debugging/index.xml" rel="self" type="application/rss+xml"/><item><title>Obtaining Browser and Phone Logs</title><link>https://docs.communityhealthtoolkit.org/apps/guides/debugging/obtaining-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/debugging/obtaining-logs/</guid><description>There are many places where useful logs reside. This details all those places, and the easiest way to get a hold of them.
On a laptop or desktop To check if there are relevant logs open up the developer console in your browser. The shortcut is probably COMMAND+OPTION+I on MacOS, or CTRL+SHIFT+I on Linux and Windows. Click the console tab and copy out any errors or logging that you think is relevant.</description></item><item><title>Replicating Production Data Locally</title><link>https://docs.communityhealthtoolkit.org/apps/guides/debugging/replicating-production-data-locally/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/debugging/replicating-production-data-locally/</guid><description>Sometimes there will be a production problem that you need to dig into locally to solve. This guide explains how to:
Copy the data from an instance to a local CouchDB database Run a local webapp instance with that data First, a note about data safety Production data is medical data. It&amp;rsquo;s HIV statuses and pregnancies. It&amp;rsquo;s important, and it&amp;rsquo;s not yours. If you&amp;rsquo;re downloading it, do so on an encrypted drive and delete it once you&amp;rsquo;re done with it.</description></item><item><title>Securely Sharing Your Development Environment</title><link>https://docs.communityhealthtoolkit.org/apps/guides/debugging/secure-sharing-of-developer-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/debugging/secure-sharing-of-developer-instance/</guid><description>Warning Be extra careful with this process! The end result will be that your development instance will be accessible to the internet. If you have simple logins and passwords like &amp;ldquo;admin/test.223&amp;rdquo; because you thought it was just your local dev instance and it doesn&amp;rsquo;t matter, now it matters! Whenever you&amp;rsquo;re not using the SSH tunnel for testing, shut it down so there&amp;rsquo;s no more remote access.
Never expose a development instance to the internet where you&amp;rsquo;ve replicated production data locally.</description></item><item><title>Sharing 4.x Logs</title><link>https://docs.communityhealthtoolkit.org/apps/guides/debugging/sharing-4x-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/apps/guides/debugging/sharing-4x-logs/</guid><description>CHT 4.x moves from a monolithic container MedicOS to discrete containers, each service hosting one service of the CHT. When troubleshooting an issue with your CHT instance, it can be hard to list each container, see it&amp;rsquo;s status, gather up logs for each container and then share all this information with Medic or other support staff. To ease this pain, a script was written which automates the process.
Prerequisites This assumes you&amp;rsquo;re running CHT 4.</description></item></channel></rss>