<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker Production Hosting in CHT 4.x on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/</link><description>Recent content in Docker Production Hosting in CHT 4.x on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Production Hosting in CHT 4.x - Single CouchDB Node</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/single-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/single-node/</guid><description>This for a single node CHT 4.x instance and is the recommended solution for small deployments. If you want a more powerful setup, check out the 4.x multi-node install docs.
PrerequisitesBe sure you have followed the requirements document including installing Docker and Docker Compose. This guide assumes you&amp;rsquo;re using the ubuntu user and that it has sudo-less access to Docker.
Directory Structure Create the following directory structure:
|-- /home/ubuntu/cht/ |-- compose/ |-- certs/ |-- couchdb/ |-- upgrade-service/ By calling this mkdir commands:</description></item><item><title>Production Hosting in CHT 4.x - Multiple CouchDB Nodes on Docker Swarm</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/multiple-nodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/multiple-nodes/</guid><description>The clustered multi-node hosting described below is recommended for deployments that need increased performance gains but keep the ease of Docker. This guide assumes you want better performance than a single node deployment and have a host which has been vertically scaled with a large amount of CPUs (&amp;gt;16) and has a decent amount of RAM (&amp;gt;64GB). If the host is not sufficiently scaled, there&amp;rsquo;s no benefit over single node deployments.</description></item><item><title>Adding TLS certificates in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/adding-tls-certificates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/adding-tls-certificates/</guid><description>By default, CHT 4.x will create a self-signed certificate for every deployment. These instructions are for changing to either a pre-existing certificate or automatically creating and renewing a Certbot based certificate using ACME, like Let&amp;rsquo;s Encrypt.
This guide assumes you&amp;rsquo;ve already met the hosting requirements, specifically around Docker being installed.
Pre-existing certificateTo load your certificates into your CHT instance, we&amp;rsquo;ll be creating an interstitial container called cht-temp-tls which will enable you to copy your local certificate files into the native docker volume.</description></item><item><title>Viewing server logs in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/logs/</guid><description>CHT 4.x has the following services running via Docker and each can have its logs queried:
nginx sentinel api haproxy couchdb healthcheck upgrade-service Setting log levelBy default, the CHT server logs are set to the info level. To change the log level to debug, you can set the NODE_ENV environment variable to development. A log level of debug can affect system performance and cause log files sizes to grow rapidly. It is recommended to temporarily set the log level to debug only when needed for troubleshooting.</description></item><item><title>Backups in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/backups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/backups/</guid><description>This guide is about backups in CHT 4.x - there&amp;rsquo;s the self hosted guide for 3.x which includes backups for 3.x.
IntroductionAs CHT 4.x uses a container per service, the only data that needs to be backed up is:
CouchDB database Docker Compose and .env files TLS certificates This is because Docker containers are inherently stateless so all the important binaries are already stored in CHT&amp;rsquo;s Docker images. Docker Compose files, including the .</description></item><item><title>Docker Directory Setup</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/_partial_docker_directories/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/_partial_docker_directories/</guid><description>Create the following directory structure:
|-- /home/ubuntu/cht/ |-- compose/ |-- certs/ |-- couchdb/ |-- upgrade-service/ By calling this mkdir commands:
mkdir -p /home/ubuntu/cht/{compose,certs,upgrade-service,couchdb} compose - docker-compose files for cht-core and CouchDB certs - TLS certificates directory upgrade-service - where docker-compose file for the upgrade-service couchdb - the path for the docker-compose file of the upgrade-service (not used in multi-node)</description></item><item><title>Upgrading the cht-upgrade-service</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/_partial_upgrade_service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/_partial_upgrade_service/</guid><description>Upgrading the cht-upgrade-serviceThe CHT Upgrade Service provides an interface between the CHT Core API and Docker to allow easy startup and one-click upgrades from the CHT Admin UI. Occasionally, the CHT Upgrade Service, itself, will need to be upgraded. If an upgrade is available, it is highly recommended that you install the upgrade for the CHT Upgrade Service before performing further upgrades on your CHT instance. This is done via the following steps:</description></item></channel></rss>