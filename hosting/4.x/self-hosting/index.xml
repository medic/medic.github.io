<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Self Hosting in CHT 4.x on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/</link><description>Recent content in Self Hosting in CHT 4.x on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/index.xml" rel="self" type="application/rss+xml"/><item><title>Self Hosting in CHT 4.x - Single CouchDB Node</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/single-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/single-node/</guid><description>This for a single node CHT 4.x instance and is the recommended solution for small deployments. If you want a more powerful setup, check out the 4.x multi-node install docs.
Prerequisites Be sure you have followed the requirements document including installing Docker and Docker Compose. This guide assumes you&amp;rsquo;re using the ubuntu user and that it has sudo-less access to Docker.
Directory Structure Create the following directory structure:
|-- /home/ubuntu/cht/ |-- compose/ |-- certs/ |-- couchdb/ |-- upgrade-service/ By calling this mkdir commands:</description></item><item><title>Self Hosting in CHT 4.x - Multiple CouchDB Nodes on Docker Swarm</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/multiple-nodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/multiple-nodes/</guid><description>The clustered multi-node hosting described below is recommended for deployments that need increased performance gains. These gains will increase the complexity of troubleshooting and decrease the ease ongoing maintenance.
If you are unsure which deployment to use check out Self-hosting recommendations.
About clustered deployments In a clustered CHT setup, there are multiple CouchDB nodes responding to users. The ability to horizontally scale a CHT instance was added in version CHT 4.</description></item><item><title>Self Hosting in CHT 4.x - Multiple CouchDB Nodes on k3s on VMWare</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/self-hosting-k3s-multinode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/self-hosting-k3s-multinode/</guid><description>This page covers an example k3s cluster setup on a VMware datacenter with vSphere 7+ for a national deployment across 50 counties capable of supporting 20,000+ CHWs concurrently. After setup, administrators should only add VMs to the cluster or deploy CHT Core projects to be orchestrated.
About container orchestration A container orchestrator helps easily allocate hardware resources spread across a datacenter. For national scale projects, or a deployments with a large number of CHT Core instances, Medic recommends a lightweight Kubernetes orchestrator called k3s.</description></item><item><title>Upgrading the cht-upgrade-service</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/_partial_upgrade_service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/self-hosting/_partial_upgrade_service/</guid><description>Upgrading the cht-upgrade-service The CHT Upgrade Service provides an interface between the CHT Core API and Docker to allow easy startup and one-click upgrades from the CHT Admin UI. Occasionally, the CHT Upgrade Service, itself, will need to be upgraded. If an upgrade is available, it is highly recommended that you install the upgrade for the CHT Upgrade Service before performing further upgrades on your CHT instance. This is done via the following steps:</description></item></channel></rss>