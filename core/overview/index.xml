<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview of CHT Components on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/core/overview/</link><description>Recent content in Overview of CHT Components on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/core/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Architecture of CHT Instances</title><link>https://docs.communityhealthtoolkit.org/core/overview/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/architecture/</guid><description>Overview ServerCHT Core FrameworkThe cht-core product is the primary component of the CHT. The server comes with authentication, role based authorization, data security, and a range of protected data access endpoints. Read more detail in cht-core GitHub repository.
APIA NodeJS service which runs on the server and provides security and APIs for browsers and integrations. It also includes a custom implementation of filtered replication to allow it to support more concurrent users.</description></item><item><title>CHT Watchdog</title><link>https://docs.communityhealthtoolkit.org/core/overview/watchdog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/watchdog/</guid><description>OverviewCHT Watchdog is deployed on a separate server so that you can watch for, and alert on, any critical issues with the CHT Core. Read more about setting up CHT Watchdog.
GrafanaGrafana is a dashboard visualization and alerting software. It is open source and an industry standard for this task. There is an free repository of pre-existing dashboards which greatly reduce the time to create new dashboards and alerts. It can send alerts via email, Slack, SMS and many more.</description></item><item><title>CHT App Configurer</title><link>https://docs.communityhealthtoolkit.org/core/overview/cht-conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/cht-conf/</guid><description>InstallationRead more about setting up CHT Conf.
Currently SupportedThe different items that are supported by CHT Conf include:
Settings Compile app settings from: tasks rules schedules contact-summary purge App settings can also be defined in a more modular way by having the following files in app_settings folder: base_settings.json forms.json schedules.json Backup app settings from server Upload app settings to server Upload resources to server Upload custom translations to the server Upload privacy policies to server Upload branding to server Upload partners to server Forms Fetch from Google Drive and save locally as .</description></item><item><title>CHT Sync</title><link>https://docs.communityhealthtoolkit.org/core/overview/cht-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/cht-sync/</guid><description>OverviewCHT Sync is an integrated solution designed to enable data synchronization between CouchDB and PostgreSQL for the purpose of analytics. It combines several technologies to achieve this synchronization and provides an efficient workflow for data processing and visualization. The synchronization occurs in near real-time, ensuring that the data displayed on dashboards is up-to-date.
Read more about setting up CHT Sync.
CHT Sync replicates data from CouchDB to PostgreSQL in a near real-time manner.</description></item><item><title>Database schema conventions</title><link>https://docs.communityhealthtoolkit.org/core/overview/db-schema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/db-schema/</guid><description>CouchDB (and PouchDB in the browser) is a JSON-based NoSQL datastore that we use to store our data. While unlike SQL databases there is no enforced schema, code still follows conventions, and this document aims to describe the schema as defined by how our code operates.
In this document &amp;ldquo;record&amp;rdquo; means a JSON object that resides in CouchDB or PouchDB.
General record data structure Property Description Required by _id CouchDB&amp;rsquo;s unique identifier of the record all records _rev CouchDB&amp;rsquo;s revision marker all records type The general type of the document, see below all user-created* documents reported_date Numerical timestamp of when the document is first created all user-created documents User-created documents here generally means contacts and reports, but may extend further.</description></item><item><title>Offline-First in the CHT</title><link>https://docs.communityhealthtoolkit.org/core/overview/offline-first/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/offline-first/</guid><description>IntroductionCHT applications are designed to be used equally well in areas with no internet connectivity, slow or unreliable internet connectivity, and good internet connectivity. Achieving reliable performance and powerful features requires diligence and strict adherence to the principles of Offline-First development.
In this page we&amp;rsquo;ll cover why and how we achieve this in the CHT.
Why this is importantThe CHT is designed to improve healthcare in the hardest to reach communities.</description></item><item><title>Installation as a Progressive Web App</title><link>https://docs.communityhealthtoolkit.org/core/overview/pwa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/pwa/</guid><description>What is a Progressive Web App (PWA)?A PWA is a web application that can be used like a website in the browser, but the user can choose to &amp;ldquo;install&amp;rdquo; it. This means a shortcut is added to the home screen of the device, and when the application is run it doesn&amp;rsquo;t have the usual browser address bar and tabs so it looks like a regular application.
The CHT Core webapp has been developed to be a PWA to give users more choice about how applications are installed.</description></item><item><title>Test Data Generator</title><link>https://docs.communityhealthtoolkit.org/core/overview/test-data-generator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/test-data-generator/</guid><description>Test Data Generator for CHT Test Instances Warning It is not recommended to use this tool to push data into production instances. Design the test data that fits your project hierarchy and reports. The tool will generate CouchDB docs and push them into your CHT test instance.
Technologies and Packages Used TypeScript Axios UUID Faker Minimum System Requirements npm &amp;gt;= 10.2.4 node &amp;gt;= 20.11.0 Setup and Getting StartedInstructions on setting up the project and getting it running on a local machine:</description></item><item><title>Data Flows for Analytics</title><link>https://docs.communityhealthtoolkit.org/core/overview/data-flows-for-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/data-flows-for-analytics/</guid><description>In this section, we focus on how data flows through the various components of the Community Health Toolkit. The CHT is built to support the delivery of quality community health care at the last mile. The CHT is designed to work in areas with low connectivity, which means it is an Offline-First toolkit for care provision. The architectural and technology choices in the stack are mostly guided by this principle, which will be evident in the discussion of the data management pipeline.</description></item><item><title>Sentinel Transitions</title><link>https://docs.communityhealthtoolkit.org/core/overview/transitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/transitions/</guid><description>A transition is a Javascript code that runs when a document is changed. A transition can edit the changed doc or do anything server-side code can do for that matter.
Transitions are run in series, not in parallel:
For a given change, you can expect one transition to be finished before the next runs.
You can expect one change to be fully processed by all transitions before the next starts being processed.</description></item></channel></rss>