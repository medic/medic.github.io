<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to the documentation for the CHT on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/</link><description>Recent content in Welcome to the documentation for the CHT on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Accessing CHT Apps</title><link>https://docs.communityhealthtoolkit.org/building/concepts/access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/concepts/access/</guid><description>Apps built with the Core Framework run on most modern computers with the newest versions of Google Chrome or Mozilla Firefox.
Hardware &amp;amp; Software RequirementsHardware procurement, ownership, and management is the responsibility of each implementing organization. We strongly urge all organizations to procure hardware locally to ensure ease of replacement, repair, sustainability, and hardware support when needed.
Accessing on DesktopOn desktop devices, there is no need to download anything. Simply go to a web browser and type in your unique URL, for example:</description></item><item><title>API to interact with CHT Applications</title><link>https://docs.communityhealthtoolkit.org/building/reference/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/api/</guid><description>This page covers the endpoints to use when integrating with the CHT server. If there isn&amp;rsquo;t an endpoint that provides the function or data you need, direct access to the database is possible via the CouchDB API. Access to the PostgreSQL database may also prove useful for data analysis. If additional endpoints would be helpful, please make suggestions via a GitHub issue.
Settings GET /api/v1/settings PUT /api/v1/settings Query Parameters Export GET /api/v2/export/dhis GET /api/v2/export/reports Query parameters GET /api/v2/export/messages Output Examples GET /api/v2/export/feedback Query Parameters GET /api/v2/export/contacts Output Query parameters GET /api/v2/export/user-devices Output Forms GET /api/v1/forms Headers Examples GET /api/v1/forms/{{id}}.</description></item><item><title>app</title><link>https://docs.communityhealthtoolkit.org/building/forms/app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/app/</guid><description>App forms are used for care guides within the web app, whether accessed in browser or via the Android app. When a user completes an app form, the contents are saved in the database with the type data_record. These docs are known in the app as Reports.
App forms are defined by the following files:
A XML form definition using a CHT-enhanced ODK XForm format A XLSForm form definition, easier to write and converts to the XForm (optional) Meta information in the {form_name}.</description></item><item><title>Building Contact Summary</title><link>https://docs.communityhealthtoolkit.org/building/contact-summary/contact-summary-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-summary/contact-summary-overview/</guid><description>This tutorial will take you through building a contact summary for CHT applications.
Contact summaries display basic information about the contact.
You will be adding a contact summary that displays information about a person&amp;rsquo;s patient id, age, sex, phone number, and information about the place they belong to ie. parent.
Brief Overview of Key ConceptsEach field that can be shown on a contact’s profile is defined as an object in the fields array of contact-summary.</description></item><item><title>Configuring CHT Application Graphics</title><link>https://docs.communityhealthtoolkit.org/building/branding/application-graphics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/branding/application-graphics/</guid><description>This tutorial will take you through customising some graphical elements of CHT core.
You will cover site branding, partner logos, header tab icons, and app icons (used in tasks, targets, and contacts).
Required ResourcesYou should have a functioning CHT instance with cht-conf installed locally and completed a project folder setup.
Implementation Steps1. Site brandingYou have the ability to modify the app title, logo, and favicon. For Progressive Web App installations you can also configure the desktop icon.</description></item><item><title>Architecture of CHT Instances</title><link>https://docs.communityhealthtoolkit.org/core/overview/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/architecture/</guid><description>Overview ServerCHT Core FrameworkThe cht-core product is the primary component of the CHT. The server comes with authentication, role based authorization, data security, and a range of protected data access endpoints. Read more detail in cht-core GitHub repository.
APIA NodeJS service which runs on the server and provides security and APIs for browsers and integrations. It also includes a custom implementation of filtered replication to allow it to support more concurrent users.</description></item><item><title>CHT Core dev environment setup</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/dev-environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/dev-environment/</guid><description>Note This guide assumes you are a CHT Core developer wanting to run the CHT Core from source code to make commits to the public GitHub repository. To set up your environment for developing apps, see the app guide.
To deploy the CHT in production, see either AWS hosting or Self hosting
Note These steps apply to both 3.x and 4.x CHT core development, unless stated otherwise. The Happy Path InstallationCHT Core development can be done on Linux, macOS, or Windows (using the Windows Subsystem for Linux (WSL2)).</description></item><item><title>CHT Watchdog</title><link>https://docs.communityhealthtoolkit.org/core/overview/watchdog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/watchdog/</guid><description>OverviewCHT Watchdog is deployed on a separate server so that you can watch for, and alert on, any critical issues with the CHT Core. Read more about setting up CHT Watchdog.
GrafanaGrafana is a dashboard visualization and alerting software. It is open source and an industry standard for this task. There is an free repository of pre-existing dashboards which greatly reduce the time to create new dashboards and alerts. It can send alerts via email, Slack, SMS and many more.</description></item><item><title>Professionalized Community Health Worker (CHW), Janet</title><link>https://docs.communityhealthtoolkit.org/design/personas/chw-janet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/chw-janet/</guid><description>CHWs are the central users of apps built with the Core Framework. CHWs conduct household visits and are responsible for the health of their community. CHWs are known and trusted locally and typically live in and are chosen by their community. Their degree of health training, responsibilities, and support depends upon their country and program. The majority of CHWs are women, ranging from 25-60 years old.
&amp;ldquo;It took a while to be trusted.</description></item><item><title>Colors</title><link>https://docs.communityhealthtoolkit.org/design/interface/colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/interface/colors/</guid><description>ColorsColor helps users interpret and interact with app content by establishing a hierarchy of information, highlighting actions, indicating states, and conveying meaning.
Primary colorsThese are the primary colors of the navigation tabs. When necessary, use white #FFFFFF text over these colors.
Blue Periwinkle Pink Teal Yellow #63A2C6 #7193EE #F47B63 #76B0B0 #E9AA22 rgb(99, 162, 198) rgb(113, 147, 238) rgb(244, 123, 99) rgb(118, 176, 176) rgb(233, 170, 34) Messages Tasks People Targets Reports Secondary colorsThese are the secondary (highlight) colors of the navigation tabs.</description></item><item><title>Contacts and Users</title><link>https://docs.communityhealthtoolkit.org/building/contact-management/contacts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-management/contacts/</guid><description>“People” is the generic name used for individuals in apps built with the Core Framework. They can be patients, family members, nurses or health workers. Anyone with a profile in your app is a person.
“Places” is the generic name that represents a level in the hierarchy. “People” belong to “places”, and “places” belong to other higher level “places” in the hierarchy. A “place” could be a geographic area, like a district with the &amp;ldquo;people&amp;rdquo; associated to it being health officers.</description></item><item><title>Custom</title><link>https://docs.communityhealthtoolkit.org/building/integrations/custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/custom/</guid><description>The CHT Core Framework includes functionality that allows sharing data with any API-based system. Developers have configured CHT integrations with OpenMRS, KenyaEMR, Bahmni, DHIS2, RapidPro, Apache NiFi, OpenHIM, custom electronic medical records (EMR), and several other systems.
OverviewIntegrating a CHT App into your digital health ecosystem starts with identifying an integration use case. It&amp;rsquo;s important to first understand all the components present in the ecosystem (EMR, laboratory system, community health information system, etc) and then plan out what the workflow will look like operationally.</description></item><item><title>Feature Releases</title><link>https://docs.communityhealthtoolkit.org/contribute/code/releasing/feature_releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/releasing/feature_releases/</guid><description>To build and iterate on new features at a pace that is faster than our regular release cycle, some features are released in a Feature Release. Feature Releases (FRs) are based on the most recent release and only include improvements related to a feature being developed. These releases are tested to be production-ready so that new features can be studied with CHT partners in a live deployment, with the aim of getting the feature ready for wider use in an upcoming release.</description></item><item><title>Implementing Partners</title><link>https://docs.communityhealthtoolkit.org/design/personas/partners/implementers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/partners/implementers/</guid><description>Characteristics and Strengths May have influence and reach with the government to adopt and scale-up the new model of care Have a good understanding of the health needs of communities Have an appreciation for the role of digital technology in healthcare May have deployed, or are planning to deploy, digital health tools in the community health space Support government’s CHW networks, and may have fielded their own cadre of CHWs Are leveraging data and data science to innovate on new approaches to achieving desired health outcomes Have access to health systems data from the deployment of a new model of care May possess existing capacity, or are looking to build, the in-house capacity to deploy and implement digital health tools May have already invested significantly in proprietary locked-in software Keen to attract funding from large funders May have a presence in multiple countries Values Equitable access to quality health care Developing national and local capacities Cost-effectiveness Government and donor relations Harmonization and alignment to the national health strategies Integration with national digital health platforms Government adoption and ownership of their model of care Needs Government support and buy-in Funder backing and resources to design and deploy digital health programs HCD and data science capabilities May need further understanding and expertise in working with CHT and opensource tools</description></item><item><title>Maternal and Newborn Health Reference App</title><link>https://docs.communityhealthtoolkit.org/exploring/anc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/anc/</guid><description>This &amp;ldquo;reference application&amp;rdquo; for maternal and newborn health provides a template for structuring and organizing your Community Health Toolkit digital health app, its configuration, and test code. It can be used as is, or serve as a great way to learn about the CHT&amp;rsquo;s foundation for forms, data fields, and analytics that can be easily customized to fit your context.
Problem Being AddressedAccess to quality maternal and newborn care is the cornerstone of many community health programs.</description></item><item><title>Migration from CHT 3.x to CHT 4.x in EKS - Kubernetes</title><link>https://docs.communityhealthtoolkit.org/contribute/medic/data-migration-3x-eks-to-4x-eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/medic/data-migration-3x-eks-to-4x-eks/</guid><description>Like the Deploy to EKS guide, this guide is meant for Medic Teammates migrating Medic hosted CHT Core deployments. However, given there may be other users who will benefit from understanding the process, this document is published for all to read.
CHT Core hosting architecture differs entirely between 3.x and 4.x. When both versions are running in Kubernetes, migrating data requires specific steps using the couchdb-migration tool. This tool interfaces with CouchDB to update shard maps and database metadata.</description></item><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/building/interoperability/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/interoperability/overview/</guid><description>IntroductionInteroperability refers to the ability of different health information systems and applications to communicate with each other and exchange data seamlessly. With interoperability, patient information can be seen, exchanged, and used across different platforms. The information/data exchanged has to be understood across the different software for these systems to become interoperable. This is different from integration which requires custom development to connect two specific systems together.
Interoperability is the best practice for health systems because it allows information from one system to be shared with one or more other systems with no additional development.</description></item><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/building/messaging/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/overview/</guid><description>Messaging is a quick way to coordinate with other health workers. The Messages tab allows users to send a SMS message to any person or group of people in the app. Common uses of messages include asking questions, coordinating care logistics, providing encouragement or confirming training times.
The main list is a combination of both outgoing and incoming messages. Messages exchanged with the same person or group are organized into a thread, similar to messages in a phone’s messaging app.</description></item><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/building/targets/targets-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/targets/targets-overview/</guid><description>Targets is the user dashboard or analytics tab. The widgets on this tab provide a summary or analysis of the data in submitted reports. These widgets can be configured to track metrics for an individual CHW, for a Supervisor overseeing a group of CHWs, or for an entire health facility.
For CHWs, the Targets tab provides a quick summary of their progress towards their individual goals. For Supervisors, Nurses, and facility-based users, the Targets tab provides important insights into how their community unit is performing.</description></item><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/building/tasks/tasks-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/tasks-overview/</guid><description>Tasks help CHWs plan their day by prompting them to complete follow-up visits and other activities. The list might include upcoming scheduled ANC or Immunization visits, treatment or referral follow-ups, or other required activities such as a household survey.
Main List On the Tasks tab is a consolidated list of tasks for all people and families that the user looks after. The task definition determines how long the task will show on this list before and after it is due.</description></item><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/building/translations/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/translations/overview/</guid><description>Given that CHT applications are used around the world, the Core Framework was designed with localization in mind. The Core Framework is available in English, French, Hindi, Nepali, Spanish, Swahili, Arabic, and Indonesian.
Key ConceptsLocalization refers to setting up the desired language in CHT for the end user. See an outline of how to change language settings for CHT users in the dedicated section.
Translations refers to manually setting up extra translations of instance tabs texts or outgoing SMS text.</description></item><item><title>Prerequisites for App Development</title><link>https://docs.communityhealthtoolkit.org/building/prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/prerequisites/</guid><description>There are no set prerequisites for users of CHT apps, yet the following are helpful for developing CHT applications.
Test InstanceTo build your own application using the Core Framework you will need an instance set up for testing. You can set up a local instance by following these instructions.
Build toolThe build tool for applications using the Core Framework is cht-conf. To set it up, follow the installation instructions. To properly use the tool you will need your application files in set locations within a folder.</description></item><item><title>CHT hosting requirements</title><link>https://docs.communityhealthtoolkit.org/hosting/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/requirements/</guid><description>For production CHT deployments, Linux is recommended, with Ubuntu the most commonly used. For App Developer Hosting, Linux or macOS may be used. Windows can be used for either, but without recommendation.
Per the Kubernetes vs Docker page, CHT Core can be deployed with either Docker or Kubernetes.
CHT 3.x is End-of-Life and us no longer supported. All requirements below apply to CHT 4.x.
App Developer HostingThis leverages Docker and requires:</description></item><item><title>User Interviews</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/user-interviews/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/user-interviews/</guid><description>User interviews serve the purpose of uncovering opportunities for innovation and for illuminating solutions to problems.
Generative interviews are used in the discovery phase of the development process when you’re looking for opportunities to solve for. Scoped interviews are used when a topic of interest has been identified and you’d like to gain a deeper understanding.
Planning Identify your research objectives Develop your interview questions Establish timelines and resources required: Recording equipment Personnel Location, or connectivity if remote Here is a generative interview template</description></item><item><title>Why the Community Health Toolkit?</title><link>https://docs.communityhealthtoolkit.org/why-the-cht/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/why-the-cht/</guid><description>The Community Health Toolkit is a collection of open-source technologies and open-access resources developed by a community focused on global health equity. We envision a world where primary health care is equitable, accessible, and delivered by people who are trusted in their communities. Start with the CHT overview, and join our community forum!
Community health systems can dramatically improve the accessibility, quality, speed, and equity of primary health care, but only if health workers are effectively equipped and supported.</description></item><item><title>Development Workflow</title><link>https://docs.communityhealthtoolkit.org/contribute/code/workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/workflow/</guid><description>Writing codeWhere possible, follow the coding style guide.
Aim for self-documenting code. Where code cannot be made self-documenting add commenting. Usually comments are useful when they explain why some code exists, and should not be explaining what some code is doing.
Code QualitySeveral static analysis tools are used to support code quality. These tools are run automatically on every pull request and will fail the build if they find any issues.</description></item><item><title>Documentation Workflow</title><link>https://docs.communityhealthtoolkit.org/contribute/docs/workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/docs/workflow/</guid><description>Getting StartedAnyone can contribute to CHT documentation by opening an issue in the cht-docs repo or by using the “Edit this page” or “Create documentation issue” links in the upper right corner of your window.
Basics It is helpful to be comfortable with git and GitHub to contribute to the CHT community. The documentation source is in GitHub. The content pages are in the /content/en/ directory. Documentation is written in Markdown.</description></item><item><title>All The Things</title><link>https://docs.communityhealthtoolkit.org/contribute/medic/onboarding/all-the-things/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/medic/onboarding/all-the-things/</guid><description>This page is meant to serve as a point of conversation, with a wide range of topics to be discussed when joining Medic or starting as a contributor. Many things are not in any particular order. The goal is to convey a general “lay of the land” so someone starting can see a lot of what’s out there without having to be surprised each day as new things pop up.</description></item><item><title>Android</title><link>https://docs.communityhealthtoolkit.org/building/integrations/android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/android/</guid><description>The CHT Android application can be launched by clicking on a link or invoking an intent in another Android app. This is useful for enabling login by SMS, directing a user to a specific page, and integrating between Android applications.
Sending a URL When the user clicks on a link to a CHT instance from an SMS, email, WhatsApp, or any other app, Android will prompt the user to choose whether to open the URL in the Android app or the browser.</description></item><item><title>Android Dev Environment</title><link>https://docs.communityhealthtoolkit.org/contribute/code/android/development-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/android/development-setup/</guid><description>The following instructions allows you to setup a development environment for the CHT Android apps, and the CHT Gateway app as well.
Finally, you will learn how to assemble the app, run the tests, and how to choose the right artifacts when installing or publishing the apps.
Requirements Java 17+ (OpenJDK versions work). Android SDK, and optionally Android Studio. The adb command for debugging and get the logs. The source code.</description></item><item><title>Build commands</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/build-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/build-commands/</guid><description>CHT Core build commandsThese commands are defined in the package.json and can be executed with npm run &amp;lt;command&amp;gt; from the cht-core repository directory.
Development build commandsFor developers (humans) to execute to build cht-core.
Command Description build-ddocs Compiles all the DDocs and outputs them into /api/build/ddocs ready for deployment. build-dev Updates dependencies and builds all the applications. build-dev-watch Same as build-dev, but keeps watching for any code changes and automatically deploys on change.</description></item><item><title>CHT App Configurer</title><link>https://docs.communityhealthtoolkit.org/core/overview/cht-conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/cht-conf/</guid><description>CHT Conf is a command-line interface tool to manage and configure apps built using the CHT Core Framework.
InstallationRead more about setting up CHT Conf.
Currently SupportedThe different items that are supported by CHT Conf include:
Settings Compile app settings from: tasks rules schedules contact-summary purge App settings can also be defined in a more modular way by having the following files in app_settings folder: base_settings.json forms.json schedules.json Backup app settings from server Upload app settings to server Upload resources to server Upload custom translations to the server Upload privacy policies to server Upload branding to server Upload partners to server Forms Fetch from Google Drive and save locally as .</description></item><item><title>CHT Sync</title><link>https://docs.communityhealthtoolkit.org/core/overview/cht-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/cht-sync/</guid><description>OverviewCHT Sync is an integrated solution designed to enable data synchronization between CouchDB and PostgreSQL for the purpose of analytics. It combines several technologies to achieve this synchronization and provides an efficient workflow for data processing and visualization. The synchronization occurs in near real-time, ensuring that the data displayed on dashboards is up-to-date.
Read more about setting up CHT Sync.
CHT Sync replicates data from CouchDB to PostgreSQL in a near real-time manner.</description></item><item><title>CHW Supervisor, Ann</title><link>https://docs.communityhealthtoolkit.org/design/personas/chw-supervisor-ann/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/chw-supervisor-ann/</guid><description>The CHW supervisor is the person who trains and supports CHWs and helps them meet their monthly goals. Supervisors usually split their time between administrative duties at the local health facility and accompanying CHWs on their community visits.
“During refresher trainings, when I go there, it takes me 3 hours because I copy from one book to another.”
AboutMarried with two school-aged children Has one year of training in a health-related field Not originally from the community, but communicates effectively with the CHWs Salaried MOH employee Has a personal mobile phone that ranges from a feature phone to a smart phone, used for communication Has an email account primarily accessed via mobile phone</description></item><item><title>contact</title><link>https://docs.communityhealthtoolkit.org/building/forms/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/contact/</guid><description>Contact forms are used to create and edit contacts (persons and places). Each contact-type should ideally have two forms; one for creation, and another for editing.
These forms are stored in the forms/contact sub-folder of the project config directory. The naming convention used should be &amp;lt;contact_type_id-{create|edit}&amp;gt;.xlsx.
Form detailsSurvey sheetTo collect information about the contact, use a top-level group with the id of the contact_type as the name of the group (e.</description></item><item><title>contact-summary.templated.js</title><link>https://docs.communityhealthtoolkit.org/building/contact-summary/contact-summary-templated/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-summary/contact-summary-templated/</guid><description>Contact profile pages display basic information about the contact along with their history and upcoming tasks. A contact&amp;rsquo;s profile page is defined by the Fields, Cards, and Care Guides available.
Helper variables and functions for the contact summary can be defined in contact-summary-extras.js. There are several variables available to inspect to generate the summary information:
Variable Description contact The currently selected contact. This has minimal stubs for the contact.parent, so if you want to refer to a property on the parent use lineage below.</description></item><item><title>Contact and User Management - Part 1</title><link>https://docs.communityhealthtoolkit.org/building/contact-management/contact-and-users-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-management/contact-and-users-1/</guid><description>In this tutorial you will learn how to create and edit contacts and their associated users in and application built with the CHT using the default contact creation forms. This will help you get familiar with the UI of the webapp as well as some features and functionality. If you are already comfortable with this, you can skip to part 2, which covers manipulating contacts and their associated documents using cht-conf.</description></item><item><title>Database schema conventions</title><link>https://docs.communityhealthtoolkit.org/core/overview/db-schema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/db-schema/</guid><description>CouchDB (and PouchDB in the browser) is a JSON-based NoSQL datastore that we use to store our data. While unlike SQL databases there is no enforced schema, code still follows conventions, and this document aims to describe the schema as defined by how our code operates.
In this document &amp;ldquo;record&amp;rdquo; means a JSON object that resides in CouchDB or PouchDB.
General record data structure Property Description Required by _id CouchDB&amp;rsquo;s unique identifier of the record all records _rev CouchDB&amp;rsquo;s revision marker all records type The general type of the document, see below all user-created* documents reported_date Numerical timestamp of when the document is first created all user-created documents User-created documents here generally means contacts and reports, but may extend further.</description></item><item><title>Deploy CHT Core on Medic hosted EKS</title><link>https://docs.communityhealthtoolkit.org/contribute/medic/deploy-on-eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/medic/deploy-on-eks/</guid><description>While not directly available to the public who might be doing CHT Core development, having Medic&amp;rsquo;s process for using our Amazon Elastic Kubernetes Service (AWS EKS) publicly documented will help Medic employees new to EKS. As well, hopefully external developers looking to re-use Medic tools and process to use EKS will find it helpful.
While these instructions assume you work at Medic and have access to private GitHub repositories, many of the tools are fully open source.</description></item><item><title>Database document hydration</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/hydration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/hydration/</guid><description>Documents are connected with each other via their document _id. For example:
a contact document is connected to its parent by storing their _id in the parent property
a report document is connected to its submitter by storing their _id in the contact property
See Also: DB Schema
To optimize database storage, documents are &amp;ldquo;minified&amp;rdquo; when stored and are &amp;ldquo;hydrated&amp;rdquo; when they are used by the app.
MinificationMinification means replacing a linked document&amp;rsquo;s content with an object that only contains its uuid.</description></item><item><title>Focus Group Discussions</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/focus-group-discussions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/focus-group-discussions/</guid><description>Focus group discussions are a quick and convenient way to collect data from several users simultaneously. Use focus group discussions to gain insight into what users think about a topic or shared experience in a group setting and to learn about opinions, attitudes and preferences.
Planning Identify your research objectives Develop your focus group discussion guide Establish timelines and resources required: Recording equipment Stationary Personnel (facilitator, moderator) Location Mobile devices Here is a focused group discussion template</description></item><item><title>Getting started building a CHT app</title><link>https://docs.communityhealthtoolkit.org/building/local-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/local-setup/</guid><description>This tutorial will take you through setting up a local environment to build and test CHT applications on CHT version 4.x. This includes setting up the necessary tools to download and run the CHT public docker image as well as a command line interface tool to manage and build CHT apps.
By the end of the tutorial you should be able to:
View the login page to CHT webapp on localhost Upload default settings to localhost Note This guide will only work with CHT 4.</description></item><item><title>CHT Sync Setup with Kubernetes</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/setup-kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/setup-kubernetes/</guid><description>This guide will walk you through setting up a deployment of CHT Sync with the CHT using Kubernetes. This path is recommended if you already have a Kubernetes cluster hosting the CHT.
Prerequisites git A Kubernetes cluster: You can use a managed Kubernetes service like Google Kubernetes Engine (GKE), Amazon Elastic Kubernetes Service (EKS), or Azure Kubernetes Service (AKS), or you can set up a cluster using a tool like Minikube.</description></item><item><title>Local and Sub-National Governments</title><link>https://docs.communityhealthtoolkit.org/design/personas/partners/local-governments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/partners/local-governments/</guid><description>Characteristics and Strengths They are often led by locally elected political leaders and are motivated to demonstrate health impacts for continued political support Tend to be more accountable to local communities Have a thorough understanding of the local context and health needs of local communities They often have the legal and administrative mandate to set local health priorities, plan, allocate and mobilize resources, and deliver primary health care to their respective communities They are guided by national health strategy and community health strategy They are responsible for managing CHWs They are often motivated to adopt digital health technologies May have deployed, or are planning to deploy, digital health tools in the community health space Comparatively, they have less cumbersome bureaucratic processes and red-tape in building partnerships Values Health and well-being of their citizens Equitable access to quality health care services Social health protection of their constituencies Local leadership and decentralization in health Innovation and digital technologies in community health space High impact door-step health care Community participation Partnerships with non-state actors Cost-effectiveness Sustainability Needs Health systems strengthening support to keep up with growing population needs and tackle emerging public health challenges, e.</description></item><item><title>Localizing the CHT</title><link>https://docs.communityhealthtoolkit.org/building/translations/localizing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/translations/localizing/</guid><description>This section will take you through localizing the CHT to a custom language (in this guide, Swahili). This will include setting up the user interface labels as well as outgoing text messages.
By the end of the section you should be able to:
Change the CHT user interface labels to a custom language. Change outgoing text messages to a custom language (Swahili). Prerequisites A local CHT instance with cht-conf installed locally A project folder CHT Swahili translations in a messages-sw.</description></item><item><title>Navigating CHT Apps</title><link>https://docs.communityhealthtoolkit.org/building/concepts/navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/concepts/navigation/</guid><description>Summary of Page TabsPage tabs are the primary way to navigate apps built with the Core Framework. The number of tabs is variable depending on the user’s role and place in the hierarchy. For example, non-admin users don’t have Messages. The Reports tab is accessible to CHWs but often located inside the secondary menu drawer.
Messages​: A place for community-based staff to send and exchange messages Tasks​: This is a list of upcoming visits, follow-ups, or other required tasks Reports​: A detailed history of all forms submitted by CHWs and other staff People​: This is where profiles of districts, staff, CHWs and patients live Targets: Displays real-time visualizations of key activity and impact indicators The Menu Drawer Tap the menu icon in the upper right corner of the header to access other pages, edit personal settings, view sync status and more.</description></item><item><title>Offline-First in the CHT</title><link>https://docs.communityhealthtoolkit.org/core/overview/offline-first/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/offline-first/</guid><description>IntroductionCHT applications are designed to be used equally well in areas with no internet connectivity, slow or unreliable internet connectivity, and good internet connectivity. Achieving reliable performance and powerful features requires diligence and strict adherence to the principles of Offline-First development.
In this page we&amp;rsquo;ll cover why and how we achieve this in the CHT.
Why this is importantThe CHT is designed to improve healthcare in the hardest to reach communities.</description></item><item><title>OpenHIM Mediators</title><link>https://docs.communityhealthtoolkit.org/building/interoperability/openhim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/interoperability/openhim/</guid><description>OverviewThe components and reference information for interoperability used in CHT Interoperability project are:
OpenHIE defines the architecture for an interoperability layer. OpenHIM is a middleware component designed to ease interoperability between systems. HL7 FHIR is a messaging format to allow all systems to understand the format of the message. Interoperability with the CHTThe structure of documents in the CHT database reflects the configuration of the system, and therefore, does not map directly to a FHIR message format.</description></item><item><title>Installation as a Progressive Web App</title><link>https://docs.communityhealthtoolkit.org/core/overview/pwa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/pwa/</guid><description>What is a Progressive Web App (PWA)?A PWA is a web application that can be used like a website in the browser, but the user can choose to &amp;ldquo;install&amp;rdquo; it. This means a shortcut is added to the home screen of the device, and when the application is run it doesn&amp;rsquo;t have the usual browser address bar and tabs so it looks like a regular application.
The CHT Core webapp has been developed to be a PWA to give users more choice about how applications are installed.</description></item><item><title>resources/</title><link>https://docs.communityhealthtoolkit.org/building/branding/resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/branding/resources/</guid><description>IconsApps can be customized by defining the icons to use for tasks, targets, and contacts.
Add icons to the resources folder, and include them by name in the resources.json file as the following example:
{ &amp;#34;icon-risk&amp;#34;: &amp;#34;icon-healthcare-warning@2x.png&amp;#34;, &amp;#34;icon-treatment&amp;#34;: &amp;#34;icon-healthcare-medicine@2x.png&amp;#34;, &amp;#34;medic-clinic&amp;#34;: &amp;#34;medic-family.svg&amp;#34;, &amp;#34;medic-district-hospital&amp;#34;: &amp;#34;medic-family.svg&amp;#34;, &amp;#34;medic-health-center&amp;#34;: &amp;#34;medic-chw-area.svg&amp;#34;, &amp;#34;medic-person&amp;#34;: &amp;#34;medic-person.svg&amp;#34; } See Also: Interface
The folder and files structure would look like this:
./ resources.json /resources icon-healthcare-warning@2x.png icon-healthcare-medicine@2x.png medic-family.svg medic-family.svg medic-chw-area.svg medic-person.svg Finally run the command: cht --local upload-resources</description></item><item><title>Building A Simple Task</title><link>https://docs.communityhealthtoolkit.org/building/tasks/simple-tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/simple-tasks/</guid><description>Tasks prompt users to complete activities on a programmatic schedule. This guide will explain how to write a task which prompts CHW users to complete an assessment app form for new patients within 7 days of registration.
Creating a straight-forward task Running and testing that task Prerequisites Complete the App Forms Tutorial - Tasks prompt users to complete activities by opening an app form. The app forms tutorial produces an assessment app form which we will use here.</description></item><item><title>Coding Style Guide</title><link>https://docs.communityhealthtoolkit.org/contribute/code/style-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/style-guide/</guid><description>LanguagePrefer TypeScript and JavaScript when writing CHT code.
Exceptions to this can be made on a case-by-case basis, but the decision must be made collectively before coding has begun to avoid having to rewrite.
Web applicationsUse TypeScript. This is preferred because it has all the benefits of JavaScript while adding better developer tooling and compile time checks which can detect bugs earlier. It is not essential to use types for every variable, but it&amp;rsquo;s highly recommended for exported interfaces to help future developers who don&amp;rsquo;t know the internal workings of a module.</description></item><item><title>Target Widgets</title><link>https://docs.communityhealthtoolkit.org/building/targets/target-widgets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/targets/target-widgets/</guid><description>This tutorial will take you through how to build target widgets.
Target widgets provide a summary or analysis of the data in submitted reports.
You will be adding target widgets that will allow Community Health Workers (CHWs) to track various metrics based on assessment reports submitted.
Brief Overview of Key ConceptsTargets is the user dashboard or analytics tab.
Target widgets provide a summary or analysis of the data in submitted reports.</description></item><item><title>Test Data Generator for CHT Test Instances</title><link>https://docs.communityhealthtoolkit.org/core/overview/test-data-generator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/test-data-generator/</guid><description>Warning It is not recommended to use this tool to push data into production instances. Design the test data that fits your project hierarchy and reports. The tool will generate CouchDB docs and push them into your CHT test instance.
Technologies and Packages Used TypeScript Axios UUID Faker Minimum System Requirements npm &amp;gt;= 10.2.4 node &amp;gt;= 20.11.0 Setup and Getting StartedInstructions on setting up the project and getting it running on a local machine:</description></item><item><title>Building CHT Android Flavors</title><link>https://docs.communityhealthtoolkit.org/building/branding/android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/branding/android/</guid><description>This tutorial will take you through building a CHT Android Application off the existing wrapper.
The CHT Android application is a thin wrapper to load the CHT Core Framework web application in a WebView.
You will be adding a new android flavor based off the CHT Android.
Brief Overview of Key ConceptsThe CHT Android is a native Android container for the Community Health Toolkit (CHT). The repository contains &amp;ldquo;flavored&amp;rdquo; configurations, where each &amp;ldquo;flavor&amp;rdquo; or &amp;ldquo;brand&amp;rdquo; is an app.</description></item><item><title>Code of Conduct</title><link>https://docs.communityhealthtoolkit.org/contribute/code-of-conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code-of-conduct/</guid><description>All maintainers and contributors in this community are required to act according to the following Code of Conduct. These guidelines help steer our interactions and help us provide and ensure a safe environment for everyone.
Our StandardsExamples of behavior that contributes to creating a positive environment include:
Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include:</description></item><item><title>collect</title><link>https://docs.communityhealthtoolkit.org/building/forms/collect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/collect/</guid><description>ODK XForms are used to render forms in the Medic Collect Android app. These forms cannot use any CHT-specific XForm notations. All Medic Collect forms are processed as SMS (even when submitted over a wifi) therefore a corresponding JSON form with matching fields is used to interpret the incoming report.
Collect forms must be in the forms/collect folder to be processed by cht-conf&amp;rsquo;s convert-collect-forms and upload-collect-forms actions. Once uploaded to the server, they can be downloaded by the Medic Collect app.</description></item><item><title>Building A Complex Task (Optional)</title><link>https://docs.communityhealthtoolkit.org/building/tasks/complex-tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/complex-tasks/</guid><description>Tasks prompt users to complete activities on a programmatic schedule. This tutorial will guide you through the development of an advanced task. This is an optional tutorial and is not required to get started with CHT Application development.
Create a task with a complex follow-up schedule Use a 3rd party JavaScript library luxon to make Date/Time calculations easier Pass information from the task into the action app form Custom logic for resolving a task Prerequisites Building a simple task Maternal and Newborn Health Reference App ScenarioThis scenario is loosely based on the Pregnancy Visit Task from the Maternal and Newborn Health Reference App.</description></item><item><title>Configuring CHT applications for interoperability workflows</title><link>https://docs.communityhealthtoolkit.org/building/interoperability/cht-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/interoperability/cht-config/</guid><description>OverviewCHT has an interoperability tool which supports building FHIR workflows. You can see more details of the tool in the cht-interoperability repository. The following FHIR resources are supported:
Sending Patient data from the CHT to interoperating systems. Sending reports as Encounters with Observations from the CHT to interoperating systems. Sending Patient data created in interoperating systems to CHT applications. Sending health information represented as Encounters with Observations from interoperating systems to CHT applications.</description></item><item><title>Contact and User Management - Part 2</title><link>https://docs.communityhealthtoolkit.org/building/contact-management/contact-and-users-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-management/contact-and-users-2/</guid><description>In this tutorial you will learn how to create and edit contacts and their associated users in the CHT application using cht-conf. If you haven&amp;rsquo;t already, have a look at part 1 of this tutorial for a useful overview of key concepts.
Brief Overview of Key Conceptscht-conf is a command-line interface tool to manage and configure your apps built using the Core Framework of the Community Health Toolkit.
See more key concepts in part 1 of this tutorial.</description></item><item><title>Data Flows for Analytics</title><link>https://docs.communityhealthtoolkit.org/core/overview/data-flows-for-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/data-flows-for-analytics/</guid><description>In this section, we focus on how data flows through the various components of the Community Health Toolkit. The CHT is built to support the delivery of quality community health care at the last mile. The CHT is designed to work in areas with low connectivity, which means it is an Offline-First toolkit for care provision. The architectural and technology choices in the stack are mostly guided by this principle, which will be evident in the discussion of the data management pipeline.</description></item><item><title>DHIS2</title><link>https://docs.communityhealthtoolkit.org/building/integrations/dhis2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/dhis2/</guid><description>Most health systems have regular reporting requirements for community-level activities. Health workers often carry around heavy logbooks to manually record all relevant activities. When it is time to submit their data, community health workers (CHWs) summarize what was recorded in their logbooks and share this information with their supervisors, who in turn create paper records of these totals across entire community units or health facilities. This paper record is often passed to yet another individual whose responsibility is to manually key in the data into a health information management system, such as DHIS2.</description></item><item><title>CHT Sync Setup with Docker</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/setup-docker-compose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/setup-docker-compose/</guid><description>This guide will walk you through setting up a deployment of CHT Sync with the CHT using Docker. This path is recommended if you host the CHT with Docker.
Prerequisites Current version of docker or current version of Docker Desktop both of which include docker compose. Note that the older docker-compose is no longer supported. git cht-sync GitHub repository (can be cloned via git clone https://github.com/medic/cht-sync). SetupIn the cht-sync folder, copy the values from the env.</description></item><item><title>Managing</title><link>https://docs.communityhealthtoolkit.org/building/translations/managing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/translations/managing/</guid><description>Apps built with CHT Core are localized so that users can use them in the language of their choice. The goal of this section is to help the community manage existing and new translations.
Note Please open an issue if you are interested in translating the CHT into a different language, and make it available to the community. OverviewTranslation files live in the GitHub repo. These translation files are properties files, which are a series of keys and their corresponding values.</description></item><item><title>Ministry of Health and National Governments</title><link>https://docs.communityhealthtoolkit.org/design/personas/partners/national-governments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/partners/national-governments/</guid><description>Characteristics and Strengths Set national health priorities and design large-scale national public health programs Lead health sector reform agenda Guide the production, recruitment, and deployment of human resource for health, including community health workforce Regulate both public and private health service providers Set development cooperation policies and priorities in the health sector Provide financial resources to sub-national governments Work closely with other ministries and sub-national governments to execute national health policies Compete with other ministries and government line agencies for resources Have access to large-scale funding from multilateral and bilateral international agencies Have an appreciation for the role of digital technology in healthcare May have developed and rolled-out national digital health strategy Responsible for setting digital technology and data standards Often have an institutional home to anchor national digital health programs May have some in-house capacity to deploy and implement digital health tools Are often looking to establish partnerships for leveraging digital health technologies Are leveraging data and data science to innovate on new approaches to achieving desired health outcomes Have access to health systems data from the deployment of a new model of care May have already invested significantly in proprietary locked-in software Values Safeguarding the health rights of the citizens International commitments in health, e.</description></item><item><title>Regional Manager, Christina</title><link>https://docs.communityhealthtoolkit.org/design/personas/regional-manager-christina/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/regional-manager-christina/</guid><description>Regional managers provide overall oversight of activities in the region they are assigned. They are employed by technical and implementing partners to oversee and provide general guidance for two or more branches in a region. They troubleshoot and provide support to branch managers to optimise operations. They have limited interactions with end users but provide the link between field operations and the head office.
“I heard that some branches have already had challenges with mobile phones.</description></item><item><title>Releasing</title><link>https://docs.communityhealthtoolkit.org/contribute/code/android/releasing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/android/releasing/</guid><description>All Medic&amp;rsquo;s Android projects automatically build, sign, and release builds via GitHub Actions. The following guide applies to any of these apps, although the last 2 are in maintenance mode (links pointing to the release sections):
cht-android cht-gateway medic-collect rdt-capture Alpha for release testing Ensure all issues for this release have passed AT and been merged into master. You can also create an alpha release from a feature branch, to provide the needed .</description></item><item><title>targets.js</title><link>https://docs.communityhealthtoolkit.org/building/targets/targets-js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/targets/targets-js/</guid><description>All targets are defined in the targets.js file as an array of objects according to the Targets schema defined below. Each object corresponds to a target widget that shows in the app. The order of objects in the array defines the display order of widgets on the Targets tab. The properties of the object are used to define when the target should appear, what it should look like, and the values it will display.</description></item><item><title>Typography</title><link>https://docs.communityhealthtoolkit.org/design/interface/typography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/interface/typography/</guid><description>TypographyThe default app font is Noto Sans. It is free, codepen source, supports 800 languages and was specifically designed for good web legibility. It is bundled with the app so that all users see the same font regardless of their particular device, language, browser, etc. This ensures a consistent experience for all users.
Most text in the app should be the @text-normal-color: @gray-ultra-dark color. The lighter text color @text-secondary-color: @gray-dark) is used for labels and condition card filters.</description></item><item><title>Usability Testing</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/usability-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/usability-testing/</guid><description>Usability testing is the practice of testing how easy or difficult a design solution is to use by observing how users interact with it. These are one on one sessions that can be done in person where the facilitator observes the user directly, or remotely where the facilitator shares their screen and asks the user what they would do next and acts as their proxy.
Planning Prepare your design prototypes to test Identify your test goals and objectives Develop your test script, tasks and scoring criteria Establish timelines and resources required: Recording equipment (record the user and their interactions with the prototype when possible) Personnel Location or connectivity if remote Testing devices or device with screen sharing capabilities if remote Here is a sample usability test.</description></item><item><title>Vertical vs Horizontal scaling</title><link>https://docs.communityhealthtoolkit.org/hosting/vertical-vs-horizontal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/vertical-vs-horizontal/</guid><description>IntroductionHorizontally scaling is the ability to add more servers to an application to make it more performant. This often yields better performance than vertical scaling, which is adding more resources like RAM or CPU to a single server.
CHT Core 4.0.0 introduces a new architecture for hosting which gives it the ability to easily scale horizontally. This enables large deployments to support more concurrent users and better utilize the underlying server hardware.</description></item><item><title>Care Guides</title><link>https://docs.communityhealthtoolkit.org/building/concepts/care-guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/concepts/care-guides/</guid><description>Care Guides Forms are used to build “Care Guides” that take health workers through care protocols and provide decision support for their interactions with patients. App designers can use the basic form building functionality in a variety of ways.
Care Guides also allow CHWs to register new families and people, assess a sick child, and enroll a new pregnancy into an antenatal care schedule. Care Guides can be located in many parts of your app, including the Tasks, People, and Reports tabs.</description></item><item><title>CES Surveys</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/ces-surveys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/ces-surveys/</guid><description>Customer Effort Score surveys are used to quantitatively assess the ease of use of your CHT app.
Planning Identify the key CHT workflows or tasks that are of interest to your program Create your survey to assess the difficulty of each of the above Establish the cadence in which to send the survey to users Tips: Use simple language in your survey questions Aim to keep the survey quick to complete, asking between 8-15 questions Use the 5-point likert scale Here is a sample CES survey.</description></item><item><title>CHT App Configurer</title><link>https://docs.communityhealthtoolkit.org/contribute/code/cht-conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/cht-conf/</guid><description>CHT Conf is a command-line interface tool to manage and configure apps built using the CHT Core Framework.
Requirements nodejs 18 or later python 3 Docker(optional) InstallationOperating System Specific Linux (Ubuntu) macOS Windows (WSL2) npm install -g cht-conf sudo python -m pip install git+https://github.com/medic/pyxform.git@medic-conf-1.17#egg=pyxform-medic npm install -g cht-conf pip install git+https://github.com/medic/pyxform.git@medic-conf-1.17#egg=pyxform-medic # As Administrator: npm install -g cht-conf python -m pip install git+https://github.com/medic/pyxform.git@medic-conf-1.17#egg=pyxform-medic --upgrade Using DockerCHT Conf can also be run from within a Docker container.</description></item><item><title>Components</title><link>https://docs.communityhealthtoolkit.org/design/interface/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/interface/components/</guid><description>ButtonsPrimary buttons are used for actions, such as “Next” and “Submit”. Secondary buttons are the alternative to the primary action, such as &amp;ldquo;Previous&amp;rdquo;. Text links are used for less important or less commonly used actions, such as “Cancel”. CheckboxesUse checkboxes to select multiple items within a form. When necessary, use a descriptive error state. RadiosUse radio buttons to select a single item within a form. When necessary, use a descriptive error state.</description></item><item><title>Migrating from couch2pg to CHT Sync</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/couch2pg-to-cht-sync-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/couch2pg-to-cht-sync-migration/</guid><description>This page outlines guidelines for migrating from couch2pg to the data pipeline based on CHT Sync. One of the main changes in this flow is separating the syncing process from the data transformation, with dbt now handling the latter in cht-pipeline. This migration requires dbt models in the cht-pipeline repository instead of SQL views and tables. One thing to note is that the schema for CHT Sync differs from cht-couch2pg, so dbt models will not directly replace the SQL views and tables.</description></item><item><title>DHIS2 Aggregate</title><link>https://docs.communityhealthtoolkit.org/building/integrations/dhis2-aggregate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/dhis2-aggregate/</guid><description>One of the first things you’ll need to do is identify the specific DHIS2 data set that you plan to implement. You’ll need a list of all the data elements on that data set, a detailed understanding of how each is calculated, the frequency in which the data set is submitted (weekly, monthly, etc…), and for which organisation units the data set applies. You’ll also want to identify and engage the appropriate DHIS2 stakeholders to get access to DHIS2 metadata, test environments, and discuss workflows.</description></item><item><title>Kubernetes vs Docker</title><link>https://docs.communityhealthtoolkit.org/hosting/kubernetes-vs-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/kubernetes-vs-docker/</guid><description>Since the release of CHT Core 4.0.0 in late 2022, Medic has been perfecting the hosting for the toolkit to balance the need for high uptimes so CHWs can always deliver care while having an easy and approachable technical back end hosting solution. While initially Docker Compose with an overlay network was thought to be our goto solution, field testing this overlay networks in production has shown them to unreliable. As such, on this site you will find documentation for both Docker Compose for smaller deployments (with no overlay network) and Kubernetes for larger deployments.</description></item><item><title>Loss To Follow-Up reference workflow</title><link>https://docs.communityhealthtoolkit.org/building/interoperability/ltfu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/interoperability/ltfu/</guid><description>Workflow TestingThis section outlines the steps for testing the Loss To Follow-Up (LTFU) workflow, in addition to documenting the various endpoints available on the mediator. It provides a comprehensive guide on navigating the LTFU workflow and utilizing the endpoints to facilitate the necessary actions.
EnvironmentsThe section includes placeholders for URLs. Replacing these placeholders with the appropriate endpoints for your specific environment is essential to utilize the guide correctly. Below are the endpoints provided for each available environment.</description></item><item><title>Mapping Users on the CHT Hierarchy</title><link>https://docs.communityhealthtoolkit.org/design/mapping-hierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/mapping-hierarchy/</guid><description>This section will take you through mapping of users on CHT hierarchy, including:
defining the hierarchy (reporting structure) defining user roles mapping user personas to the CHT hierarchy Brief Overview of Key ConceptsA user persona is a generalized character that embodies a particular type of user.
User roles are the activities that the user personas are expected to carry out.
A hierarchy represents the reporting structure.
Prerequisites/Required ResourcesPersonas.
Steps1. Define the HierarchyIdentify the reporting structure of the user personas in order to have a flawless flow of data from one level to another.</description></item><item><title>Moving Contacts within the Hierarchy</title><link>https://docs.communityhealthtoolkit.org/building/contact-management/moving-contacts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-management/moving-contacts/</guid><description>Contacts are organized into a hierarchy. It is not straight-forward to move contacts from one position in the hierarchy to another because many copies of this hierarchy exist. Use the move-contacts action in cht-conf to assign a new parent to contacts. This command will move the specified contact, all the contacts under that contact, and all reports created by any of those contacts. This action will download all documents that need to be updated, update the lineages within those documents, and then save the updated documents on your local disk.</description></item><item><title>Nurse, Mary</title><link>https://docs.communityhealthtoolkit.org/design/personas/nurse-mary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/nurse-mary/</guid><description>Nurses are stationed at the health facility and spend their days seeing patients. They are typically very busy and may see 50 or more patients a day. At the clinic, they sometimes deal with staff shortages, stock-outs, and poor internet connectivity. They help train and manage CHWs, particularly during monthly meetings at the facility. They are interested in seeing improvements in health metrics for the areas their facility serves.
AboutMary has formal clinical training but a limited ability to conduct complex surgical procedures.</description></item><item><title>Publishing</title><link>https://docs.communityhealthtoolkit.org/building/guides/android/publishing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/android/publishing/</guid><description>Once the flavor is built there are many different ways to publish the binaries for installation.
Google Play StoreThe Play Store has the advantage of being installed on all Android phones by default. This makes it very easy for users to install your app, which makes it the approach we recommend for most applications.
One of the downsides is it can be more difficult to get your app published and it may be removed in future if it&amp;rsquo;s found to not comply with future requirements.</description></item><item><title>Publishing Docker Images</title><link>https://docs.communityhealthtoolkit.org/contribute/code/releasing/publish-docker-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/releasing/publish-docker-image/</guid><description>Docker images for CHT projects can be published to the medicmobile Docker Hub organization, so they are easily accessible to the community. This process can be automated using GitHub actions.
Create repository on Docker HubFirst, create a repository for your new image on Docker Hub.
Use the admin Docker account to create a new repository in the medicmobile organization. For your new repository, update the permissions to give the developers team the ability to Read &amp;amp; Write.</description></item><item><title>Sentinel Transitions</title><link>https://docs.communityhealthtoolkit.org/core/overview/transitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/overview/transitions/</guid><description>A transition is a Javascript code that runs when a document is changed. A transition can edit the changed doc or do anything server-side code can do for that matter.
Transitions are run in series, not in parallel:
For a given change, you can expect one transition to be finished before the next runs.
You can expect one change to be fully processed by all transitions before the next starts being processed.</description></item><item><title>tasks.js</title><link>https://docs.communityhealthtoolkit.org/building/tasks/tasks-js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/tasks-js/</guid><description>Task generation is configured in the tasks.js file. This file is a JavaScript module which defines an array of objects conforming to the Task schema detailed below. When defining tasks, all the data about contacts on the device (both people and places) along with all their reports are available. Tasks are available only for users of type &amp;ldquo;restricted to their place&amp;rdquo;. Tasks can pull in fields from reports and pass data as inputs to the form that opens when the task is selected, enabling richer user experiences.</description></item><item><title>CHT training resources</title><link>https://docs.communityhealthtoolkit.org/building/training/training/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/training/training/</guid><description>CHT training processIn the implementation of CHT supported community health programs, health care workers such as CHWs, CHW supervisors and facility based health care providers need training to help equip them with the required knowledge and skills to effectively carry out their roles and responsibilities. For most deployments, program leads and ministry of health officials may also need training for them to perform their roles, oversee and supervise the community health programs.</description></item><item><title>.accept_case_reports</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/accept_case_reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/accept_case_reports/</guid><description>The accept_case_reports key contains the actions to take when reports about cases are received.
app_settings.json .accept_case_reports[] property description required form Form ID of the case form. yes silence_type A comma separated list of schedules to mute. no silence_for Duration from when the report was submitted for which messages should be muted. It is structured as a string with an integer value followed by a space and the time unit. For instance 8 weeks or 2 days.</description></item><item><title>.assetlinks</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/assetlinks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/assetlinks/</guid><description>Requires CHT Core 4.7.0+, CHT Conf 3.22.0+, and CHT Android 1.3.0+
When using a custom flavor of cht-android to connect to your CHT instance, the ecosystem supports using deep links to open specific content in the app. (E.g. token login links). Security measures in Android require these deep links be verified either automatically or manually. This assetlinks configuration enables auto-verification for your CHT links in your Android app. The provided JSON file will be served at https://&amp;lt;your CHT instance&amp;gt;/.</description></item><item><title>.contact_types</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/hierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/hierarchy/</guid><description>From 3.7.0 it is possible to configure what types of places and people are available by modifying the contact_types array in the app settings. Each type has the following properties.
Note Prior to version 3.7.0, CHT Core supported 4 contact types - 3 place types (clinic, health_center, district_hospital) and one person type (person). app_settings.json .contact_types[] Property Description Required id String identifier for the type. At times this will be used to sort the contacts in the UI so it is recommended to using a number prefix with gaps between numbers, eg: 10-district, 20-region, etc.</description></item><item><title>.dhis_data_sets</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/dhis2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/dhis2/</guid><description>From 3.9.0 it is possible to integrate with DHIS2 by modifying the dhis_data_sets property in app_settings.json.
See Also: DHIS2 Integration
app_settings.js .dhis_data_sets[] Property Type Description Required id string The data set id from DHIS2 with which to integrate Yes translation_key string The translation key of the DHIS2 data set name to be displayed Yes Code samplesConfigure the id and translation_key of the DHIS2 data set. The id corresponds to the id of the data set in the DHIS2 instance you want to integrate with.</description></item><item><title>.forms</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/forms/</guid><description>JSON forms are defined in either the base_settings.json or the app_settings/forms.json file and compiled in to the app_settings.json file with the compile-app-settings action in the cht-conf tool. JSON Forms are used for parsing reports from formatted SMS, SIM applications, and Medic Collect. JSON form definitions are also used for interoperability with third-party systems. Each form is defined as an JSON form object according to the following schema. The key for each object must be unique and all characters must be uppercase.</description></item><item><title>.header_tabs</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/header_tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/header_tabs/</guid><description>app_settings.js .header_tabsAs of 3.10.0, app header tabs icons can be configured by modifying the header_tabs section in the app settings. The header_tabs section consists of key:value pairs, where the key is the name of the tab to configure. These values can also be changed from the Admin console, on the Images page under the &amp;ldquo;Header tabs icons&amp;rdquo; tab.
{ &amp;#34;messages&amp;#34;: { &amp;#34;icon&amp;#34;: &amp;#34;fa-user&amp;#34; }, &amp;#34;tasks&amp;#34;: { &amp;#34;resource_icon&amp;#34;: &amp;#34;medic-health-center&amp;#34; }, &amp;#34;analytics&amp;#34;: { &amp;#34;icon&amp;#34;: &amp;#34;fa-flag&amp;#34;, &amp;#34;resource_icon&amp;#34;: &amp;#34;icon-treatment&amp;#34; } } Available tabs tab name default FontAwesome icon messages fa-envelope tasks fa-flag reports fa-list-alt contacts fa-user analytics fa-bar-chart-o app_settings.</description></item><item><title>.outbound</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/</guid><description>Outbound is only available in CHT Core 3.5.0 and above
Outbound push allows configurers to have the creation or editing of CouchDB documents trigger outbound REST requests using the data in that document. For example, upon receiving a referral report you could send that referral to an external facility system that will manage and process that event.
These triggers can apply to all document types (not just common types such as reports or contacts) and as such care should be taken to only send the documents you intend (see configuration of relevant_to below).</description></item><item><title>.patient_reports</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/patient_reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/patient_reports/</guid><description>The patient_reports key contains the actions to take when reports about people are received.
app_settings.json .patient_reports[] property description required form Form ID of the form. yes name Descriptive name of the form. This is not currently used in the app, but can be a helpful annotation. no format Guide of how the form can be used. This is not currently used in the app, but can be a helpful annotation. no silence_type A comma separated list of schedules to mute.</description></item><item><title>.permissions</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/user-permissions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/user-permissions/</guid><description>Permissions are defined by the permissions object in the base_settings.json file. The list below illustrates the available system defined permissions. To utilize a permission, you will need to first add the permission as a property of the permissions object, and then associate the permission to user role(s).
Permissions can be assigned to user roles either directly in base_settings.json as an array of user role identifiers, or configured in the App Management app.</description></item><item><title>.registrations</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/registrations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/registrations/</guid><description>The registrations key contains actions that need to be performed for incoming reports of the specified form.
app_settings.json .registrations[] property description required form Form ID that should trigger the schedule. yes events An array of event object definitions of what should happen when this form is received. yes event[].name Name of the event that has happened. The only supported event is on_create which happens when a form is received. yes event[].</description></item><item><title>.reminders</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/reminders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/reminders/</guid><description>Configure SMS reminders to notify primary contacts to submit reports for their places.
app_settings.js .reminders[] Property Type Description Required form string If a report with this ID is submitted for this place then the SMS will not be sent. Yes translation_key string The translation key to use to look up the SMS message content. Yes message array or string Deprecated. The SMS content. Use translation_key instead. No text_expression string The later text expression to use to set the frequency of this reminder.</description></item><item><title>.replication_depth</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/replication_depth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/replication_depth/</guid><description>Replication depth is defined under replication_depth as an array of objects. It grants the ability to limit document replication depending on user roles.
app_settings.json .replication_depth property description required role The configured user role the depth applies to. yes depth The replication depth value. Must be a positive integer or 0. yes report_depth As of 3.10. Replication depth applied to reports submitted by other users no Code sample:{ &amp;#34;replication_depth&amp;#34;: [ { &amp;#34;role&amp;#34;: &amp;#34;district_manager&amp;#34;, &amp;#34;depth&amp;#34;: 1, &amp;#34;report_depth&amp;#34;: 1 }, { &amp;#34;role&amp;#34;: &amp;#34;national_manager&amp;#34;, &amp;#34;depth&amp;#34;: 2 } ] }</description></item><item><title>.replications [deprecated]</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/replications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/replications/</guid><description>Deprecated The replications field is only available in versions 3.5.0 to 3.9.0. As of 3.10.0 this field is ignored, and replication happens nightly for user meta databases to a central meta data database. Replications are defined under the app_settings.replications key as an array of replication objects. The definition takes the typical form below:
&amp;#34;replications&amp;#34;: [ { &amp;#34;fromSuffix&amp;#34;: &amp;#34;user-[^\\-]+-meta&amp;#34;, &amp;#34;toSuffix&amp;#34;: &amp;#34;users-meta&amp;#34;, &amp;#34;text_expression&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;cron&amp;#34;: &amp;#34;0 2 * * *&amp;#34; } ] property description required fromSuffix The suffix of the source table(s).</description></item><item><title>.roles</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/user-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/user-roles/</guid><description>Each user is assigned one of the defined roles. Roles can be defined using the App Management app, which is represented by the roles object of the app-settings.json file. Each role is defined by an identifier as the key, and an object with the following properties:
app_settings.json .roles{} Property Description Required name The translation key for this role Yes offline Determines if user will be an online or offline user. Set to false for users to be &amp;ldquo;online&amp;rdquo; users.</description></item><item><title>.schedules</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/schedules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/schedules/</guid><description>Schedules are defined in either the base_settings.json or the app_settings/schedules.json file and compiled in to the app_settings.json file with the compile-app-settings action in the cht-conf tool.
The schedules key contains an array of schedule objects, each representing the messages to send based on a registration.
app_settings.json .schedules[] property description required name A unique string label that is used to identify the schedule. Spaces are allowed. yes summary Short description of the of the schedule.</description></item><item><title>.sms</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/sms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/sms/</guid><description>SMS settings are defined under the sms key, as an object supporting the following properties:
app_settings.json .sms property default description outgoing_service medic-gateway Defines the service to use to send SMS messages. Currently supports &amp;ldquo;medic-gateway&amp;rdquo;, &amp;ldquo;africas-talking&amp;rdquo; or &amp;ldquo;rapidpro&amp;rdquo;. For more information read the documentation on &amp;ldquo;africas-talking&amp;rdquo; configuration and &amp;ldquo;rapidpro&amp;rdquo; configuration. duplicate_limit 5 The number of identical sms message allowed to be sent to the same recipient. Code sampleThe definition takes the typical form below:</description></item><item><title>.token_login</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/token_login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/token_login/</guid><description>Login via SMS settings are defined under the token_login key, as an object supporting the following properties:
app_settings.json .token_login property type required description enabled Boolean yes Enables or disables token_login deployment-wide. When this is false, users can&amp;rsquo;t be updated to use token_login and any requests to login with a token link will fail. translation_key String yes Translation key for the information (helper) sms message that the user receives, along with their token-login link Code sampleThe definition takes the typical form below:</description></item><item><title>.transitions</title><link>https://docs.communityhealthtoolkit.org/building/reference/app-settings/transitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/app-settings/transitions/</guid><description>When sentinel detects a document has changed it runs transitions against the doc. These transitions can be used to generate a short form patient id or assign a report to a facility.
ConfigurationBy default all transitions are disabled. They can be enabled by configuring the transitions property to have a key with the transitions name and a truthy value. As of version 3.12.0 some transitions will partially run on the client for offline users.</description></item><item><title>Configuration Best Practices</title><link>https://docs.communityhealthtoolkit.org/design/best-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/best-practices/</guid><description>This section covers the configuration best practices of forms, tasks, targets, and contact profiles when building your own community health app.
FormsWe use forms to build the Tasks, Care Guides, and Reports that take health workers through care protocols and provide decision support for their interactions with patients.
In this context, a form is any document with questions and blank spaces or selectable options for answers. Forms can be found in many parts of your app including the Tasks, People, and Reports tabs</description></item><item><title>Daily Updates</title><link>https://docs.communityhealthtoolkit.org/contribute/medic/onboarding/daily-updates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/medic/onboarding/daily-updates/</guid><description>WhatIn our fully remote environment, staying connected and informed is crucial. One of the ways we can ensure transparency, and collaboration, and keep everyone in the loop is by utilizing the #stewardship-dailies channel in Slack for sharing daily updates.
WhoAll the Stewardship Team members are expected to share daily updates in Slack (#stewardship-dailies channel).
Why are daily updates essential?Here&amp;rsquo;s why it&amp;rsquo;s relevant:
Transparency: By sharing our daily activities, progress, and challenges, we create a transparent work environment.</description></item><item><title>Data Manager, Paul</title><link>https://docs.communityhealthtoolkit.org/design/personas/data-manager-paul/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/data-manager-paul/</guid><description>Data Managers are often based at a regional health facility or a program or administrative unit and serve many local facilities. They are responsible for collating and reporting on community and health system data. Their work often involves following up with supervisors and nurses to verify data and retrieve missing information.
“It’s all about training them. The Community Health Workers are just villagers and farmers, so it’s training and more training.</description></item><item><title>dbt Models for CHT Applications</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/building-dbt-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/building-dbt-models/</guid><description>OverviewCHT Sync copies data from CouchDB to a relational database. It initially stores the document data from CouchDB in a jsonb column in a single PostgreSQL table. This is not possible to query for analytics, so it uses dbt to convert the document data to a relational database format.
The cht-pipeline repository defines a dbt project, which contains model files for the data schema described in the database schema conventions. Forms may be specific to each CHT application; additional models will need to be developed to analyze data from responses to these custom forms.</description></item><item><title>extension-libs/</title><link>https://docs.communityhealthtoolkit.org/building/reference/extension-libs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/extension-libs/</guid><description>Introduced in v4.2.0
IntroductionExtension libraries are blocks of code that are cached with the CHT web application giving app developers a powerful tool to extend the CHT. This is an advanced feature and requires an app developer with some software development experience.
An example of a use for this feature is to provide a function to calculate a risk score based on a machine learning model. The function can then be called passing in values from app forms and return the result to be stored with the report.</description></item><item><title>OpenMRS</title><link>https://docs.communityhealthtoolkit.org/building/integrations/openmrs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/openmrs/</guid><description>OpenMRS is an open source electronic medical record system used in dozens of countries. Integrating CHT apps with OpenMRS can open up opportunities to improve health outcomes for patients by promoting better coordination of care. For example, referrals by CHWs in the community can be sent electronically to health facilities using OpenMRS so that nurses and clinicians can prepare for their visit and have full access to the assessment done by a CHW.</description></item><item><title>OpenMRS Interoperability</title><link>https://docs.communityhealthtoolkit.org/building/interoperability/openmrs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/interoperability/openmrs/</guid><description>OpenMRS is an open-source electronic medical record system used in dozens of countries. Integrating CHT apps with OpenMRS can open up opportunities to improve health outcomes for patients by promoting better coordination of care. For example, referrals by CHWs in the community can be sent electronically to health facilities using OpenMRS so that nurses and clinicians can prepare for their visit and have full access to the assessment done by a CHW.</description></item><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/building/workflows/workflows-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/workflows/workflows-overview/</guid><description>Workflows can be defined within apps built with the Core Framework to connect actions and data with people. Forms are the main building block of tasks and messaging workflows, and are useful in creating reminders for follow-up visits or referrals.
TasksTasks within the app can drive a workflow, ensuring that the right actions are taken for people at the right time. Tasks indicate a recommended action to the user. They indicate who the user should perform the action with, and the recommended timeframe of that action.</description></item><item><title>Setting Form Properties</title><link>https://docs.communityhealthtoolkit.org/building/forms/form-properties/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/form-properties/</guid><description>This tutorial will take you through how to write the &amp;lt;form_name&amp;gt;.properties.json file.
The &amp;lt;form_name&amp;gt;.properties.json file allows you to add logic that ensures that the right action appears for the right contacts (people and places). For instance, an assessment form for children under-5 will only appear for person contacts on the CHT whose age is less than 5.
You will be adding meta-data and context to an assessment workflow that allows Community Health Workers to conduct a health assessment for children under the age of 5.</description></item><item><title>Building SMS Forms</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/sms-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/sms-forms/</guid><description>SMS forms allow users to submit reports from any device including feature phones without internet access. SMS forms are ideal in scenarios where targeted users have no way of accessing internet or where they are restricted to using feature phones.
This tutorial will take you through how to build SMS forms for CHT applications, including:
Defining SMS forms Setting validation rules for SMS forms Setting automatic responses to SMS reports You will be building a pregnancy registration workflow that allows Community Health Workers to register households, register household members, and register new pregnancies for the household members.</description></item><item><title>Technical Resources</title><link>https://docs.communityhealthtoolkit.org/contribute/technical-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/technical-resources/</guid><description>This page contains materials that will help a CHT Contributor to learn the technical details they need to be successful when building tools related to the CHT.
Keep in mind that this is a living document, and every contributor is encouraged to add to it when identifying learning opportunities that can set them up for success with the CHT. The main goal here is to provide the technical people who are new to the CHT with a list of resources that could be beneficial for them in both the short and long term.</description></item><item><title>Technical Working Sessions</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/technical-working-sessions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/technical-working-sessions/</guid><description>A Technical Working Session is a collaborative meeting where backend users of the CHT (such as app developers and data scientists) and CHT Community product managers, software engineers, and UX researchers come together to dive deeper into technical issues and develop potential solutions in real time. These sessions provide valuable insights into the experiences of users developing and configuring the CHT.
Planning and Recruiting Technical working sessions can be set up in two ways: Partners reach out to the CHT Community for support with specific issues A CHT Community member identifies a relevant project to ongoing work and invites them to a technical working session: Ensure objectives for the session are clear and communicated in advance Identify a time that works best for both teams and the logistics of the call (platform, being on video, screen sharing, etc.</description></item><item><title>Configuring UHC Mode</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/uhc-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/uhc-mode/</guid><description>Introduced in v2.18.0
The CHT&amp;rsquo;s UHC Mode empowers CHWs to provide equitable and timely care to families in their catchment area. The Community Health Toolkit supports this use-case by displaying the number of visits made to a household and highlighting households which haven&amp;rsquo;t met their visit goal in red at the top of the contact list.
The date last visited is colored red whenever the date is 30 days or more in the past.</description></item><item><title>UI Kit</title><link>https://docs.communityhealthtoolkit.org/design/interface/ui-kit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/interface/ui-kit/</guid><description>ComponentsFind reusable components of the CHT in this Figma file. Mockups can easily be created using these components.
DesktopMockups of the CHT on desktop/tablet view can be easily made using the components in this Figma UI Kit.
MobileMockups of the CHT on mobile devices can be easily made using the components in this Figma UI Kit.
Note The UI Kit is continuously being updated to match the CHT app and ensure the CHT community is provided with all the necessary assets to ease the design process.</description></item><item><title>CHT User Management tool</title><link>https://docs.communityhealthtoolkit.org/building/contact-management/user-management-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/contact-management/user-management-tool/</guid><description>The Community Health Toolkit (CHT) is highly configurable and can be customized to support multiple hierarchies and users in the health care system. The CHT user management tool is a user friendly web application that works with the CHT to decentralize the user management process to the subnational levels, increasing efficiency and accuracy. This guide highlights steps for setting up and configuring the user management tool. The guide has been tailored for specific CHT-supported national community health information systems.</description></item><item><title>App Builders</title><link>https://docs.communityhealthtoolkit.org/design/personas/app-builder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/personas/app-builder/</guid><description>App builders and technical organizations develop and deliver world-class software contextualized to meet their clients’ needs and deliver value to their stakeholders.
AboutApp builders and technical organizations have in-house or contracted software developers. They deploy health technology solutions for implementing partners such an iNGOs, Governments, UN agencies etc in the community health space. They have limited familiarity with end-users such as CHWs and HCD.
Values Aligned with CHT principles and willing to contribute back to the CHT in the future Believe in building open-source technologies Integrity Likeable personality Open-mindedness Strong work ethic Responsibilities Build and deliver user experiences centered on the CHT Steward the CHT app developer’s experience CHT Capacity Builders Technical support Speak the language of the business Needs Capacity and expertise with the CHT Flexible technology (and tooling) to help build holistic digital health interventions Motivations Build awesome and bug-free user experiences using the CHT Adoption of the CHT as the technology of choice for building community health apps Delivering effective interventions Novel projects or interventions Developing skills Strengths and Assets Diversity in skills sets: HCD, software development, database management, dashboard development Resourcefulness: bend the CHT&amp;rsquo;s capabilities to meet a given need Passion for problem solving An inquisitive mind</description></item><item><title>CHT Application Settings</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/application-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/application-settings/</guid><description>This tutorial will take you through how to manage the CHT application settings, including;
Setting user roles and permissions Enabling and disabling transitions Configuring contact hierarchy and configuring replication. App settings allow you to both persist information that is critical to the application outside the code, and to create profiles that store the preferences for project deployments.
Brief Overview of Key ConceptsThe settings which control CHT apps are defined in the app_settings.</description></item><item><title>Condition Cards</title><link>https://docs.communityhealthtoolkit.org/building/condition-cards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/condition-cards/</guid><description>This tutorial will take you through building a condition card for CHT applications.
Condition cards, like contact summaries display information about the contact. The data displayed in condition cards can be pulled from submitted reports.
In this tutorial,you will be adding a condition card that displays information about a person&amp;rsquo;s most recent assessment, including: the date of the most recent assessment, and whether or not they had a cough.</description></item><item><title>Testing dbt Models</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/testing-dbt-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/testing-dbt-models/</guid><description>OverviewTo ensure code accuracy and data integrity, and also to prevent data quality regressions on dbt models, it is recommended to write dbt tests. dbt tests help validate the accuracy and reliability of data and data models and identify issues before they cause downstream impacts on analytics and decision-making. Additionally, they increase developer confidence in making changes to the data models.
Types of dbt testsThere are two main types of dbt tests:</description></item><item><title>Configurable Hierarchies</title><link>https://docs.communityhealthtoolkit.org/building/workflows/hierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/workflows/hierarchy/</guid><description>The Core Framework requires a hierarchy to organize the information in the app. It is often based on the hierarchy of a health system within a particular geographic region.
Large deployment sites often need three or more levels of place hierarchy, while some small sites need fewer than three levels. For this reason, the Core Framework’s information hierarchies are configurable to meet a users needs.
A user logging into their app will see a custom set of people, tasks, reports, and analytics based on the hierarchy level that they belong to.</description></item><item><title>Editable Mockups</title><link>https://docs.communityhealthtoolkit.org/design/interface/mockups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/interface/mockups/</guid><description>Use these sample CHT screens and components as needed to test and validate workflows. Make a copy of the slides to edit and use with your content.
MobileMockups of the CHT on mobile devices can be easily made using the components in this Google Slide deck.
DesktopMockups of the CHT in a desktop view are possible using this Google Slide deck.</description></item><item><title>Setting up Multi-facility users</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/multi-facility-users/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/multi-facility-users/</guid><description>This tutorial will take you through how to create and assign users to multiple places in the CHT UI. Assigning users to multiple places is only available from CHT 4.9.0.
This tutorial covers;
Creating contacts and their associated users Creating places and assign contacts to those places Assigning users to multiple places The CHT application settings allows you to both persist information that is critical to the application outside the code, and to create profiles that store the preferences for project deployments.</description></item><item><title>RapidPro</title><link>https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/</guid><description>RapidPro is the open-source platform that powers TextIt, developed by UNICEF and Nyaruka. RapidPro allows you to visually build messaging workflows for mobile-based services. The flows support a variety of technologies such as: SMS, USSD, IVR, Telegram, Facebook Messenger, and WhatsApp. Review RapidPro’s documentation to familiarize yourself with various components that include the API. Before you embark on designing an integrated RapidPro/CHT workflow, you should start by understanding the needs of your users, identifying a problem to solve, and establishing goals.</description></item><item><title>Building SMS Schedules</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/sms-schedules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/sms-schedules/</guid><description>SMS schedules allow you to send reminder messages at predetermined times. These reminders serve as useful prompts for end-users to take specific actions.
This tutorial takes you through how to set up SMS schedules for CHT applications. It uses a pregnancy registration workflow and follow-up reminders for a Community Health Worker as an example. The same methodology can be applied to other workflows and reminders as needed.
Brief Overview of Key ConceptsSMS schedules are a series of SMS messages that are to be sent to specific contacts at future dates and times.</description></item><item><title>CHT Technology Radars</title><link>https://docs.communityhealthtoolkit.org/contribute/tech-radar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/tech-radar/</guid><description>It is essential for a development toolkit such as the Community Health Toolkit to constantly improve and keep track with the latest useful innovations. It is important to openly look for innovations and new technologies and to question established technologies and methods every now and then.
To enhance visibility and clarity on the technology choices, the technological strategy, and the available CHT features and tools, we leverage a framework called Technology Radar.</description></item><item><title>Versioning forms</title><link>https://docs.communityhealthtoolkit.org/building/forms/versioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/versioning/</guid><description>Added in cht-core 3.15.0 and cht-conf 3.10.0
When uploading app or contact xforms, cht-conf 3.10.0+ will automatically generate a version and include it in the form doc&amp;rsquo;s xmlVersion property. The version has two properties.
Property Description time The time that the form was uploaded to the server in millis since the epoch. sha256 A hash of the xform content. For example:
&amp;#34;xmlVersion&amp;#34;: { &amp;#34;time&amp;#34;: 1658717177750, &amp;#34;sha256&amp;#34;: &amp;#34;6f0bbfe5a9a9ebeb25784165879afec5e311b197cbd76ade5698c83c22dd9a8f&amp;#34; } When a user fills in a form with an xmlVersion property, the version is copied in to the report doc as the form_version property.</description></item><item><title>Building App Forms</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/app-forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/app-forms/</guid><description>App forms allow users to submit reports from Android devices
This tutorial will take you through how to build App forms for CHT applications, including:
Authoring forms in Excel, Google sheets or other spreadsheet applications. Converting XLSForms to XForms Uploading XForms to CHT You will be building assessment workflow that allows Community Health Workers to conduct a health assessment for children under the age of 5.
Brief Overview of Key ConceptsApp forms serve as actions within the app.</description></item><item><title>Data visualization</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/dashboards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/dashboards/</guid><description>These instructions assume you are running CHT Sync, CHT Core and PostgreSQL either with Kubernetes or Docker.
SupersetTo build data visualization dashboards, follow the Superset instructions to run Superset and connect it to the PostgreSQL database. It is recommended that a way to track Superset changes be added via a git repository or any other version control system to make it easier to track changes over time and potentially catch and remediate bugs and regressions.</description></item><item><title>OppiaMobile</title><link>https://docs.communityhealthtoolkit.org/building/integrations/oppia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/oppia/</guid><description>OverviewOppiaMobile is an open source mobile learning platform built by Digital Campus specially designed for delivering learning content, multimedia, and quizzes in low connectivity settings. All the content and activities can be accessed and used when no internet connection is available, and users can earn points and badges for completing activities and watching videos. To learn more about the platform, check out the overview, OppiaMobile on Github, and their documentation site.</description></item><item><title>Users</title><link>https://docs.communityhealthtoolkit.org/building/concepts/users/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/concepts/users/</guid><description>Apps built with the Core Framework use roles and permissions to determine who has access to what data. User roles are general categories you can use to assign a collection of broad permissions to users. There are two classes of roles: online and offline. Generally speaking, CHWs are usually offline users, while managers and nurses are usually online users. SMS users do not use the app, and thus do not have a user role.</description></item><item><title>Environment Variables</title><link>https://docs.communityhealthtoolkit.org/hosting/analytics/environment-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/analytics/environment-variables/</guid><description>There are two environment variable groups in the .env file (if using Docker Compose), or in the values.yaml file (if using Kubernetes). To successfully set up CHT Sync, it is important to understand the difference between them.
POSTGRES_: Used by PostgreSQL to establish the PostgreSQL database to synchronize CouchDB data to. They define the schema and table names to store the CouchDB data, as well as where the tables and views for the models defined in CHT_PIPELINE_BRANCH_URL will be created.</description></item><item><title>CHT Product Repository Checklist</title><link>https://docs.communityhealthtoolkit.org/contribute/code/repository-checklist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/repository-checklist/</guid><description>Repository Creation ChecklistWhen creating a new CHT Product repository under Medic&amp;rsquo;s GitHub organization, the contributor(s) should use the cht-repo-template repository containing the following configurations:
Source Control The main branch is locked via branch protection rules. Merges are done through PRs. Automatically delete head branches. Issue templates exist. PR template exists. PRs reference related issues. Commit formats follow the guidelines. Secrets are not part of the commit history or made public. The following files exist: LICENSE specifying AGPL-3.</description></item><item><title>Updating Dependencies</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/update-dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/update-dependencies/</guid><description>Every minor release we update dependencies to get the latest fixes and improvements. We do this early in the release cycle so that we have some more time to find regressions and issues. This is done on all folders with a package-lock.json, including:
cht-core / (root) /admin /webapp Steps Checkout and pull the latest default branch - get the latest code Make a branch: git checkout -b &amp;quot;&amp;lt;issue&amp;gt;-update-dependencies&amp;quot; Take a look at the current list of dependencies related issues, where you can find the latest conversations and information.</description></item><item><title>App Developer Hosting in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/app-developer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/app-developer/</guid><description>This guide assumes you are a CHT app developer wanting to either run concurrent instances of the CHT, or easily be able to switch between different instances without losing any data while doing so. To do development on the CHT Core Framework itself, see the development guide.
To deploy the CHT 3.x in production, see either AWS hosting or Self hosting. To deploy 4.x in production see the 4.x documentation.</description></item><item><title>Configuration</title><link>https://docs.communityhealthtoolkit.org/building/messaging/gateways/gateway/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/gateways/gateway/configuration/</guid><description>CHT gateway supports Android 4.1 and above. To have it up and fully working, follow the 3 steps below.
Install the latest APK from the releases page in the cht-gateway repo. This APK is not in the Play Store, you will need to side-load it as is done with CHT Android.
Open the app. if you are installing the app for the first time or afresh, you will get a Warning:medic-gateway is not set as the default messaging app on this device .</description></item><item><title>Glossary and Definitions</title><link>https://docs.communityhealthtoolkit.org/glossary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/glossary/</guid><description>AAccredited Social Health Activist (ASHA)Antenatal Care (ANC)Antiretrovirals (ARV)Artificial intelligence (AI)Assisted Global Positioning System (A-GPS)BBackendThe parts of the software that make the front end happen. These are all hidden from the user.
CCenter for Disease Control and Prevention (US) (CDC)Childhood Immunizations (IMM)Community Based Organization (CBO)Community Based Volunteers (CBV)Community Health Assistants (CHA)Community Health Extension Worker (CHEW)Community Health Information System (CHIS)Community Health Promoters (CHP)Community Health Toolkit (CHT)Community Health Volunteer (CHV)Community Health Worker (CHW)&amp;ldquo;The umbrella term &amp;lsquo;Community Health Worker&amp;rsquo; embraces a variety of community health aides selected, trained and working in the communities from which they come&amp;rdquo; (WHO, 2007 PDF).</description></item><item><title>Muting</title><link>https://docs.communityhealthtoolkit.org/building/workflows/muting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/workflows/muting/</guid><description>Muting is a way for CHWs to temporarily silence notifications about Contacts (people and places) and is commonly used when a person or family has temporarily relocated or refused services. When a Contact is muted, they will appear differently on the People tab and CHWs will no longer receive tasks or SMS about them.
To start receiving notifications about a Contact again, CHWs can unmute them. When a Contact is unmuted, tasks and SMS schedules will resume, but notifications that would have been sent while they were muted will not.</description></item><item><title>AWS Hosting in CHT 3.x</title><link>https://docs.communityhealthtoolkit.org/hosting/3.x/ec2-setup-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/3.x/ec2-setup-guide/</guid><description>Most production CHT instances are deployed on AWS EC2. Leveraging Elastic Compute Cloud (EC2) and Elastic Block Store (EBS), CHT instances can easily be scaled up with larger EC2 instances and have easy increased disk space, backup and restores with EBS.
This guide will walk you through the process of creating an EC2 instance, mounting an EBS volume and provisioning Docker containers.
Create and Configure EC2 Instance Create EC2 (use security best practices)</description></item><item><title>Documentation Style Guide</title><link>https://docs.communityhealthtoolkit.org/contribute/docs/style-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/docs/style-guide/</guid><description>This style guide provides a set of editorial guidelines for anyone writing documentation for Community Health Toolkit projects. These are guidelines, not rules. Use your best judgment.
Note This documentation site does not involve release management and acceptance testing. Help us maintain the quality of our documentation by submitting a pull request (PR) with any suggested changes. One of the repository&amp;rsquo;s maintainers will review the PR, request additional changes as needed, and merge the PR when it is ready.</description></item><item><title>Migration from Docker Compose CHT 3.x to 3-Node Clustered CHT 4.x on K3s</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/data-migration-3x-docker-to-4x-k3s-multi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/data-migration-3x-docker-to-4x-k3s-multi/</guid><description>The hosting architecture differs entirely between CHT-Core 3.x and CHT-Core 4.x. When migrating from Docker Compose to K3s, specific steps are required using the couchdb-migration tool. This tool interfaces with CouchDB to update shard maps and database metadata.
Note If after upgrading you get an error, Cannot convert undefined or null to object - please see issue #8040 for a work around. This only affects CHT 4.0.0, 4.0.1, 4.1.0 and 4.</description></item><item><title>Using NPM</title><link>https://docs.communityhealthtoolkit.org/contribute/code/using-npm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/using-npm/</guid><description>npm OrgsWe use npm Orgs to organize our npm packages. It provides a centralized way to manage a team&amp;rsquo;s published npm packages and permissions. Here are some guidelines when using this service.
See npm&amp;rsquo;s Orgs docs for more information.
Our organization is medic or using npm&amp;rsquo;s notation, @medic.
We also created @medicmobile but it&amp;rsquo;s not currently in use, it was created to reserve the namespace.
Adding a PackageWhen you publish an npm module on npmjs.</description></item><item><title>Death Reporting</title><link>https://docs.communityhealthtoolkit.org/building/workflows/death-reporting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/workflows/death-reporting/</guid><description>In this section you will learn how to set up a death report workflow. This includes laying out a death report form as well as handling all the configurations needed for wiring it up in the CHT. By the end of the tutorial you should be able to:
Mark select contacts as deceased Make relevant app updates for dead contacts Brief Overview of Key ConceptsWhen a contact is marked as deceased within the CHT, the contact will be hidden by default on the contacts tab.</description></item><item><title>Static Analysis</title><link>https://docs.communityhealthtoolkit.org/contribute/code/static-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/static-analysis/</guid><description>eslintAll code must pass an eslint check which runs early in the CI cycle and uses the standard medic eslint configuration.
ESLint has plugins/integrations for many IDEs that will report linting issues in real-time.
SonarSonar static analysis supports development by providing feedback on code quality and security issues. Sonar analysis must pass on all new code.
SonarCloud can be enabled on any public repo in the medic organization.
WorkflowDuring developmentWhile writing code, the SonarLint plugin can be used to get real-time code analysis in your IDE.</description></item><item><title>Automated Tests</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/automated-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/automated-tests/</guid><description>The goal of automated testingContributors from all backgrounds are welcome to make changes in the codebase. The CHT testing framework is designed to help you contribute with confidence, regardless of your experience level. This guide will help you understand the CHT testing approach and how you can contribute effectively.
A key part of this confidence comes from knowing that new changes have not impacted other functionality in the system and everything continues to work as expected.</description></item><item><title>Design Documents Guide</title><link>https://docs.communityhealthtoolkit.org/contribute/code/design-docs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/design-docs/</guid><description>What are design docs?Software development is not just about writing code, but rather about solving problems and building the right solutions. Before diving into an initiative or feature and starting coding, it’s essential that the developers (and other team members) have a high-level understanding of what a solution might look like.
Design docs are informal documents that the leading developer of a certain piece of software creates before they start the actual coding of a solution.</description></item><item><title>Style guide for automated tests</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/style-guide-automated-e2e-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/style-guide-automated-e2e-tests/</guid><description>There are three files that are the base of every new automated test case, the most important one is the spec file, which contains the actual test that will be executed.
Automated tests cover different CHT Configs, consider the following setups when writing a new test:
default Config file: ../tests/e2e/default/wdio.conf.js Name convention for the spec file: ../tests/e2e/default/*/&amp;lt;name&amp;gt;.wdio-spec.js Command to execute the tests that belong to this config: npm run wdio-local Important: Make sure the spec file follows the name convention, otherwise the file won&amp;rsquo;t be executed.</description></item><item><title>Apdex Automation Tests</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/apdex-automation-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/apdex-automation-tests/</guid><description>ConfigurationThis documentation will guide you on how to setup and configure automation to run performance tests for your CHT Applications.
PrerequisitesBefore continuing with the steps below, ensure:
You have a cht instance deployed and running either locally or globally.
You have some pre-existing users and data already loaded on the app. Use the test-data-generator tool to achieve this.
If you already have the CHT Android app installed, set the appPath value (in the capabilities section of the settings file) to an empty string.</description></item><item><title>Application Tests</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/application-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/application-tests/</guid><description>This tutorial takes you through testing the various configurable components of CHT applications using cht-conf-test-harness.
PrerequisitesComplete the following tutorials:
Building App Forms Building A Simple Task Building Target Widgets Building Contact Summary Importance of testing your application Testing your CHT application is important as it ensures you are consistently maintaining your application and defining implementation requirements. Testing also helps the user make better architectural decisions, optimizes the forms, tasks and other components of the application.</description></item><item><title>How to bulk load users</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/users-bulk-load/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/users-bulk-load/</guid><description>The bulk user upload feature is available in 3.16.0 and later versions of the CHT. As of CHT 3.17.0, when creating both a contact and a place, the contact will be set as the default contact of the place. User creation can be scripted using the CHT API directly or using the cht-conf tool, which is detailed in the CSV-to-Docs guide.
This feature can be used to load as many users as possible but works optimally with chunks of 1,000 users or less.</description></item><item><title>CHT Impact Metrics</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/impact-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/impact-metrics/</guid><description>Impact monitoring is an essential part of both the Community Health Toolkit and Medic&amp;rsquo;s processes and ethos. We are committed to harnessing data to:
Support our partners in data-driven operational and strategic decision making Inform our product roadmap and organizational strategy, and Participate in overarching policy discussions around community health. As a member of the CHT community and potential CHT implementer, we encourage you to learn more about the recommended impact metrics for monitoring and evaluation across priority use cases by reviewing the metrics listed below.</description></item><item><title>Training Cards Configuration</title><link>https://docs.communityhealthtoolkit.org/building/training/training-cards/training-cards-configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/training/training-cards/training-cards-configuration/</guid><description>Training Cards enable remote training from within the CHT by showing a sequence of &amp;ldquo;cards&amp;rdquo; containing content provided by App Developers. The content might include information about a newly deployed feature, changes to a care guide, or simply a reminder about an underused feature or workflow. Enketo forms are used to display the content, and App Developers can specify a start date, duration, and to which user roles the cards should be shown.</description></item><item><title>Quality Assistance</title><link>https://docs.communityhealthtoolkit.org/contribute/code/quality-assistance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/quality-assistance/</guid><description>Goals Software developers should have full ownership of what they are building, including quality. The team still benefits from having the QA engineering mindset of QA engineers. QA engineers automate more tests and processes. In ShortA software developer writes code and performs testing on that code where a QA engineer assists by recommending tests to perform and adding additional end-to-end tests.
In DetailA developer should be able to write code and release it when done.</description></item><item><title>Detecting and fixing production data on training instances</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/training-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/training-instance/</guid><description>After onboarding CHWs, sometimes data ends up on the wrong CHT instance. There are some passive and active actions you can take to help deal with this situation.
MonitoringMonitoring is a good way to see if CHWs are sending forms to the wrong CHT server. By catching such a problem early, it may be easy to fix manually which avoids more laborious fixes on the command line for admins.
Manual device checksSupervisors can actively monitor CHWs as they register their first household.</description></item><item><title>Developing on Windows</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/using-windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/using-windows/</guid><description>We don&amp;rsquo;t actively support development on Windows, instead preferring MacOS or Linux.
However, Microsoft has recently been stabilizing their Windows Subsystem for Linux, which appears to work reasonably well for development.
Installation instructions are mostly the same as they written in the README with a couple of caveats as of time of writing (2019-07-25), noted below.
Note Both the Windows Subsystem for Linux and Medic&amp;rsquo;s support for developing in it is very much in beta.</description></item><item><title>Revalidate invalid reports</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/invalid-reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/invalid-reports/</guid><description>You may encounter a dreaded case when reports coming in to a Medic Webapp instance have a red indicator instead of the green indicator.
This may be caused by:
Missing forms in the app_settings config. Missing or incorrect fields in the input form. e.g Missing patient ID, or Patient ID with letters Extra fields in the input form. This happens when you don&amp;rsquo;t configure for some fields in the app_settings.json of the webapp Configuring some forms in the wrong section of the app_settings i.</description></item><item><title>Running multiple Chrome versions</title><link>https://docs.communityhealthtoolkit.org/contribute/code/core/run-multiple-chrome-versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/core/run-multiple-chrome-versions/</guid><description>Note These steps are suitable for Mac. It was tested in a Mac Intel. It can be adapted to any Chrome version. Follow these steps on a Mac to run Chrome version 90 while having another Chrome app on a different version.
Download Chrome 90.0.4430.72 from slimjet Do not install the Google Chrome.app in your Application folder. Install it in your Desktop folder for example. Change the name of the app to Google Chrome 90.</description></item><item><title>CSV to Docs</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/csv-to-docs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/csv-to-docs/</guid><description>Seeding data with cht-confUsers, contacts, and report data can be specified in comma-separated value (CSV) files, then converted to JavaScript Object Notation (JSON) files and uploaded into your instance using cht-conf. This documentation will cover the CSV notation used, fetching CSV files from Google Sheets, converting the CSV files into JSON docs, and then uploading the data from the JSON files to your instance.
Converting CSVsRunning cht-conf with the csv-to-docs action converts CSV files from the csv folder into JSON docs to be uploaded to your instance.</description></item><item><title>Africa’s Talking SMS Aggregator</title><link>https://docs.communityhealthtoolkit.org/building/messaging/gateways/africas-talking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/gateways/africas-talking/</guid><description>As of v3.6.0, SMS messages can be sent and received using the Africa&amp;rsquo;s Talking service.
Africa&amp;rsquo;s Talking configurationFirst, run openssl rand -hex 32 in your terminal to generate a long unique key that you will use as the cht-api-key.
Log on to the Africa&amp;rsquo;s Talking Dashboard and configure the two callback URLs as follows.
Delivery Reports: https://&amp;lt;hostname&amp;gt;/api/v1/sms/africastalking/delivery-reports?key=&amp;lt;cht-api-key&amp;gt; Incoming Messages: https://&amp;lt;hostname&amp;gt;/api/v1/sms/africastalking/incoming-messages?key=&amp;lt;cht-api-key&amp;gt; Next, in Africa&amp;rsquo;s Talking dashboard, generate an &amp;ldquo;API Key&amp;rdquo; that you will use as the at-api-key.</description></item><item><title>Production Hosting in CHT 4.x - Multiple CouchDB Nodes on k3s on VMWare</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/kubernetes/self-hosting-k3s-multinode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/kubernetes/self-hosting-k3s-multinode/</guid><description>This page covers an example k3s cluster setup on a VMware datacenter with vSphere 7+ for a national deployment across 50 counties capable of supporting 20,000+ CHWs concurrently. After setup, administrators should only add VMs to the cluster or deploy CHT Core projects to be orchestrated.
About container orchestrationA container orchestrator helps easily allocate hardware resources spread across a datacenter. For national scale projects, or a deployments with a large number of CHT Core instances, Medic recommends a lightweight Kubernetes orchestrator called k3s.</description></item><item><title>Phones</title><link>https://docs.communityhealthtoolkit.org/building/messaging/gateways/gateway/phones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/gateways/gateway/phones/</guid><description>In order to use SMS workflows with the CHT you will need an SMS gateway. For reliability an SMS Aggregator, such as Africa&amp;rsquo;s Talking or RapidPro, is recommended. When an SMS Aggregator is not available, an Android device running CHT Gateway can be used to send and receive SMS in your CHT application. You may use an existing Android device and are not required to purchase a new one. However, for more reliable sending and receiving of SMS, the Android device should be in your organization’s office or facility with a consistent internet connection.</description></item><item><title>Production Hosting in CHT 3.x</title><link>https://docs.communityhealthtoolkit.org/hosting/3.x/self-hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/3.x/self-hosting/</guid><description>Whether run on bare-metal or in a cloud provider, the Community Health Toolkit (CHT) core framework has been packaged into a docker container to make it portable and easy to install. It is available from dockerhub. To learn more how to work with docker you could follow the tutorial here and the cheat sheet here.
Note Before continuing, ensure all requirements are met. Installing with a compose fileThe CHT containers are installed using docker compose so that you can run multiple containers as a single service.</description></item><item><title>RapidPro Messaging Gateway</title><link>https://docs.communityhealthtoolkit.org/building/messaging/gateways/rapidpro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/gateways/rapidpro/</guid><description>As of v3.11.0, messages can be sent and received using RapidPro as a messaging gateway.
RapidPro configurationStore globalsGenerate a long unique key to use as the cht_api_key.
Log in to your RapidPro dashboard, go to the globals page (/global/) and create two globals with the following data:
name: cht_url, value: https://&amp;lt;your-cht-instance-host&amp;gt;/api/v2/sms/rapidpro/incoming-messages. For security the instance host must not include basic authentication. (NB: This endpoint was added in CHT 4.1.0. If integrating with an earlier version you will need to use the earlier version with a typo in the URL: https://&amp;lt;your-cht-instance-host&amp;gt;/api/v1/sms/radpidpro/incoming-messages) name: cht_api_key, value: &amp;lt;cht_api_key&amp;gt; The names of these two global variables are arbitrary, but in this document we will keep referring to the names defined above.</description></item><item><title>Installing RapidPro - CHT Gateway Android APK</title><link>https://docs.communityhealthtoolkit.org/building/messaging/gateways/rapidpro_cht_gateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/gateways/rapidpro_cht_gateway/</guid><description>RapidPro - CHT uses your Android phone to send and receive messages on your behalf.
Due to restrictions that Google has placed on Android applications that send SMS messages, RapidPro - CHT applications can no longer be distributed through the Google Play Store. You will need to download the application file and install it using the steps below:
Download App - On your Android device, open your browser and download the app by entering the URL: https://rapidpro.</description></item><item><title>SMS message states</title><link>https://docs.communityhealthtoolkit.org/building/messaging/sms-states/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/sms-states/</guid><description>Interaction with SMS providersCHT Applications can use CHT Gateway and third party aggregators to send and receive SMS messages.
When an SMS report comes in from a user, medic-sentinel adds the appropriate list of scheduled messages (to be sent at a future date) to the report doc.
Periodically, sentinel checks for messages that need to be sent, and sets their state to pending if their scheduled sending time has been reached or passed.</description></item><item><title>Migration from 3.x Docker Compose to 4.x K3s (Single Node)</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/data-migration-3x-docker-to-4x-k3s-single/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/data-migration-3x-docker-to-4x-k3s-single/</guid><description>The hosting architecture differs entirely between CHT-Core 3.x and CHT-Core 4.x. When migrating from Docker Compose to K3s, specific steps are required using the couchdb-migration tool. This tool interfaces with CouchDB to update shard maps and database metadata.
Note If after upgrading you get an error, Cannot convert undefined or null to object - please see issue #8040 for a work around. This only affects CHT 4.0.0, 4.0.1, 4.1.0 and 4.</description></item><item><title>Local Couch2pg Setup</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/couch2pg-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/couch2pg-setup/</guid><description>Couch2pg is deprecated. For data synchronization, refer to CHT Sync.
This tutorial will take you through setting up a Couch2pg service.
By the end of the tutorial you should be able to:
Set up a Couch2pg service Run the Couch2pg service CHT Couch2pg is a background process that moves data from Couchdb to Postgres through one way replication. It therefore, needs to have full read and write access to both the Postgres Database and Couchdb upstream.</description></item><item><title>Short Contact Identifiers</title><link>https://docs.communityhealthtoolkit.org/building/messaging/shortcodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/shortcodes/</guid><description>Short unique identifiers for contacts are often used to identify contacts in messaging workflows. Unique short codes are generated on doc.patient_id against any document of a person type, and on every doc.place_id against any document of a place type. By default, these IDs start at 5 numeric digits long, and will increase in length as deemed necessary by the generation algorithm.
If the length is increased, this increase is stored in a CouchDB documented called shortcode-id-length:</description></item><item><title>Migration from CHT 3.x to CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/migration-to-4x-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/migration-to-4x-docker/</guid><description>The hosting architecture differs entirely between CHT-Core 3.x and CHT-Core 4.x. Migrating data from an existing instance running CHT 3.x requires a few manual steps. This guide will present the required steps while using a migration helping tool, called couchdb-migration. This tool interfaces with CouchDb, to update shard maps and database metadata. By the end of this guide, your CHT-Core 3.x CouchDb will be down and CHT-Core 4.x ready to be used.</description></item><item><title>App Developer Hosting in CHT 3.x</title><link>https://docs.communityhealthtoolkit.org/hosting/3.x/app-developer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/3.x/app-developer/</guid><description>This guide assumes you are a CHT app developer wanting to either run concurrent instances of the CHT, or easily be able to switch between different instances without loosing any data while doing so. To do development on the CHT core itself, see the development guide.
To deploy the CHT in production, see either AWS hosting or Self hosting
Getting startedBe sure to meet the CHT hosting requirements first. As well, if any other medic-os instances using the main docker-compose-developer-3.</description></item><item><title>Contributor Hall of Fame</title><link>https://docs.communityhealthtoolkit.org/contribute/code/hall-of-fame/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/contribute/code/hall-of-fame/</guid><description>CodeThank you to everyone who has contributed to the CHT codebase over the years! To see the full list, visit each repo on GitHub.
cht-android cht-conf cht-core cht-docs cht-interoperability cht-pipeline cht-sync cht-watchdog SecurityKudos to everyone who has disclosed security vulnerabilities.
Alex Anderson with 4 disclosures
#9122, #9121, #9120, #9108</description></item><item><title>Setup and Development</title><link>https://docs.communityhealthtoolkit.org/hosting/couch2pg/setup-and-devlopment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/couch2pg/setup-and-devlopment/</guid><description>CHT couch2pg is deprecated. For data synchronization, refer to CHT Sync.
Create read-only replicas of CouchDB data inside PostgresSQL.
The focus is specifically on CHT application data currently stored in CouchDB. If you are looking to have a read-only replica of CouchDB data for your application that isn&amp;rsquo;t the CHT, consider couch2pg.
This version is built for medic/cht-core#3.0.0 and above. For replicating data from earlier versions, see the 2.0.x branch and associated tags.</description></item><item><title>SSL Cert Install in CHT 3.x</title><link>https://docs.communityhealthtoolkit.org/hosting/3.x/ssl-cert-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/3.x/ssl-cert-install/</guid><description>Requirements Installed CHT-Core 3.x via either Self Hosted, EC2 or Local Setup, but must use docker compose. Your own SSL certifications like Let&amp;rsquo;s Encrypt. Copy certs into medic-os containerOn your server copy the .crt and .key files to the medic-os container. The existing self signed .crt and .key files will be overwritten:
sudo docker cp /path/to/ssl.crt medic-os:/srv/settings/medic-core/nginx/private/default.crt sudo docker cp /path/to/ssl.key medic-os:/srv/settings/medic-core/nginx/private/default.key Restart servicesNow that the .crt and .key files are in place, restart nginx in the medic-os container with:</description></item><item><title>Adding TLS certificates in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/adding-tls-certificates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/adding-tls-certificates/</guid><description>By default, CHT 4.x will create a self-signed certificate for every deployment. These instructions are for changing to either a pre-existing certificate or automatically creating and renewing a Certbot based certificate using ACME, like Let&amp;rsquo;s Encrypt.
This guide assumes you&amp;rsquo;ve already met the hosting requirements, specifically around Docker being installed.
Pre-existing certificateTo load your certificates into your CHT instance, we&amp;rsquo;ll be creating an interstitial container called cht-temp-tls which will enable you to copy your local certificate files into the native docker volume.</description></item><item><title>Viewing server logs in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/logs/</guid><description>CHT 4.x has the following services running via Docker and each can have its logs queried:
nginx sentinel api haproxy couchdb healthcheck upgrade-service Setting log levelBy default, the CHT server logs are set to the info level. To change the log level to debug, you can set the NODE_ENV environment variable to development. A log level of debug can affect system performance and cause log files sizes to grow rapidly. It is recommended to temporarily set the log level to debug only when needed for troubleshooting.</description></item><item><title>Troubleshooting 4.x upgrades</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/upgrade-troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/upgrade-troubleshooting/</guid><description>4.0.0 was released in November of 2022 so 4.x is mature and users have learned a number of important lessons on how to fix failed 4.x upgrades. Below are some specific tips as well as general practices on upgrading 4.x.
There&amp;rsquo;s a concept of upgrades &amp;ldquo;getting stuck&amp;rdquo; which mainly means that after many many hours an upgrade is not making any progress. Most likely, this will manifest as the progress bars in the upgrade admin web UI not increasing and &amp;ldquo;sticking&amp;rdquo; at a certain percentage.</description></item><item><title>Backups in CHT 4.x</title><link>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/backups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/production/docker/backups/</guid><description>This guide is about backups in CHT 4.x - there&amp;rsquo;s the self hosted guide for 3.x which includes backups for 3.x.
IntroductionAs CHT 4.x uses a container per service, the only data that needs to be backed up is:
CouchDB database Docker Compose and .env files TLS certificates This is because Docker containers are inherently stateless so all the important binaries are already stored in CHT&amp;rsquo;s Docker images. Docker Compose files, including the .</description></item><item><title>Message Loops</title><link>https://docs.communityhealthtoolkit.org/building/messaging/message-loops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/message-loops/</guid><description>Endless messaging loops can between the webapp and a mobile number via the gateway due to autoreplies from the webapp.
See the Github Issue.
Solution: Add the offending number(e.g 800 or SAFARICOM) to the Outgoing Deny List in the webapp&amp;rsquo;s app_settings configuration file.
&amp;#34;multipart_sms_limit&amp;#34;: 10, &amp;#34;outgoing_deny_list&amp;#34;: &amp;#34;800, SAFARICOM&amp;#34;, &amp;#34;contact_summary&amp;#34;: &amp;#34;&amp;#34;</description></item><item><title>Troubleshooting</title><link>https://docs.communityhealthtoolkit.org/building/messaging/gateways/gateway/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/messaging/gateways/gateway/troubleshooting/</guid><description>In a techlead heaven, we would have immediate physical access to gateway phones, but alas, most of the time we have to hand them over to the partner. Fortunately, comes this guide on debugging gateway problems.
Follow the steps as below (if you don&amp;rsquo;t have physical access to the phone, start with step 2 i.e debug from the server side first)
Make sure that the device:
Is connected to the internet.</description></item><item><title>Adding Privacy Policies to Apps</title><link>https://docs.communityhealthtoolkit.org/building/guides/privacy/privacy-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/privacy/privacy-policy/</guid><description>As of 3.10.0, privacy policies can be customized for every language, by adding desired content into HTML files.
Privacy policies are now publicly accessible rather than only being available after logging in. This means it can be shared with third parties, for example, app store compliance. If your instance URL is https://my-health-facility.org, then the privacy policy is available at https://my-health-facility.org/medic/privacy-policy. Added in 3.17.0.
Add these HTML files to the privacy-policies folder in your configuration.</description></item><item><title>Introduction to monitoring and alerting</title><link>https://docs.communityhealthtoolkit.org/hosting/monitoring/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/monitoring/introduction/</guid><description>This guide applies to all production instances of the CHT for both 3.x (beyond 3.9) and 4.x.
Be sure to see how to deploy a solution to monitor and alert on production CHT instances.
Each deployment will experience different stresses on its resources. Be sure to tune any alerting levels in the case of a false positive so that you may avoid them in the future. Any thresholds for alerts, and even what is alerted on, is just a guideline, not a guarantee of uptime.</description></item><item><title>Offline Hosting of CHT 3.x Server</title><link>https://docs.communityhealthtoolkit.org/hosting/3.x/offline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/3.x/offline/</guid><description>This guide is not meant for a production CHT instance. Support may be added in the future an offline CHT server in a production environment. Please see the &amp;ldquo;Considerations&amp;rdquo; section below.
Proceed only if you have staff familiar with DNS, TLS Certs, DHCP, LAN topology and Linux in general. This is a complex deployment where mistakes are easy to make unless proper training is in place.
Note This guide only applies to CHT 3.</description></item><item><title>CHT Watchdog Setup</title><link>https://docs.communityhealthtoolkit.org/hosting/monitoring/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/monitoring/setup/</guid><description>These instructions apply to both CHT 3.x (beyond 3.12) and CHT 4.x.
Medic maintains CHT Watchdog which is an opinionated configuration of Prometheus (including json_exporter) and Grafana which can easily be deployed using Docker. It is supported on CHT 3.12 and later, including CHT 4.x. By using this solution a CHT deployment can easily get longitudinal monitoring and push alerts using Email, Slack or other mechanisms. All tools are open source and have no licensing fees.</description></item><item><title>Migration</title><link>https://docs.communityhealthtoolkit.org/hosting/couch2pg/migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/couch2pg/migration/</guid><description>CHT couch2pg is deprecated. For data synchronization, refer to CHT Sync.
Assumptions &amp;amp; PrerequisitesThis guide assumes:
Your CHT instance set up. Your Postgres server is set up. We&amp;rsquo;ll be using 10.195.130.93 in this documentation, but be sure to use your production Postgres address. The server needs to have pg_dump command available. Your CHT couch2pg (aka couch2pg) instance is set up. In this guide, we&amp;rsquo;ll assume it&amp;rsquo;s on the same server as the Postgres instance.</description></item><item><title>Production CHT Watchdog</title><link>https://docs.communityhealthtoolkit.org/hosting/monitoring/production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/monitoring/production/</guid><description>These instructions apply to both CHT 3.x (beyond 3.12) and CHT 4.x.
What it means to run in productionWhen you run CHT Watchdog in production, and it is publicly accessible on the Internet, and has mission-critical data on it, you should take extra precautions around security and backup. This mainly consists of:
using TLS for all HTTP connections using VPN or SSH for insecure protocols like ssl=false in Postgres ensuring if the server were to fail, you can recover the data This guide assumes you have already set up TLS on your CHT instance and have gone through the Setup steps to deploy an instance of CHT Watchdog on server with a static IP and DNS entry, monitor.</description></item><item><title>Custom Postgres metrics in CHT Watchdog</title><link>https://docs.communityhealthtoolkit.org/hosting/monitoring/postgres-ingest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/monitoring/postgres-ingest/</guid><description>These instructions apply to both CHT 3.x (beyond 3.12) and CHT 4.x.
IntroductionAfter setting up your Watchdog instance and making it production ready, you can include additional custom metrics from your deployment. These metrics should be ingested by Prometheus and then can be used to create new Grafana dashboards and alerts. Example use cases include monitoring and alerting on health metrics like CHW visits per county or household registration rates, etc.</description></item><item><title>Integrating CHT Watchdog</title><link>https://docs.communityhealthtoolkit.org/hosting/monitoring/integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/monitoring/integration/</guid><description>These instructions apply to both CHT 3.x (beyond 3.12) and CHT 4.x.
Going beyond basic setupAfter you have done the setup of CHT Watchdog and configured it to run with TLS and have backups enabled, you may want to extend it to scrape other Prometheus data sources so that Grafana can send alerts on non-CHT Core metrics.
This guide uses example instances of CHT Core (cht.example.com) and CHT Watchdog (watchdog.</description></item><item><title/><link>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/_partial_migration_3x_docker_to_4x_k3s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/_partial_migration_3x_docker_to_4x_k3s/</guid><description>The hosting architecture differs entirely between CHT-Core 3.x and CHT-Core 4.x. When migrating from Docker Compose to K3s, specific steps are required using the couchdb-migration tool. This tool interfaces with CouchDB to update shard maps and database metadata.
Note If after upgrading you get an error, Cannot convert undefined or null to object - please see issue #8040 for a work around. This only affects CHT 4.0.0, 4.0.1, 4.1.0 and 4.</description></item><item><title/><link>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/_partial_values_explanation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/hosting/4.x/migration/_partial_values_explanation/</guid><description>Be sure to update the following values in your YAML file:
&amp;lt;your-namespace&amp;gt; (two occurrences) &amp;lt;version&amp;gt; - 4.x version you&amp;rsquo;re upgrading to &amp;lt;password&amp;gt; - retrieved from get-env call above &amp;lt;secret&amp;gt; - retrieved from get-env call above &amp;lt;admin-user&amp;gt; - needs to be the same as used in 3.x - likely medic &amp;lt;uuid&amp;gt; - retrieved from get-env call above &amp;lt;url&amp;gt; - the URL of your production instance goes here (eg example.org) &amp;lt;path-to-tls&amp;gt; - path to TLS files on disk Storage Configuration Notes:</description></item><item><title>Search Results</title><link>https://docs.communityhealthtoolkit.org/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/search/</guid><description/></item><item><title>0.x release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/0.4.15-and-earlier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/0.4.15-and-earlier/</guid><description>0.4.15March 2, 2017
Fixed potential race condition with medic-gateway. Issue: medic-projects/issues/1243 Bumped libphonenumber to make phone number validation more up to date. Issue: medic-projects/issues/1005 0.4.14December 16, 2016
Bug fix for medic-gateway sending scheduled messages. Issue: #2535 0.4.13October 21, 2016
Option to set birthdate using days old instead of weeks. Issue: #2756 The week/month is off by 2 in the Reporting Rates analytics dashboard. Issue: #2781 Remove socket limit in medic-api. Issue: #2632 0.</description></item><item><title>2.10.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.0/</guid><description>Features Use reference to translation keys in app_settings. Issue: #3127 Add date of birth to person created by SMS. Issue: #3100 Configure the max number of SMS in multipart SMS. Issue: #3095 Load messages script fails to use https. Issue: #3081 Cannot access all fields for contact in select2. Issue: #3069 Configurable contact summary cards. Issue: #3037 Display additional information in contact profile. Issue: #2914 Support additional context for hiding/showing actions.</description></item><item><title>2.10.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.1/</guid><description>Bug fixes Sending a message from the Messages tab creates a message with uuid equal to database URL. Issue: #3242</description></item><item><title>2.10.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.2/</guid><description>Bug fixes Sentinel somehow infinitely loops and continually writes to its metadata file. Issue: #3275 API crashes after /medic/_bulk_docs gets called. Issue: #3268</description></item><item><title>2.10.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.10.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.10.3/</guid><description>Bug fixes Unicode support for storing enketo xml. Issue: #3308 Support negative values in xform fields better. Issue: medic/medic-projects#1624 Trigger enketo calc updates when option names are changed. Issue: #3281 New Household button missing. Issue: #3132 Change report form language without requiring refresh. Issue: #3174 Corrupted translation strings. Issue: #3305 UI/UX improvements Show report subject name on patient page. Issue: #3309 Translate task schedule group titles. Issue: #3283 Add additional supported moment locales.</description></item><item><title>2.11.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.0/</guid><description>Migration notes #3230 changes patient ID generation so it automatically increases the length as needed, up to 13 digits. If you are validating incoming patient_ids in Sentinel, be sure to remove or correct any length restrictions, e.g. ^[0-9]{5}$ would become ^[0-9]{5,13}$. #3166 adds a new transition that adds patient_ids to every created person: generate_patient_id_on_people. Enable this transition if you want to send SMS about patients that may be created through the webapp.</description></item><item><title>2.11.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.1/</guid><description>Bug fixes Cannot report via SMS about people who are registered in the web app. Issue: #3401 Results page CSS messed up in v2.11. Issue: #3369 The user needs an associated contact to create a contact. Issue: #3394 Error when adding Place with new person. Issue: #3420 Error after canceling and re-opening any contact creation form. Issue: #3448 namespace-form-fields migration : report bulk errors. Issue: #3371 (second part)</description></item><item><title>2.11.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.2/</guid><description>Performance improvements Slow initial replication for users with lots of docs. Issue: #3508</description></item><item><title>2.11.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.11.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.11.3/</guid><description>Bug fixes The namespace-form-fields migration conflicts itself. Issue: #3534 In the create-patient-contacts migration provide a more complete list of potential patient_name locations. Issue: #3372</description></item><item><title>2.12.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.0/</guid><description>Features Add sync status indicator for offline users. Issue: #3357 Add gateway message delivery statuses. Issue: #3073 Add a replication_date property to records. Issue: #2180 Change patient id generation to store the length of id it&amp;rsquo;s generating. Issues: #3505 Allow form upload through Form Configuration UI. Issue: #3433 Bug fixes On small screen, cannot re-open date filter in history tab. Issue: #3467 Debug section of the About screen has some weird extra text.</description></item><item><title>2.12.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.1/</guid><description>Bug fixes Improved error messages for SMS endpoint. Issue: #3587 Allow for empty SMS message Content. Issue: #3656 Implement 500 item max for bulk delete. Issue: #3605 Security Fixed kanso packages that inadvertently cached credentials. Issue: #3648</description></item><item><title>2.12.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.2/</guid><description>Bug fixes Accept patient reports for patients created in app. Issue: #3740 Stop accept_patient_reports transition clearing messages for unrelated registrations. Issue: #3742</description></item><item><title>2.12.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.3/</guid><description>Bug fixes Accept messages with empty from or content. See: https://github.com/medic/medic-api/pull/185</description></item><item><title>2.12.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.4/</guid><description>Bug fixes Fix issue with /api/v1/records. Issue: #3770</description></item><item><title>2.12.5 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.12.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.12.5/</guid><description>Bug fixes Fix bug where id generation wouldn&amp;rsquo;t automatically increase id length when it ran out of ids. Issue: #3790</description></item><item><title>2.13.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.0/</guid><description>Migration notes #2635 changes the context available to the configured contact summary script. The contact parameter no longer has information about parents. This information is now in an array called lineage. More information is available in the configuration documentation. #3546 changes the implementation of the contact_summary so instead of declaring the output on the last line of the script, now you have to return the output. Usually this is as easy as adding a return on the last line, so output; becomes return output;.</description></item><item><title>2.13.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.1/</guid><description>Bug fixes Fix bug in extract-person-contacts migration introduced in 2.13.0 #4031 Remove the now invalid erlang migrations #4033</description></item><item><title>2.13.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.2/</guid><description>Bug fixes Force outputs to recalc on form load #4111</description></item><item><title>2.13.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.3/</guid><description>Improvements Bump libphonenumber to the latest</description></item><item><title>2.13.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.4/</guid><description>Improvements Bump libphonenumber for Nepal Smart Telecom.</description></item><item><title>2.13.5 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.5/</guid><description>Bug fixes Update Notification transition crashes sentinel if the patient id is misconfigured. #4121</description></item><item><title>2.13.6 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.6/</guid><description>Performance improvements Drastically improve performance of form loading when the patient context is used, and that context is very large (e.g. you&amp;rsquo;re including lineages). #4430</description></item><item><title>2.13.7 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.13.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.13.7/</guid><description>Performance improvements Various PouchDB performance improvements were backported from 2.14. This includes increasing the PouchDB version and removing our use of pouchdb-worker.</description></item><item><title>2.14.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.0/</guid><description>Additional release notes are available here.
Migration notes #3449: We included a feature which makes it unnecessary to use a repeat-relevant node in Enketo forms to workaround a bug which created an empty child. This node should now be removed. #3629: We added more configurable text to the target widgets. Also, configuring an array of target titles is now deprecated in favor specifying a single translation key. Reconfigure your targets to specify values for translation_key, subtitle_translation_key, and percentage_count_translation_key properties.</description></item><item><title>2.14.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.1/</guid><description>Performance improvements #4430: Drastically improve performance of form loading when the patient context is used, and that context is very large (e.g. you&amp;rsquo;re including lineages).</description></item><item><title>2.14.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.2/</guid><description>Bug fixes #3099: Uncaught exception triggers 500 response for subsequent requests.</description></item><item><title>2.14.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.14.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.14.3/</guid><description>Bug fixes #4457: The z-score enketo widget is not usable. #4460: Uncaught Exception: write after end error.</description></item><item><title>2.15.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.15.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.15.0/</guid><description>What&amp;rsquo;s NewView &amp;lsquo;clinic&amp;rsquo; Places in Places FilterYou might have noticed that for SMS projects, CHW areas went missing from the places filter in the Reports tab. Good news! They are back.
When we started having CHWs log into the Medic app and register families, the places filter on the reports page became crowded with thousands of families, creating a performance issue. To get around that issue, we removed 'clinic' level places from this filter drop-down so that users would only see health centers and CHW areas, no families.</description></item><item><title>2.16.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.16.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.16.0/</guid><description>What&amp;rsquo;s NewView date last visited for places on the people tabBecause knowing where you&amp;rsquo;ve been helps you know where you&amp;rsquo;re going next! - Medic proverb
In order to help CHWs achieve full coverage of every family or household they care for, we&amp;rsquo;ve added an optional feature to update the list of families or areas to display the date that family or area was last visited. You can use any patient- or family-level form or forms to update the date last visited.</description></item><item><title>2.16.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.16.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.16.1/</guid><description>What&amp;rsquo;s NewShow an icon next to families or areas that are overdue for a visitAs the ICONic Britney Spears once sang, &amp;ldquo;Show me a siiiiiign… [visit] me, baby, one more time!&amp;rdquo;
In order to help CHWs achieve full coverage of every family or household they care for, we added a feature in 2.16 to update the list of families or areas to display the date that family or area was last visited.</description></item><item><title>2.17.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.17.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.17.0/</guid><description>What&amp;rsquo;s NewShow pictures in the report view (History tab)Your selfies are safe with us (and now visible in the Reports tab).
Photos uploaded by CHWs are now visible in the Reports view, or History tab. This is currently being used in the mRDT workflow by supervisors to confirm that CHWs read the mRDT test results correctly. [#4742]
Improve styling of mRDT Enketo widget&amp;ldquo;OK, but make it pretty.&amp;rdquo; Fine, here you go: ✨ UI fairy dust ✨</description></item><item><title>2.18.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.18.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.18.0/</guid><description>What&amp;rsquo;s NewMake People page default sort configurable (UHC mode)Previously, the default sort for the People page list was alphabetical. We&amp;rsquo;ve now made the default sort configurable. For UHC mode, this would likely mean sorting by last visited date. In the future, it could include sorting by number of visits this month or another value.
To enable default contact sorting to be based on last visited date, you need to configure it in app_settings.</description></item><item><title>2.18.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.18.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.18.1/</guid><description>What&amp;rsquo;s NewCount two visits on the same day as one visitIf a family is visited twice on the same day it now only counts as one visit in UHC mode. [#4897]
Inputs group not saved when its relevance is set to falseForm inputs are now always saved on the reports even when they are marked as not relevant to help with analytics and editing forms. [#4875]</description></item><item><title>2.6.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.6.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.6.0/</guid><description>This release contains breaking changes from 0.x versions. Updating from 0.x versions may result in the application no longer operating as expected.
The app can now be used offline and synced back to the server later. Added an android app for accessing the webapp from mobile. Added Tasks feature for rich event scheduling. Forms can now be provided in XForm format for rich form UIs. Added a configurable Target analytics module.</description></item><item><title>2.6.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.6.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.6.1/</guid><description> User&amp;rsquo;s fullname is not showing up in /configuration/users. Issue: #2200 Deleted documents cause sentinel log spam. Issue: #1999 Disable nools for unrestricted users. Issue: medic-projects#149 Update libphonenumber and use strict validation. Issue: #2159 #2196 Contacts export response garbled. Issue: #2187</description></item><item><title>2.6.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.6.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.6.2/</guid><description>Update PouchDB to improve replication reliability and performance. Issue: #2134 #2167 When editing a CHP Area, previously set values for CHP, Branch, and Supervisor do not show up. Issue: #2223 Dropdowns in CHP Area create and edit forms have no blank option. Issue: #2227 allow-new appearance in Enketo doesn&amp;rsquo;t make the &amp;ldquo;New&amp;rdquo; option appear. Issue: #2251 Improve performance of Enketo db-object-widget. Issue: #2161 Ensure roles are always available on user-settings.</description></item><item><title>2.6.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.6.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.6.3/</guid><description> &amp;ldquo;console not defined&amp;rdquo; error when loading page. Issue: #2277 Pouch doesn&amp;rsquo;t update seq unless something has changed. Issue: #2288 Snackbar showing all the time. Issue: #2306 Support external_id property on user-settings docs. Issue: #2310</description></item><item><title>2.7.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.7.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.7.0/</guid><description>Features Bulk delete reports. Issue: #1000 Bug fixes Report list item summaries aren&amp;rsquo;t translated. Issue: #2100 Fix form type filter. Issue: #1409 Performance improvements Replication performance. Issue: #2286 Improve search performance. Issue: #2302 Don&amp;rsquo;t fetch form titles for each Contact report. Issue: #2300 Only fetch relevant data for the Users service. Issue: #2262 Remove clinics from the Facility filter dropdown. Issue: #2218 Optimize admin bandwidth concerns. Issue: #2211 We request facilities from the server over and over again.</description></item><item><title>2.7.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.7.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.7.1/</guid><description>Bug fixes Creating user via fails due to invalid reported_date. Issue: #2449 Performance improvements App takes minutes to load a person dropdown. Issue: #2445 Cannot load Configuration Users page. Issue: #2444</description></item><item><title>2.7.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.7.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.7.2/</guid><description>Bug fixes Connection refused when trying to load app. Issue: #2476</description></item><item><title>2.7.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.7.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.7.3/</guid><description>Bug fixes Remove maxSockets limit to allow more concurrent connections. Issue: #2492</description></item><item><title>2.8.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.8.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.8.0/</guid><description>Features Pass user&amp;rsquo;s info to rule to customize Tasks per user type or location. Issue: #2408 Add context to target types and goals. Issue: #2409 Update default translations Add ageInDays and ageInMonths functions to the XML forms context utilities. Issue: #2650 Users can now only access an optionally configured number of hierarchy levels below their facility. Issue: #2648 Bug fixes Android back button doesn&amp;rsquo;t work as expected. Issue: #2600 In date filter for Reports tab, the selected dates are being offset by 1 day.</description></item><item><title>2.8.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.8.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.8.1/</guid><description>Bug fixes If initial sync fails without syncing anything subsequent syncs get no results. Issue: #2770 Initial sync fails if server doesn&amp;rsquo;t respond within 30 seconds. Issue: #2771 Targets tab is blank on first access. Issue: #2739 Performance improvements Adding a space to a contact search term performs poorly. Issue: #2769 Local DB grows without limit. Issue: #2434</description></item><item><title>2.8.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.8.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.8.2/</guid><description>Bug fixes Ensure PouchDB doesn&amp;rsquo;t mis-label TECNO phones as devices running Safari. Issue: #2797</description></item><item><title>2.8.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.8.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.8.3/</guid><description>Performance improvements Remove traffic statistics collection. Issue: #2886</description></item><item><title>2.8.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.8.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.8.4/</guid><description>Bug fixes Debounce form submissions to stop duplicate submissions. Issue: #2909</description></item><item><title>2.8.5 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.8.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.8.5/</guid><description> No changes, only a bump in version number to trigger a new release.</description></item><item><title>2.9.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.9.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.9.0/</guid><description>Features Redesign of People tab to introduce patient centric workflows. Create Task and Target based on reports using short patient_id format. Issue: #2986 Calculate Z-Score within app workflow form. Issue: #2915 Transitions do not run for XForms. Issue: #2864 CHWs should not be able to edit their own area. Issue: #2844 Allow for people-centric SMS workflows. Issue: #2700 Unique &amp;ldquo;add person&amp;rdquo; forms to a place. Issue: #2693 Store GPS failure. Issue: #2670 Progressive Web App.</description></item><item><title>2.9.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/2.9.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/2.9.1/</guid><description>Bug fixes Added a migration to fix scheduled messages so they can be sent by medic-gateway. Issue: #3015</description></item><item><title>3.0.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.0.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.0.0/</guid><description>Upgrade notes The supported versions for client and server software have been changed significantly. Make sure your software meets the requirements before upgrading to 3.0.0. The /api/v1/messages endpoint has been removed as it was no longer actively used, and contained bugs. [#3971] The ANC analytics page and the following APIs have been removed as they are no longer used. [#1002] /api/active-pregnancies /api/upcoming-appointments /api/missed-appointments /api/upcoming-due-dates /api/high-risk /api/total-births /api/missing-delivery-reports /api/delivery-location /api/visits-completed /api/visits-during /api/monthly-registrations /api/monthly-deliveries The /api/v1/export/messages, /api/v1/export/forms, and /api/v1/export/contacts endpoints have been removed in favor of /api/v2/export/messages, /api/v2/export/reports, and /api/v2/export/contacts respectively.</description></item><item><title>3.1.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.1.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.1.0/</guid><description>Upgrade notesThere are no breaking changes when upgrading from 3.0.x.
What&amp;rsquo;s NewSMS spam protectionSMS message generation will be skipped if an identical message has been generated recently meaning our software won&amp;rsquo;t get into an infinite loop with autoresponding robots. [#4715].
Flexible phone number validationPhone number validation can be configured to be strict (default), tolerant, or disabled altogether. This is useful if phone numbers are being incorrectly rejected as invalid which can happen if carriers update their number ranges.</description></item><item><title>3.10.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.10.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.10.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesUpdates to meta databases replicationThe replication of users meta databases to the conglomerate, medic-users-meta database, is no longer configurable. This task now runs every day, at 2am UTC, and replicates feedback and telemetry documents to medic-users-meta database.
Android wrapper update required for new featuresSupporting remote first-time login is only fully functional while using medic-android version 0.5.0 or later.
Sentinel no longer advances its transition processing seq in _local/sentinel-meta-dataInstead, it advances the transition processing seq in _local/transitions-seq.</description></item><item><title>3.10.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.10.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.10.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Bug fixes cht-core#6700: For targets without idType, the winner emission is not deterministic</description></item><item><title>3.10.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.10.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.10.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Bug fixes cht-core#6848: Language translations not working when not supported by make-plural Features cht-core#6849: Add bootstrap-datepicker translations for Tagalog (tl) Illonggo (hil) and Bisaya (ceb) languages cht-core#6861: Add moment locales for Tagalog (tl) Illonggo (hil) and Bisaya (ceb) languages We recognize that it is atypical to have new features in a &amp;ldquo;bugfix&amp;rdquo; version.</description></item><item><title>3.10.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.10.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.10.3/</guid><description>Known issuesCheck the repository for the latest known issues.
Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Upgrade notesThis release fixes issues around using the default hierarchy and having contact documents that have a default type (person, clinic, health_center or district_hospital) and also have a contact_type property.</description></item><item><title>3.10.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.10.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.10.4/</guid><description>Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7169: API can return 401 status codes for valid sessions under load, forcing users to be logged out</description></item><item><title>3.10.5 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.10.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.10.5/</guid><description>This release adds a fix that overrides the default 2 minute timeout of Node HTTP requests. Client requests will no longer timeout at API level. Timeouts are still possible, but can only come from the load balancer or CouchDB.
Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7183: Client requests receive a 502 statuscode after 2 minutes of idle time</description></item><item><title>3.11.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.11.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.11.0/</guid><description>Known issuesCHT Android medic-android#127: Image upload forms crash the app. This has been broken for some time and is not easy to fix while supporting Android 4.4 so the resolution has been deferred until we can make this breaking change. Reach out if you require this feature in the near future. CHT CoreCheck the repository for the latest known issues.
Upgrade notes This upgrade can be rolled out remotely. Users will download the new version in the background and be prompted to reload the app when it&amp;rsquo;s ready.</description></item><item><title>3.11.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.11.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.11.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7169: API can return 401 status codes for valid sessions under load, forcing users to be logged out</description></item><item><title>3.11.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.11.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.11.2/</guid><description>This release adds a fix that overrides the default 2 minute timeout of Node HTTP requests. Client requests will no longer timeout at API level. Timeouts are still possible, but can only come from the load balancer or CouchDB.
Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7183: Client requests receive a 502 statuscode after 2 minutes of idle time</description></item><item><title>3.11.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.11.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.11.3/</guid><description>This release adds a fix for the phone widget&amp;rsquo;s validation when editing forms.
Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7261: Phone field invalid when editing a contact with a valid phone number.</description></item><item><title>3.12.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.12.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.12.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notes This upgrade can be rolled out remotely. Users will download the new version in the background and be prompted to reload the app when it&amp;rsquo;s ready. A small amount of data will be needed to download the new version. Upgrading to this version does not require other applications to be upgraded. This release does not drop support for any hardware or software that works with the previous version.</description></item><item><title>3.12.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.12.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.12.1/</guid><description>This release adds a fix for the phone widget&amp;rsquo;s validation when editing forms.
Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7261: Phone field invalid when editing a contact with a valid phone number.</description></item><item><title>3.13.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.13.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.13.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesConfiguration for Task Due Date DisplayBy default, an overdue task is simply displayed as &amp;ldquo;Due today&amp;rdquo;. This enhancement adds configuration to allow for displaying the number of days passed since the task&amp;rsquo;s due date. This configuration is modified by setting the task_days_overdue value as described in the documentation.
If the configuration is not set, there will be no UX changes to the way that overdue tasks are displayed.</description></item><item><title>3.14.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.14.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.14.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNew dialog showing sync statusWhen an offline user manually triggers a sync via the hamburger menu, a notification dialog is opened indicating the status of the sync process.
Sync in progress: Sync complete: Sync failed (with retry option): #5207: Show dialog when user clicks &amp;ldquo;Sync Now&amp;rdquo; in hamburger menu
Updated icon for the Create Report buttonThe icon for the Create Report button has been updated so that its purpose is more clear.</description></item><item><title>3.14.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.14.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.14.1/</guid><description>This release adds a fix for repeat groups in Enketo forms to pick the correct translation for fields.
Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7515: Translations not working when using repeat groups with dynamic repeat count</description></item><item><title>3.14.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.14.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.14.2/</guid><description>This release adds a fix for repeat groups in Enketo forms using choice_filter.
Known issuesCheck the repository for the latest known issues.
Breaking changesNone.
UI/UX changesNone.
Bug fixes #7550: Fix blank labels in forms with repeat group using choice_filter</description></item><item><title>3.15.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.15.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.15.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
HighlightsSupport reporting of Bikram Sambat dates using JSON formsSMS forms can now include a date form for submitting an exact date in Bikram Sambat format. Learn how to use this feature in the documentation.
#4613: Support reporting of dates as exact date using text forms
A new API for adding users in bulkPreviously there was an API for creating a single user but this feature adds an API for creating multiple users in one go.</description></item><item><title>3.16.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.16.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.16.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changes #6028: Gracefully handle overflowing form title text HighlightsSupport adding many users at once using data from a CSV file
New CHT users (and associated places) can now be added in bulk by importing the data from a CSV file. Learn how to use this feature in the documentation.
#7706: Add support for bulk user upload from CSV</description></item><item><title>3.16.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.16.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.16.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7912: Calling /api/v1/settings/deprecated-transitions prevents any future transitions to run over new records in API #7933: Error 500 when processing SMS message missing year from Bikram Sambat aggregate</description></item><item><title>3.17.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.17.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.17.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesAction button labels now show for all devicesAction button labels now show on lower resolution phones, making it easier to understand what each action button does.
#7721: Icon labels on action buttons are not showing at the default dp for commonly used mobile devices. Update to search and filters on the Contacts and Reports tabsSearch and filters on the Contacts and Reports tabs have been updated to more closely align with Android UX and material design patterns.</description></item><item><title>3.17.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.17.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.17.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7912: Calling /api/v1/settings/deprecated-transitions prevents any future transitions to run over new records in API #7933: Error 500 when processing SMS message missing year from Bikram Sambat aggregate</description></item><item><title>3.17.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.17.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.17.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7670: Same patient id assigned to multiple patients in a same instance #8576: Low performance in Reports tab for users with thousands of places</description></item><item><title>3.2.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.2.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.2.0/</guid><description>Upgrade notesThere are no breaking changes when upgrading from 3.1.x.
MutingYou can now mute people and places which stops any scheduled messages from being sent and updates the UI for that contact. [#4767]
For more information read the feature overview and the configuration documentation.
UHC performanceIf you have UHC configured loading contacts is now much faster. [#4768]
BenchmarksThe following benchmarks were taken on a Tecno Y4 as a CHW with a representative amount of data.</description></item><item><title>3.2.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.2.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.2.1/</guid><description>Bug fixesMore reliable replicationIn earlier versions if a device&amp;rsquo;s replication connection got interrupted some documents may never be replicated to that device leaving it in an unknown state. To avoid this it is recommended that everyone upgrade to 3.2.1 or above as soon as possible. [#5235]
Refresh dialog not shownWhen upgrading from 2.x to 3.2.0 the dialog to update isn&amp;rsquo;t presented to the user. The user is unaware the app updated and would need to do a manual refresh to get the latest app changes.</description></item><item><title>3.3.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.3.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.3.0/</guid><description>Upgrade notesThere are no breaking changes when upgrading from 3.2.x.
PurgingDocuments on phones can now be deleted once no longer useful. This allows for space on the device to be recovered and improves performance. Read the configuration documentation for how to add script to indicate that a document is no longer useful and is ready for purging. [#5048]
Outgoing messages screenAdministrators can now see all outgoing messages that are either scheduled, due, or unable to be sent.</description></item><item><title>3.4.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.4.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.4.0/</guid><description>Known issues medic#5617: Broken functionality after upgrade to 3.4 with custom locales Upgrade notesBreaking changesThere are no breaking changes when upgrading from 3.3.x.
Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Scale to support more usersIn previous versions users who had an internet connection would maintain a continuous request to the server waiting for any relevant database changes.</description></item><item><title>3.4.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.4.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.4.1/</guid><description>Bug fixesUnicode form codes not clearing schedulesWhen using non-Latin characters in a form code our software failed to find the right schedules to clear so unwanted messages were being sent. This affects versions from 3.0.0 to 3.4.0. medic#5698</description></item><item><title>3.5.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.5.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.5.0/</guid><description>Known issues A small performance regression when loading the list of Contacts. medic#5755. Upgrade notesBreaking changesThere are no breaking changes when upgrading from 3.4.x.
Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ PerformanceOptimizing the history tabWe found that loading the History tab was taking a long time in projects with many places.</description></item><item><title>3.6.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.6.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.6.0/</guid><description>Known issuesNone.
Upgrade notesBreaking changesThere are no breaking changes when upgrading from 3.5.x.
Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Africa&amp;rsquo;s Talking integrationVersion 3.6.0 includes an integration with the Africa&amp;rsquo;s Talking SMS aggregator. This allows us to offer a cloud based alternative to managing your own medic-gateway devices.</description></item><item><title>3.6.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.6.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.6.1/</guid><description>Bug fixes medic#5844: Source validation failing for Africa&amp;rsquo;s Talking aggregator integration</description></item><item><title>3.6.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.6.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.6.2/</guid><description>Performance fixes medic#5942: Replace underscore with lodash in replication</description></item><item><title>3.7.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.7.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.7.0/</guid><description>Known issuesNone.
Upgrade notesBreaking changes A new OS level dependency (xsltproc) is required for generating XFORM html on the server. Not fully supported by medic-conf@2.x. For full functionality, users must upgrade to medic-conf@3.x. With the introduction of configurable hierarchies, additional configuration must be added. More information about how to set up configurable hierarchies. Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.</description></item><item><title>3.7.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.7.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.7.1/</guid><description>Bug fixes cht-core#6025: Outbound can halt scheduler execution permanently cht-core#6029: Inconsistent field label in CHT Reference App - Blue skin color cht-core#6052: Missing labels for report form fields cht-core#6065: Confirmation notification displayed while navigating away from tasks list cht-core#6071: Configurable contacts not correctly mapped as SMS recipients medic-conf#260: Fields are not showing when custom type is defined for appliesToType</description></item><item><title>3.8.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.8.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.8.0/</guid><description>Known issuesNo known issues.
Upgrade notesBreaking changesThe changes to tasks and targets require a &amp;ldquo;3.8 compatible&amp;rdquo; partner configurations to be deployed for the tasks and target tabs to continue to function. You&amp;rsquo;ll see errors on these tabs and the console error Rules Engine: Updates to the nools schema are required if the configuration is not compatible with 3.8. All &amp;ldquo;3.8 compatible&amp;rdquo; configurations are backward compatible and can be deployed safely to any Core Framework version.</description></item><item><title>3.8.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.8.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.8.1/</guid><description>Upgrade notes CouchDB view code has been modified which will require rebuilding which may take some time depending on how many docs you have. We recommend you use the Stage feature to rebuild the views before upgrading to reduce server downtime. Webapp code has been modified and therefore users will download the application again. Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.</description></item><item><title>3.8.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.8.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.8.2/</guid><description>Known issues When logging out (or after being logged out), users could end up in a redirect loop (cht-core#6337). Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Bug fixes cht-core#6583: Users are forced to login one year after they last logged in</description></item><item><title>3.9.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.9.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.9.0/</guid><description>Known issuesNone.
Upgrade notesBreaking changesDocker image update requiredPrior to initiating an upgrade to 3.9, you will need to update the CHT Docker Image and a few packages inside the medic-os container. Please closely follow our 3.9 CHT Docker Image Upgrade Process
This image updates the horticulturalist package to stage ddocs properly.
Outbound Push only sends each report onceThe implementation of Outbound Push has changed as part of cht-core#6306. Now each configured outbound push will be sent only once per doc.</description></item><item><title>3.9.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.9.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.9.1/</guid><description>Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Bug fixes cht-core#6562: Switching between tabs while tasks are being calculated can result in having multiple task documents with the same emission id cht-core#6583: Users are forced to login one year after they last logged in</description></item><item><title>3.9.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/3.9.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/3.9.2/</guid><description>Supported softwareThere are no required changes to the supported software matrix from 3.0.0.
Node CouchDB Browsers SMS bridge Android medic-android medic-couch2pg 8.11+ 2.1+ Chrome 53+, Firefox latest medic-gateway 4.4+ 0.4.5+ 3.0+ Bug fixes cht-core#6700: For targets without idType, the winner emission is not deterministic cht-core#6756: Backwards compatibility for location gathering</description></item><item><title>4.0.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.0.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.0.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesTo prepare for this release, please read through our Preparing to Upgrade documentation.
Upgrade process Be aware that as this is a major upgrade some manual steps are required - following the usual upgrade process will not work. Data migration documentation is coming soon, but in the meantime please reach out on the forum for direct support in upgrading. New projects should start on 4.</description></item><item><title>4.0.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.0.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.0.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7912: Calling /api/v1/settings/deprecated-transitions prevents any future transitions to run over new records in API #7918: Error loading forms containing countdown-widget #7933: Error 500 when processing SMS message missing year from Bikram Sambat aggregate ContributorsThanks to all who committed changes for this release!
Gareth Bowen Diana Barsan</description></item><item><title>4.1.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.1.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.1.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesBulk delete of reports redesignThe bulk delete of Reports tab has been redesigned to allow the user to select multiple reports and delete them. You can read more about it in the Reports tab docs.
#7778: Bulk delete of reports redesign HighlightsSupport replacing a CHW user without any connectivityOffline users can now be replaced on a device so that a new user can use that device without needing to immediately sync with the server.</description></item><item><title>4.1.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.1.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.1.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Features #7712: Add moment and datepicker translations for Luganda Technical improvements #8110: E2E test failing when next year is leap year #8112: Integration E2E test failing when next year is leap year ContributorsThanks to all who committed changes for this release!
Gareth Bowen Andra Blaj Diana Barsan</description></item><item><title>4.1.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.1.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.1.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8173: API Changes watcher skips changes - or becomes blocked #8205: Nginx can&amp;rsquo;t connect to API after container restarts because of dynamic IP allocation ContributorsThanks to all who committed changes for this release!
Diana Barsan Gareth Bowen</description></item><item><title>4.10.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.10.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.10.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesThis release includes two improvements to Aggregate Targets.
Users can now view data for the previous reporting period Users assigned multiple places can now see Aggregate Targets HighlightsAggregate Targets can now be viewed for the previous monthThe CHT now supports viewing Aggregate Targets for the previous month. All users who have access to Aggregate Targets will see a Filter option that allows them to choose between the current month and previous month.</description></item><item><title>4.11.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.11.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.11.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
HighlightsThe CHT-Datasource API now supports querying personsThe CHT datasource API has been expanded to allow querying places and persons by contact type.
DetailsSee more details in the API docs.
Phone numbers are not required to be checked for duplicatesPhone number fields can now be used without automatically checking for duplicates. This can be useful for workflows where users may share a phone or for any workflow where having duplicate phones is possible, and it&amp;rsquo;s undesirable to check for duplicates.</description></item><item><title>4.12.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.12.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.12.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesThis release includes changes to the user interface which will improve the learnability of the CHT by aligning with the look and feel of other android apps. Below is a summary of the changes, all of which were covered in the July Round-up Call:
Update to the overall CHT app Navigation experience Added the ability to temporarily opt out of the new Navigation experience Removal of opt out capabilities for Old Filter and Search Removal of opt out capabilities for Old Action Bar HighlightsNavigation UpdatesNavigation has been updated to more closely align with Material Design standards.</description></item><item><title>4.13.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.13.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.13.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changes #8119: Show confirmation message in training cards when navigating to another page HighlightsTargets accuracy improvementsThe calculation and aggregation of targets and recalculation of tasks have been refactored from only being triggered when visiting certain pages to being calculated automatically when the state changes or documents are updated. Previously, target calculations could be incomplete or inaccurate when users switched devices or didn&amp;rsquo;t regularly open certain pages to trigger the calculation.</description></item><item><title>4.14.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.14.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.14.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changes #9514: Sidebar menu does not close if clicking on the current page link #9481: Improve Sidebar Menu&amp;rsquo;s button and label placement HighlightsImproved Contact ManagementContact creation is now restricted to direct parent facilities only, reducing errors in contact hierarchy #9426.
Enhanced Sidebar FunctionalityThe sidebar menu now keeps the current page link selected without closing automatically, improving navigation flow and user experience #9514.</description></item><item><title>4.15.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.15.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.15.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
HighlightsTraining PageAfter deploying the training cards feature to introduce a new workflow to over 10,000 CHPs, we received feedback that users need a way to easily revisit their training content. Care Teams is working on a new Training Materials page which will be found in the auxiliary menu of the CHT.
It will display a list of training content that have been assigned to each user, with an indication to show which have been completed, that users can access repeatedly if necessary.</description></item><item><title>4.16.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.16.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.16.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
HighlightsUpgrading to CouchDb 3.4.2CouchDb 3.4.2 comes bundled by default with CHT Core 4.16.0 and includes a multitude of improvements, such as:
Adds Nouveau, an implementation of Lucene, which will be used in the near future for improved freetext searching Improved security by adding a new, more secure and more performant password hashing algorithm An alternative JavaScript view engine, which has improved performance when indexing views.</description></item><item><title>4.17.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.17.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.17.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesThe login experience now includes a password reset page for users who are required to change their password upon first login. This page ensures that new users and users whose passwords have been manually updated by an admin are prompted to update their credentials before accessing the app.
See the workflow documentation for more details.
HighlightsChange password on first loginSystem admin users create accounts for CHWs and then share the password with them.</description></item><item><title>4.18.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.18.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.18.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changes #9682: Add support for Right to Left languages HighlightsRight to Left Language Support Support for Arabic as a CHT language was added in 4.16.0. Now, the CHT can properly display content in a full RTL layout! This greatly improves the usability of the application for native RTL language speakers.
See the documentation for more details.
#9682: Add support for Right to Left languages</description></item><item><title>4.2.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.2.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.2.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesFloating Action ButtonThe additive actions (creating reports, places, people, etc&amp;hellip;) have moved from the bottom action bar to a Floating Action Button that opens a menu with all actions. This change aligns the CHT more closely with Android UX and material design patterns, and applies to the Messages, Reports, and Contacts tab.
NOTE: The bottom action bar can be temporarily re-enabled for specific users by granting them the can_view_old_action_bar permission; however, it will be completely removed in a future release.</description></item><item><title>4.2.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.2.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.2.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Improvements #8214: Align nginx and ALB timeout values ContributorsThanks to all who committed changes for this release!
Diana Barsan Jennifer Q Gareth Bowen</description></item><item><title>4.2.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.2.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.2.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8161: Telemetry doc metadata.versions.app is unknown for all telemetry docs #8359: Infinite scrolling not working on Contacts tab ContributorsThanks to all who committed changes for this release!
Diana Barsan Jennifer Q Gareth Bowen</description></item><item><title>4.2.3 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.2.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.2.3/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8539: Sentinel stuck in infinite loop when 100 sequential deletions fail to generate tombstones Technical improvements #8558: Skip Protractor e2e tests suites on old supported branches ContributorsThanks to all who committed changes for this release!
Diana Barsan Jennifer Q Gareth Bowen</description></item><item><title>4.2.4 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.2.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.2.4/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7670: Same patient id assigned to multiple patients in a same instance #8576: Low performance in Reports tab for users with thousands of places</description></item><item><title>4.3.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.3.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.3.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesContinuous downwards replication (the algorithm through which offline users download docs from the server) has been completely rewritten. This change required a high number of view updates, which implies that staging this upgrade and indexing views before upgrading will be a lengthy process - depending on the size of the database. Additionally, the server might need additional storage while this process is ongoing.</description></item><item><title>4.3.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.3.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.3.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8478: Invalid phone for patient still running triggers ContributorsThanks to all who committed changes for this release!
Prajwol Shrestha Gareth Bowen Jennifer Q Diana Barsan</description></item><item><title>4.3.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.3.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.3.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7670: Same patient id assigned to multiple patients in a same instance #8576: Low performance in Reports tab for users with thousands of places #8589: Users unable to edit the report they created</description></item><item><title>4.4.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.4.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.4.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesThe deprecated hardcoded national_admin role no longer behaves as a CouchDb admin. The role now behaves as an ordinary online user role, with no additional implicit permissions. Configurations using national_admin role can either switch to using a CouchDb admin for admin-only tasks and/or granting more permissions to national_admin.
Breaking changesNone.
UI/UX changesCHT dialogs.CHT dialogs were updated to align with Material guidelines.</description></item><item><title>4.4.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.4.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.4.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #7670: Same patient id assigned to multiple patients in a same instance #8576: Low performance in Reports tab for users with thousands of places #8589: Users unable to edit the report they created ContributorsThanks to all who committed changes for this release!
Jennifer Q Gareth Bowen Diana Barsan</description></item><item><title>4.4.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.4.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.4.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8745: error.loading.form.no_authorized when opening a form from tasks tab because context evaluates to false ContributorsThanks to all who committed changes for this release!
Diana Barsan</description></item><item><title>4.5.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.5.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.5.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changes #8513: Align &amp;ldquo;Target&amp;rdquo; components with Material design guidelines #8541: Options with long names look wrong in enketo selects HighlightsSchedules can be created by passing array on start_fromIt is now possible to configure the start_from property to accept array of fields while configuring SMS schedules. This allows users to pass multiple fields and the first existing field will be used to create schedules.</description></item><item><title>4.5.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.5.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.5.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8745: error.loading.form.no_authorized when opening a form from tasks tab because context evaluates to false ContributorsThanks to all who committed changes for this release!
Diana Barsan Jennifer Q</description></item><item><title>4.5.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.5.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.5.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #8837: Telemetry date not logged on telemetry documents ContributorsThanks to all who committed changes for this release!
Jennifer Q</description></item><item><title>4.6.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.6.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.6.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changes #6177: Improve look and utility of the &amp;ldquo;About&amp;rdquo; page #7770: Browser compatibility modal notice for Chrome version 75-90 #8075: Update default branding to CHT logo #8660: Link to Contact&amp;rsquo;s Profile from Messages tab HighlightsAllow contact searches in forms to be filtered by descendants of the current contactA contact selector can be used in forms to allow users to select a contact by searching.</description></item><item><title>4.7.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.7.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.7.0/</guid><description>Known issues Due to a critical bug that prevented further upgrades from 4.7.0, we have have removed 4.7.0 from our releases list, so that it will not be possible to upgrade to 4.7.0. The bug has been fixed in 4.7.1. If you have already installed or upgraded to 4.7.0, please connect with us on the forum to get unblocked. We apologise for the inconvenience. Upgrade notesBreaking changesNone.
UI/UX changes #5807: Fix widget wrapping when displaying multiple columns.</description></item><item><title>4.7.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.7.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.7.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #9117: Impossible to upgrade from 4.7.0 Technical improvementsNone.
ContributorsThanks to all who committed changes for this release!
Diana Barsan</description></item><item><title>4.7.2 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.7.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.7.2/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #9166: &amp;ldquo;users-meta failed with compilation_error&amp;rdquo; when upgrading from 4.2.4 #9187: Haproxy unit tests are failing due to haproxy patch release Technical improvementsNone.</description></item><item><title>4.8.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.8.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.8.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
HighlightsPerformanceThe Contacts page loads much faster now. Using apdex scores and testing on low spec devices, we were able to identify slow areas and make improvements to both the list view and the detail view.
Apdex Improvements #9006: Improves performance of the list view by reducing the number of rows fetched each time #9019: Improves performance of the detail view by reducing loops for tasks and reports SecurityTwo security issues with severity level of &amp;ldquo;high&amp;rdquo; and one of &amp;ldquo;low&amp;rdquo; were fixed in this release.</description></item><item><title>4.8.1 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.8.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.8.1/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesNone.
Bug fixes #9166: &amp;ldquo;users-meta failed with compilation_error&amp;rdquo; when upgrading from 4.2.4 #9187: Haproxy unit tests are failing due to haproxy patch release Technical improvementsNone.</description></item><item><title>4.9.0 release notes</title><link>https://docs.communityhealthtoolkit.org/core/releases/4.9.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/core/releases/4.9.0/</guid><description>Known issuesCheck the repository for the latest known issues.
Upgrade notesBreaking changesNone.
UI/UX changesThis release adds support for assigning multiple places to users. Users who are configured to have multiple places will see some subtle UI changes as described in the Highlights section. For a video walkthrough of the changes, check out the June 2024 CHT Round-up call and this forum post.
HighlightsAllow multiple places to be assigned to usersTo better support Supervisors who manage CHWs across multiple areas, it is now possible to assign more than one “Place” (ie Community Health Unit, Health Center, etc…) to a user.</description></item><item><title>Creating Additional Docs from App Forms</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/additional-docs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/additional-docs/</guid><description>In version 2.13.0 and higher, you can configure app forms to generate additional docs upon submission. You can create one or more docs using variations on the configuration described below. One case where this can be used is to register a newborn from a delivery report, as shown below. First, here is an overview of what you can do and how the configuration should look in XML:
Extra DocsExtra docs can be added by defining structures in the model with the attribute</description></item><item><title>Making Calls and Sending SMS from App Forms</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/app-form-sms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/app-form-sms/</guid><description>Triggering Calls and SMSWhen an XForm is loaded on a phone you can start a phone call or trigger the sending of an SMS within the form itself. This can be useful if within a task or assessment, you want to tell the user to contact a patient, or perhaps a health worker at a facility.
To set up the call or SMS you&amp;rsquo;ll need to create a link with tel: or sms: within a note field.</description></item><item><title>Obtaining Browser and Phone Logs</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/obtaining-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/obtaining-logs/</guid><description>There are many places where useful logs reside. This details all those places, and the easiest way to get a hold of them.
On a laptop or desktopTo check if there are relevant logs open up the developer console in your browser. The shortcut is probably COMMAND+OPTION+I on MacOS, or CTRL+SHIFT+I on Linux and Windows. Click the console tab and copy out any errors or logging that you think is relevant.</description></item><item><title>CHT API</title><link>https://docs.communityhealthtoolkit.org/building/reference/_partial_cht_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/_partial_cht_api/</guid><description>Introduced in v3.12.0
Provides CHT-Core Framework&amp;rsquo;s functions to contact summary, targets and tasks. The API is available in the cht reserved variable under the v1 version.
Function Arguments Description hasPermissions(permissions, userRoles, chtPermissionsSettings) permissions: String or array of permission name(s).
userRoles: (Optional) Array of user roles. Default to the current logged in user.
chtPermissionsSettings: (Optional) Object of configured permissions in CHT-Core&amp;rsquo;s settings. Default to the current instance&amp;rsquo;s configured permissions. Returns true if the user has the permission(s), otherwise returns false.</description></item><item><title>Contact Muting in SQL queries</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/muting_in_dashboards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/muting_in_dashboards/</guid><description>When a contact gets muted, two of many things happen:
The target contact and all of its descendants have a muted property set equal to the date they were muted an entry is added to the contact&amp;rsquo;s muting_history in sentinel&amp;rsquo;s info docs When building dashboards on Superset, Klipfolio, or other data visualization platforms, you might need to exclude these muted contacts from the visualized data. An easy way to do this is to check the contact&amp;rsquo;s muted property which when present has the date value of when the contact was muted and when absent means that the contact is not muted.</description></item><item><title>Contact Tracing</title><link>https://docs.communityhealthtoolkit.org/exploring/contact-tracing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/contact-tracing/</guid><description>The CHT’s Contact Tracing functionality enables effective disease surveillance within communities to help control infectious disease outbreaks. It is a community public health tool that is designed to:
Centrally register patient cases and track contacts to prevent secondary spread of diseases in communities Create a coordinated approach to contact tracing within existing health systems Communicate the importance of self-isolation and symptom screening to exposed individuals and their families Problem Being AddressedAn essential part of containing disease outbreaks, such as COVID-19, requires public health organizations to rapidly notify people who have come into contact with confirmed or suspected patient cases.</description></item><item><title>Fixing couch2pg Memory Errors</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/couch2pg-oom-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/couch2pg-oom-errors/</guid><description>Couch2pg is deprecated. For data synchronization, refer to CHT Sync.
Some times when couch2pg is replicating documents to postgres, it encounters very large info docs that are larger than the memory allocation of the document sync array and causes out-of-memory errors. To fix this, we need to delete this document so that couch2pg can proceed. Below are steps to follow to achieve this.
Reduce the size of the replicated docs to a value of say 4 in the couch2pg.</description></item><item><title>CouchDB Authentication</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/couchdb-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/couchdb-authentication/</guid><description>To invalidate a session in couchdb, there are two options: Change the session signing certificate on the server Change the password and/or salt for the user whose session should be invalidated There are drawbacks to note with each. Option 1 will invalidate all sessions; option 2 will invalidate all sessions for that user, and also their password.
Because of the nature of couch&amp;rsquo;s session management, there is no way to see a list of active/open sessions.</description></item><item><title>Primary Health Care Adaptations for COVID-19</title><link>https://docs.communityhealthtoolkit.org/exploring/phc-covid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/phc-covid/</guid><description>Primary Health Care (PHC) workflows using the CHT are easily adaptable to help communities and facilities strengthen continuity of routine primary care services during COVID-19. Adapting PHC workflows is designed to:
Address disruptions to PHC delivery within communities while keeping CHWs and patients safe Offer remote patient and CHW support through call and text-first protocols Limit physical contact between patients, CHW’s, and facility providers by modifying existing health assessments Contain transmission via embedded COVID-19 symptom screening and referral protocols Problem Being AddressedMost primary health care programs are not designed to address the specific health needs of pandemics, such as COVID-19.</description></item><item><title>COVID-19 Education and Training for CHWs</title><link>https://docs.communityhealthtoolkit.org/exploring/covid-education/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/covid-education/</guid><description>The COVID-19 pandemic has created unique challenges to providing in-person Community Health Worker training. To support CHWs, three learning modules were created to rapidly and remotely train them on COVID-19 safety protocols and patient care. Through CHT app and SMS deployments, Supervisors can now train CHWs on care workflows without being physically present. This example covers the following learning modules:
Health safety protocols for preventing the spread of COVID-19 Preventing the dissemination of misinformation about COVID-19 Recognizing COVID-19 and caring for patients with suspected infection Problem Being AddressedIt is important for Community Health Workers to stay safe and serve their communities by understanding effective health protocols for preventing the spread of COVID-19.</description></item><item><title>COVID-19 Testing with Rapid Diagnostic Tests</title><link>https://docs.communityhealthtoolkit.org/exploring/covid-rdt-reference-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/covid-rdt-reference-app/</guid><description>Medic has worked with FIND to build a CHT reference application for COVID-19 point-of-care testing with Rapid Diagnostic Tests (RDT). Using the reference app as an example, CHT app developers can easily include the provisioning and capture of RDT in workflows. These workflows can include third-party applications, like Dimagi&amp;rsquo;s RD-Toolkit, that guide health workers through the use of the RDT.
You can find the code for this application in the CHT Core repository on GitHub.</description></item><item><title>Database Conflicts</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/database-conflicts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/database-conflicts/</guid><description>Conflicts are a natural and unavoidable part of working in a distributed system.
Conflicts occur when one client (eg PouchDB) attempts to replicate to another (eg CouchDB), and the document that the first has does not have the same tree of changes that the second one has.
An exampleTo make it clear what&amp;rsquo;s happening, let&amp;rsquo;s walk through an example. If you already understand conflicts feel free to skip this section.</description></item><item><title>Direct-to-client, two-way texting workflows on CHT</title><link>https://docs.communityhealthtoolkit.org/exploring/direct-to-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/direct-to-client/</guid><description>This documentation provides a guide for designing and deploying direct-to-client (D2C), two-way texting (2wT) workflows to support client follow-up care using the community health toolkit (CHT). 2wT is a mobile text messaging system built on open-source, CHT tools to engage clients in their health care; to facilitate prompt client - healthcare provider interactions; to provide low-cost telehealth; and, to improve health care outcomes through the early identification of, and referral for, potential complications.</description></item><item><title>Event Based Surveillance</title><link>https://docs.communityhealthtoolkit.org/exploring/ebs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/ebs/</guid><description>The CHT’s Event Based Surveillance (EBS) functionality enables rapid capture of information about community events that are a potential risk to public health. Deployed at the community level, this functionality is designed to:
Achieve earliest possible detection of COVID-19 cases in communities Provide visibility into signals, reports, and investigations centrally for follow-up Coordinate and support local action based on existing roles in disease surveillance Problem Being AddressedPatient reporting through traditional primary health care channels is not well suited for detecting rapidly spreading outbreaks at a community scale.</description></item><item><title>Feature Flags</title><link>https://docs.communityhealthtoolkit.org/building/guides/updates/feature-flags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/updates/feature-flags/</guid><description>Some CHT Core features can be enabled for specific users only. This can be particularly helpful for features that require training. The updated or &amp;ldquo;new&amp;rdquo; version will generally be the system default, but users can be configured to see the &amp;ldquo;old&amp;rdquo; version. If you do nothing when you upgrade, users will automatically start seeing the new version.
Note Feature flags are used primarily as a way to phase in updates. The old version should be considered deprecated and will be completely removed in a future release.</description></item><item><title>Fetching forms from Google Drive</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/google-drive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/google-drive/</guid><description>To work collaboratively on form design it can be helpful to keep XLSForms in Google Drive. The fetch-forms-from-google-drive action downloads these XLSForms so that they can be converted to XForms and uploaded to your CHT app.
This action requires the following files in the top-level folder of your CHT app config: forms-on-google-drive.json and .gdrive.secrets.json.
forms-on-google-drive.jsonThis JSON file contains key value pairs, where the key is the relative path and name for the downloaded file, and the value is the file&amp;rsquo;s Google Drive File ID.</description></item><item><title>Focused Group Discussion Template</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/template/</guid><description>Remember Be warm, but professional. Record audio when possible. Sample real experiences, don’t ask for opinions (ex. Tell me about the last time you did XYZ). No leading questions or examples of answers. Silence is OK – give participants time to think about the question. If the participant doesn’t understand the question, take a moment to rephrase it. Think about the insight you are trying to uncover. Avoid becoming the expert.</description></item><item><title>Input data available in forms</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/form-inputs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/form-inputs/</guid><description>CHT forms have access to varying amounts of input data depending on the type of form and its source.
contact formsAvailable data:
initial contact data inputs data for user Contact data via contact selector Initial contact data in contact formsCreate formsForms for adding contacts have access to a small group of fields contained in a top-level group that is named for the contact_type id of the contact being added (so person, clinic, etc).</description></item><item><title>Generative Interview Guide</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/generative-template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/generative-template/</guid><description>Remember Be warm, but professional. Record audio when possible. Sample real experiences, don’t ask for opinions (ex. Tell me about the last time you did XYZ). No leading questions or examples of answers. Silence is OK – give participants time to think about the question. If the participant doesn’t understand the question, take a moment to rephrase it. Think about the insight you are trying to uncover. Avoid becoming the expert.</description></item><item><title>Learning and Care</title><link>https://docs.communityhealthtoolkit.org/exploring/learning-care/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/learning-care/</guid><description>The Learning &amp;amp; Care Apps in the Community Health Toolkit are designed to onboard community health workers remotely to new digital training tools, and help them learn new information and care delivery responsibilities through customized educational modules.
The modules can be deployed both (i) via the Android integration with the Academy App (powered by OppiaMobile) described in this documentation, and (ii) within the CHT core alone, to provide a seamless online &amp;amp; offline experience for CHWs, supervisors, and government partners.</description></item><item><title>Local Docker Setup</title><link>https://docs.communityhealthtoolkit.org/building/tutorials/_partial_docker_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tutorials/_partial_docker_setup/</guid><description>Linux (Ubuntu) macOS Windows (WSL2) Download and install Docker Desktop.
Alternatively, on Linux you can use the following commands to install Docker Engine. (This will reduce the layers of technical abstraction for running containers, but will not include a GUI application for managing your Docker resources.)
curl -fsSL get.docker.com -o get-docker.sh &amp;amp;&amp;amp; sh get-docker.sh # OPTIONAL: Allow user to run Docker without sudo dockerd-rootless-setuptool.sh install echo &amp;#34;export PATH=/usr/bin:$PATH&amp;#34; &amp;gt;&amp;gt; ~/.</description></item><item><title>Loss to Follow Up</title><link>https://docs.communityhealthtoolkit.org/exploring/interoperability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/interoperability/</guid><description>Loss to Follow Up Workflow (LTFU)This workflow describes a use case where a health facility or a requesting system generates a list of patients who have missed follow-up appointments that were made through the CHT. A CHW would then follow up with the listed patients through SMS, a physical visit or a phone call.
Problem Being AddressedData exchange between the CHT and other systems has primarily been at peer-to-peer level. This means that the integration is built to meet the specific need in the unique scenarios.</description></item><item><title>Privacy &amp; Data Protection Policy</title><link>https://docs.communityhealthtoolkit.org/building/guides/privacy/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/privacy/policy/</guid><description>Note This policy is reviewed and updated periodically by our Responsible Data Working Group and is intended as a resource for the CHT community. If you have any questions, please reach out to our Data Protection Officer at support@medic.org.
Our responsible data promiseAs a non-profit organization, Medic Mobile (“Medic”)’s mission is to advance good health and human flourishing by building open source technology with and for hard-to-reach communities. We value humanity, creativity, initiative, solidarity, and openness.</description></item><item><title>Including Multimedia in Forms</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/multimedia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/multimedia/</guid><description>Multimedia FormatsThere are many supported formats for video, audio, and images. We recommend using h.264(mpeg) for video, jpeg for images, and mp3 for audio. When creating videos or images keep in mind the dimensions and storage capabilities on phones that may be used. Lower end phones have smaller storage and screen sizes. When rendering images, video, and audio the CHT uses the browser&amp;rsquo;s built in rendering tools. This means you can render any media format that is supported by the minimum version of Chrome.</description></item><item><title>Passing data from a task into the app form</title><link>https://docs.communityhealthtoolkit.org/building/tasks/managing-tasks/pass-data-to-form/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/managing-tasks/pass-data-to-form/</guid><description>This guide explains how to pass data from a task into the action application form.
Prerequisites Complex Tasks Tutorial Application Forms Tutorial ScenarioLet&amp;rsquo;s look deeper at the scenario from the Complex Tasks Tutorial where we have an ANC follow-up task which recurs eight times, and we want to ask the user different questions on the first and last follow-up.
Developing the taskFrom the Complex Tasks Tutorial, here is the task.</description></item><item><title>Pharmacovigilance Reference app</title><link>https://docs.communityhealthtoolkit.org/exploring/pharmacovigilance-reference-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/pharmacovigilance-reference-app/</guid><description>Problem Being AddressedSelf-medication, unregulated medical products, and counterfeit drugs have led to a significant increase in the prevalence of adverse drug reactions (ADRs), adverse effects following Immunization (AEFI), and the proliferation of poor-quality health products and technologies. ADRs are a common cause of hospital admissions and contribute to patient mortality, placing a substantial economic burden on resource-limited healthcare systems, especially in African countries.
Need for Pharmacovigilance: Pharmacovigilance focuses on the detection, assessment, understanding and prevention of adverse effects and other potential drug-related problems.</description></item><item><title>YendaNafe CHT app by PIH in Malawi</title><link>https://docs.communityhealthtoolkit.org/exploring/pih/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/pih/</guid><description>Since 2017, Partners in Health (PIH) Malawi and Medic have collaboratively co-designed and developed YendaNafe, a digital health app for community based service provision. In the spirit of openness, Medic and PIH have coordinated the release of the full application source code of Yendanafe app as first of kind ‘‘Integrated CHT Reference app’’. This Reference app provides an example that CHT Implementers can learn how they can design and configure integrated workflows.</description></item><item><title>Preparing to upgrade to CHT 4.0</title><link>https://docs.communityhealthtoolkit.org/building/guides/updates/preparing-for-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/updates/preparing-for-4/</guid><description>Note This guide applies to both self-hosted and Medic hosted deployments. IntroductionMedic uses Semantic Versioning (aka &amp;ldquo;SemVer&amp;rdquo;) which means that the CHT upgrade from the major 3.x version to the 4.x version denotes there are breaking changes. The key to a successful upgrade will be to understand and plan for these breaking changes. Aside from the Docker hosting infrastructure (out of scope for this prep document), the two breaking changes are around CHT Android and Enketo.</description></item><item><title>Replicating Production Data Locally</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/replicating-production-data-locally/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/replicating-production-data-locally/</guid><description>Sometimes there will be a production problem that you need to dig into locally to solve. This guide explains how to:
Copy the data from an instance to a local CouchDB database Run a local webapp instance with that data First, a note about data safetyProduction data is medical data. It&amp;rsquo;s HIV statuses and pregnancies. It&amp;rsquo;s important, and it&amp;rsquo;s not yours. If you&amp;rsquo;re downloading it, do so on an encrypted drive and delete it once you&amp;rsquo;re done with it.</description></item><item><title>Purging</title><link>https://docs.communityhealthtoolkit.org/building/guides/performance/purging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/performance/purging/</guid><description>Only available in 3.7.0 and above
Purging is a tool that allows you to increase performance and available disk space for offline users (eg CHWs) by removing unneeded documents from their device.
As users continually generate new reports their performance may naturally degrade as a result. You can use purging to remove older documents that are no longer relevant from their devices. Purging only removes documents from user&amp;rsquo;s devices: these reports are still available for online analytics and impact metrics.</description></item><item><title>Querying Apdex Telemetry Data</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/querying_apdex_telemetry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/querying_apdex_telemetry/</guid><description>Added in 4.7.0, CHT now records the Apdex (Application Performance Index) that is an open standard for measuring performance of software applications.
Since Apdex is part of the telemetry system, it is possible to view Apdex data directly from CouchDB. However, it is more useful when aggregated across many users, interactions, and/or days. With this in mind, it is typically easier to query the data using SQL from an analytics database.</description></item><item><title>Querying Task Documents</title><link>https://docs.communityhealthtoolkit.org/building/tasks/managing-tasks/query-task-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/managing-tasks/query-task-data/</guid><description>This guide explains the data which results from tasks and how to query it.
Write a PostgreSQL query to examine task data Build deeper understanding of task data Present some data considerations of which task authors should remain mindful Prerequisites Data Flows for Analytics Querying task dataThe task system running on each user&amp;rsquo;s device is powered by task documents and those task documents sync to the server and to PostgreSQL just like a contact or a report.</description></item><item><title>Querying Training Cards Telemetry Data</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/querying_training_card_telemetry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/querying_training_card_telemetry/</guid><description>Introduced in 4.2.0, CHT has supported deployment of in-app training cards to facilitate remote training.
Since interaction with training cards logs telemetry data, it is possible to view the data directly from CouchDB. However, it is more useful when you can run queries that provide useful metrics about the usage of training cards aggregated across many users, and interactions.
With this in mind, it is typically easier to query the data using SQL from an analytics database.</description></item><item><title>Tracking Wealth Quintiles</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/wealth-quintiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/wealth-quintiles/</guid><description>Introduced in v2.16.0
Household surveys with questions about the home, possessions, and access to safe drinking water have been used to create equity score and improve the targeting of health services. This guide will cover how quintile information from a household survey can be used in customizing care for individual household members. For example, the equity quintile can be used to increase the number of pregnancy follow-ups for women in specific households, or to display specific notes or questions within patient forms.</description></item><item><title>Connecting to RDBMS from MacOS</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/rdbms-from-mac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/rdbms-from-mac/</guid><description>Follow these steps on a Mac to generate your public/private keys and access the PostgreSQL server.
Access TerminalTerminal (Terminal.app) is the terminal emulator included in the macOS operating system. You can use this application to generate your SSH key.
Open a new Finder window Navigate to the Applications folder Navigate to the Utilities folder Open the Terminal app Generate KeyFrom Terminal, follow these instructions (see screenshot below):
Type: ssh-keygen -t rsa Hit return to use the default file / location Enter a passphrase Enter your passphrase again Type: cat ~/.</description></item><item><title>Connecting to RDBMS from Windows</title><link>https://docs.communityhealthtoolkit.org/building/guides/database/rdbms-from-windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/database/rdbms-from-windows/</guid><description>Connecting to RDBMS, the PostgreSQL server, is pretty stratightforward in nix systems. In Windows there are a couple of things you need to do to get it up and running.
SSH Key Generation and Importing Download Puttygen from here
Run Puttygen Go to Windows Start menu → All Programs → PuTTY→ PuTTYgen.
Create a new key pair for your computer.
Convert the key generated from ssh2 format to openssh. Puttygen supports this.</description></item><item><title>Update Collect Forms Remotely</title><link>https://docs.communityhealthtoolkit.org/building/guides/updates/collect-forms-update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/updates/collect-forms-update/</guid><description>To do over the air Medic Collect form updates via HTTP rather than sending APKs which have a long manual install process, follow the steps below:
Have your xls forms ready in the folder. They should use underscore as name separators. e.g form_name.xlsx They should have form_id and name properties in the settings Upload the forms to the instance using cht-conf Using the upload-collect-forms action as shown below. cht --instance=user:pass@instancename.app.medicmobile.org upload-collect-forms Go to the Collect App.</description></item><item><title>Remote Onboarding and Training</title><link>https://docs.communityhealthtoolkit.org/exploring/training/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/training/</guid><description>The CHT’s Remote Onboarding and Training functionality enables Supervisors and Administrators to train CHWs on care workflows and related app use without being physically present. It is designed for:
Safety: maintaining distance due to infectious disease Speed: faster deployment when timing is a critical Scalability: onboarding large numbers of users at the same time Measurability: evaluation to provide added support where needed Adaptability: integration with existing program and workflow structures Problem Being AddressedProviding consistent training for CHWs is critically important in the context of evolving health programs and use of digital support tools.</description></item><item><title>CouchDB replication</title><link>https://docs.communityhealthtoolkit.org/building/guides/performance/replication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/performance/replication/</guid><description>Replication is what we call it when users download a copy of the data on to their device.
Restricting replicationIf the user has an online role they can access all the data, otherwise they will get restricted access to the data.
Restriction by placeThe most common restriction is by place. This is where we check the user&amp;rsquo;s facility_id property, and allow access to all contacts that are descendants of that place, and all reports and messages that are about one of those descendants.</description></item><item><title>Customizing Titles in the Reports List</title><link>https://docs.communityhealthtoolkit.org/building/forms/configuring/report-titles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/configuring/report-titles/</guid><description>Added in 3.9.0
By default the CHT shows the name of the subject of the report in the reports list. This can be overridden by configuring the subject_key property with a translation key in the form document.
The translation uses a summary of the report as the evaluation context so you can include report fields in your value, for example: Case registration {{case_id}}. Useful properties available in the summary include: from (the phone number of the sender), phone (the phone number of the report contact), form (the form code), subject.</description></item><item><title>Scoped Interview Guide</title><link>https://docs.communityhealthtoolkit.org/design/user-experience-research/scoped/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/design/user-experience-research/scoped/</guid><description>Remember Be warm, but professional. Record audio when possible. Sample real experiences, don’t ask for opinions (ex. Tell me about the last time you did XYZ). No leading questions or examples of answers. Silence is OK – give participants time to think about the question. If the participant doesn’t understand the question, take a moment to rephrase it. Think about the insight you are trying to uncover. Avoid becoming the expert.</description></item><item><title>Securely onboarding users at scale</title><link>https://docs.communityhealthtoolkit.org/building/guides/security/securely-onboarding-users-at-scale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/security/securely-onboarding-users-at-scale/</guid><description>This document shows how to achieve a high level of credential management security for a CHT deployment. Implementers need to know when ease of use is more important than a more secure system. By reading this document you should be able to know when to make the &amp;ldquo;more secure&amp;rdquo; vs &amp;ldquo;easier to use&amp;rdquo; trade off.
No system is perfectly secure - be prepared to remediate a security breach!
When a CHT deployment will support hundreds of users or more, secure credential management becomes critical.</description></item><item><title>Securely Sharing Your Development Environment</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/secure-sharing-of-developer-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/secure-sharing-of-developer-instance/</guid><description>Warning Be extra careful with this process! The end result will be that your development instance will be accessible to the internet. If you have simple logins and passwords like &amp;ldquo;admin/test.223&amp;rdquo; because you thought it was just your local dev instance and it doesn&amp;rsquo;t matter, now it matters! Whenever you&amp;rsquo;re not using the SSH tunnel for testing, shut it down so there&amp;rsquo;s no more remote access.
Never expose a development instance to the internet where you&amp;rsquo;ve replicated production data locally.</description></item><item><title>Securing Android Devices</title><link>https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/</guid><description>To secure an android device you should enable at least a pin code lock on the device, enable FDE (full disc encryption) and setup remote wiping capabilities by enabling mobile device management.
PIN Setup and FDEInstructions are slightly different per device. Enabling FDE has the added benefit that you must also lock the device with a pin code or password.
Android 5.0 or laterOpen the Security menu under settings. On unmodified versions of Android, this can be found under Settings &amp;gt; Personal &amp;gt; Security.</description></item><item><title>Sharing 4.x Logs</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/sharing-4x-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/sharing-4x-logs/</guid><description>CHT 4.x moves from a monolithic container MedicOS to discrete containers, each service hosting one service of the CHT. When troubleshooting an issue with your CHT instance, it can be hard to list each container, see it&amp;rsquo;s status, gather up logs for each container and then share all this information with Medic or other support staff. To ease this pain, a script was written which automates the process.
PrerequisitesThis assumes you&amp;rsquo;re running CHT 4.</description></item><item><title>Stock Monitoring</title><link>https://docs.communityhealthtoolkit.org/exploring/stock-monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/stock-monitoring/</guid><description>Problem Being AddressedPaper based commodity management systems are prone to errors due to reliance on manually updated registers, this greatly affects data quality. Further, it is time consuming for CHWs to reference stock balances and at the same time update stocks on the commodity management sheet while providing treatment to household members. In terms of supervision, CHW’s supervisors do not know when CHWs have stock outs in time for replenishing and ordering purposes.</description></item><item><title>CHW Supervision and Performance Management Reference App</title><link>https://docs.communityhealthtoolkit.org/exploring/supervisor-reference-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/exploring/supervisor-reference-app/</guid><description>Medic has worked with D-tree International to build a CHT supervisor reference app. The app supports community health worker (CHW) supervisors to continually monitor and improve the program quality for Zanzibar National community health program Jamii ni Afya. The supervisor reference application is designed to enable supervisors to access CHW performance information and any other information required to supervise, mentor, and support CHWs to provide quality community health services. This reference app provides an example that CHT app developers can easily customize to meet the needs for their specific program areas to support CHW program management.</description></item><item><title>Understanding the parameters in the Task Schema</title><link>https://docs.communityhealthtoolkit.org/building/tasks/managing-tasks/task-schema-parameters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/tasks/managing-tasks/task-schema-parameters/</guid><description>This guide explains the parameters available in the Task Schema and important constraints governing the design of tasks.
Useful knowledge if you are stuck writing your first appliesIf predicate Understanding the data which is available in the task system and important constraints Understand the special significance of the appliesTo attribute Let&amp;rsquo;s synthesize some knowledge about CHT applications to help clarify what is happening within the task system:
All contacts in CHT applications are organised into hierarchies.</description></item><item><title>User telemetry</title><link>https://docs.communityhealthtoolkit.org/building/guides/performance/telemetry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/performance/telemetry/</guid><description>Introduced in v3.4.0
The app collects performance data on certain user actions which is then aggregated each day and replicated to the server. This can be used to evaluate the performance of the code and configuration and to evaluate where improvements can be made.
The aggregate doc for the previous day is created when the first telemetry item is recorded each day. This is stored in the medic-user-&amp;lt;username&amp;gt;-meta database on the device and replicated to the server when an internet connection is available.</description></item><item><title>Utils Functions</title><link>https://docs.communityhealthtoolkit.org/building/reference/_partial_utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/_partial_utils/</guid><description>Utility functions in the Core Framework can make common tasks much easier. These are available only for Tasks and Targets. To use the function call Utils.&amp;lt;function-name&amp;gt;(&amp;lt;params&amp;gt;), for example Utils.addDate(report.reported_date, 10).
Name Description isTimely(date, event) Returns true if the given date is after the start date and before the end date of the event. addDate(date, days) Returns a new Date set to midnight the given number of days after the given date.</description></item></channel></rss>