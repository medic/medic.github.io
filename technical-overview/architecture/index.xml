<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit – CHT Architecture</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/</link><description>Recent content in CHT Architecture on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/overview/</guid><description>
&lt;pre class="mermaid hx-mt-6"&gt;
%%{init:{&amp;#39;flowchart&amp;#39;:{&amp;#39;nodeSpacing&amp;#39;: 15, &amp;#39;rankSpacing&amp;#39;: 40, &amp;#39;diagramPadding&amp;#39;: 10, &amp;#39;subGraphTitleMargin&amp;#39;: { &amp;#39;bottom&amp;#39;: 10 }}}}%%
flowchart LR
classDef container stroke:#63a2c6, fill:#eef5f9, color:#000
subgraph APPS[&amp;lt;div style=&amp;#34;width: 300px; &amp;#34;&amp;gt;Smartphones, tablets and computers&amp;lt;/div&amp;gt;]
Browser[Browser]:::container
Android[Android App]:::container
Integrations[Integrations&amp;lt;br&amp;gt;with other systems]:::container
Watchdog[CHT Watchdog]:::container
Sync[CHT Sync]:::container
UMT[CHT User Management]:::container
end
subgraph CMDL[Command line interface]
Conf[CHT Conf]:::container
end
CHT@{ shape: procs, label: &amp;#34;CHT Core Server&amp;#34;}
subgraph SMS[Feature phones]
SMSG[SMS&amp;lt;br/&amp;gt;gateway]:::container
SMSA[SMS&amp;lt;br/&amp;gt;aggregator]:::container
end
Browser --&amp;gt; CHT
Android --&amp;gt; CHT
Integrations &amp;lt;--&amp;gt; CHT
Watchdog --&amp;gt; CHT
Sync --&amp;gt; CHT
Conf --&amp;gt; CHT
UMT --&amp;gt; CHT
SMSG --&amp;gt; CHT
SMSA --&amp;gt; CHT
style APPS fill: transparent
style CMDL fill: transparent
style SMS fill: transparent
&lt;/pre&gt;&lt;h2&gt;CHT Core Framework&lt;span class="hx-absolute -hx-mt-20" id="cht-core-framework"&gt;&lt;/span&gt;
&lt;a href="#cht-core-framework" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-core/" &gt;CHT Core Framework&lt;/a&gt; makes it faster to build full-featured, scalable digital health apps by providing a foundation developers can build on. These apps can support most languages, are &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/concepts/offline-first/" &gt;Offline-First&lt;/a&gt;, and work on basic phones (via SMS), smartphones, tablets, and computers.&lt;/p&gt;
&lt;p&gt;App developers are able to define health system roles, permissions and reporting hierarchies, and make use of five highly configurable areas of functionality: messaging, task and schedule management, decision support workflows, longitudinal person profiles, and analytics.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also&lt;/em&gt;: &lt;a href="https://docs.communityhealthtoolkit.org/building/"&gt;Build CHT Applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Core Framework can be used to support the unique needs of a given health system and the work of community health workers, frontline supervisors, facility-based nurses, health system managers, and even patients and caregivers. Visit the Commuity Health Toolkit website to request a &lt;a href="https://communityhealthtoolkit.org/contact" target="_blank" rel="noopener"&gt;self-guided demo&lt;/a&gt; of an app built with the Core Framework. You can also explore an &lt;a href="https://docs.communityhealthtoolkit.org/building/" &gt;overview of the Core Framework&lt;/a&gt; and its key features.&lt;/p&gt;
&lt;p&gt;Read more about the &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-core" &gt;architecture of the CHT Core&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;CHT Conf&lt;span class="hx-absolute -hx-mt-20" id="cht-conf"&gt;&lt;/span&gt;
&lt;a href="#cht-conf" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A command-line interface tool to manage and configure CHT application. The
&lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-conf" &gt;CHT Conf architecture page&lt;/a&gt; has more information.&lt;/p&gt;
&lt;h2&gt;CHT Sync&lt;span class="hx-absolute -hx-mt-20" id="cht-sync"&gt;&lt;/span&gt;
&lt;a href="#cht-sync" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A suite of tools for extracting and normalizing data from the Core Framework&amp;rsquo;s CouchDB, and rendering the data in analytics dashboards to visualize key data for a CHT deployment.&lt;/p&gt;
&lt;p&gt;Read more detail on the CHT Sync &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-sync/" &gt;overview page&lt;/a&gt;, the &lt;a href="https://github.com/medic/cht-sync" target="_blank" rel="noopener"&gt;GitHub repository&lt;/a&gt;, or the &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-sync" &gt;technical overview&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;CHT Watchdog&lt;span class="hx-absolute -hx-mt-20" id="cht-watchdog"&gt;&lt;/span&gt;
&lt;a href="#cht-watchdog" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Monitoring and alerting for the CHT Core Framework to ensure CHWs are able to deliver care without interruption caused by server downtime. Read more detail on the CHT Watchdog &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-watchdog" &gt;technical overview page&lt;/a&gt; or the &lt;a href="https://github.com/medic/cht-watchdog" target="_blank" rel="noopener"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;CHT Android&lt;span class="hx-absolute -hx-mt-20" id="cht-android"&gt;&lt;/span&gt;
&lt;a href="#cht-android" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;CHT Web Application works in the browser or wrapped in the &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-android/" &gt;CHT Android&lt;/a&gt; app which allows for project branding, sets the project URL, and hides browser elements like the URL bar. The app also provides some deeper integration with other android apps and native phone functions that are otherwise unavailable to webapps.&lt;/p&gt;
&lt;h2&gt;CHT Gateway&lt;span class="hx-absolute -hx-mt-20" id="cht-gateway"&gt;&lt;/span&gt;
&lt;a href="#cht-gateway" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/medic/cht-gateway" target="_blank" rel="noopener"&gt;CHT Gateway&lt;/a&gt; is an android app for sending and receiving SMS messages. Each SMS enabled project has one gateway running. It polls an api endpoint to write incoming SMS into the CouchDB and retrieve outgoing SMS to send.&lt;/p&gt;
&lt;h2&gt;CHT Interoperability&lt;span class="hx-absolute -hx-mt-20" id="cht-interoperability"&gt;&lt;/span&gt;
&lt;a href="#cht-interoperability" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-interoperability/" &gt;CHT Interoperability&lt;/a&gt; implements interoperability between the CHT and other health information systems based on OpenHIE architecture and HL7 FHIR messaging format.&lt;/p&gt;
&lt;h2&gt;CHT User Management Tool&lt;span class="hx-absolute -hx-mt-20" id="cht-user-management-tool"&gt;&lt;/span&gt;
&lt;a href="#cht-user-management-tool" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://docs.communityhealthtoolkit.org/building/contact-management/user-management-tool/" &gt;CHT User Management Tool&lt;/a&gt; is a web application that works with the CHT to decentralize the user management.&lt;/p&gt;</description></item><item><title>CHT Core</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-core/</guid><description>
&lt;p&gt;The CHT Core Framework is the primary component of the CHT. The server comes with authentication, role based authorization, data security, and a range of protected data access endpoints. Read more detail in &lt;a href="https://github.com/medic/cht-core" target="_blank" rel="noopener"&gt;cht-core GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="mermaid hx-mt-6"&gt;
graph TB
classDef container stroke:#63a2c6, fill:#eef5f9, color:#000
subgraph CHT_Core_Framework[&amp;#34;&amp;lt;div style=&amp;#34;width: 23em; height:2em; display:flex; justify-content: flex-start; align-items:flex-end;&amp;#34;&amp;gt;Server&amp;lt;/div&amp;gt;&amp;#34;]
direction TB
NGINX(NGINX):::container
API(API):::container
Sentinel(Sentinel):::container
HAProxy(Haproxy):::container
HealthCheck(HealthCheck):::container
CouchDB[(CouchDB)]:::container
Nouveau[(Nouveau)]:::container
end
Upgrade[&amp;#34;Upgrade Service&amp;#34;]:::container
subgraph Client[&amp;#34;&amp;lt;div style=&amp;#34;width: 28em; height:2em; display:flex; justify-content: flex-start; align-items:flex-end;&amp;#34;&amp;gt;Client (Android &amp;amp; Browser)&amp;lt;/div&amp;gt;&amp;#34;]
subgraph Webapp[&amp;#34;Webapp&amp;#34;]
PouchDB[(PouchDB)]:::container
end
Admin[&amp;#34;App Management&amp;#34;]:::container
end
Webapp --&amp;gt; NGINX
Admin --&amp;gt; NGINX
NGINX --&amp;gt; API
API &amp;lt;--&amp;gt; Upgrade
Sentinel --&amp;gt; HAProxy
API --&amp;gt; HAProxy
HAProxy --&amp;gt; CouchDB
HealthCheck --&amp;gt; CouchDB
HAProxy --&amp;gt; HealthCheck
CouchDB --&amp;gt; Nouveau
style CHT_Core_Framework fill: transparent
style Client fill: transparent
style Webapp fill: transparent
&lt;/pre&gt;&lt;h2&gt;Server&lt;span class="hx-absolute -hx-mt-20" id="server"&gt;&lt;/span&gt;
&lt;a href="#server" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h4&gt;API&lt;span class="hx-absolute -hx-mt-20" id="api"&gt;&lt;/span&gt;
&lt;a href="#api" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A NodeJS service that runs on the server and provides security and APIs for browsers and integrations. It also includes a custom implementation of filtered replication to allow it to support more concurrent users. See more at the &lt;a href="https://github.com/medic/cht-core/tree/master/api" target="_blank" rel="noopener"&gt;CHT Core API repo&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h4&gt;Sentinel&lt;span class="hx-absolute -hx-mt-20" id="sentinel"&gt;&lt;/span&gt;
&lt;a href="#sentinel" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Another NodeJS service running on the server, &lt;code&gt;sentinel&lt;/code&gt; performs actions called transitions every time a document in CouchDB is added or modified. Some examples are validations, generating scheduled messages, automatic responses, creating patients, and sending alerts. See more at the &lt;a href="https://github.com/medic/cht-core/tree/master/sentinel" target="_blank" rel="noopener"&gt;CHT Core Sentinel repo&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h4&gt;CouchDB&lt;span class="hx-absolute -hx-mt-20" id="couchdb"&gt;&lt;/span&gt;
&lt;a href="#couchdb" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A free and open source NoSQL database used as the primary store for all app data and configuration. This can be multiple instances clustered together for additional scalability. CouchDB is really good at replication which is the process of sending the data to another database and back again, which makes it ideal for replicating data to the phone for offline access. See more at the &lt;a href="https://couchdb.apache.org" target="_blank" rel="noopener"&gt;CouchDB&lt;/a&gt; site.&lt;/p&gt;
&lt;h4&gt;Nouveau&lt;span class="hx-absolute -hx-mt-20" id="nouveau"&gt;&lt;/span&gt;
&lt;a href="#nouveau" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Nouveau is a CouchDB service, added to the CHT in version &lt;code&gt;5.0.0&lt;/code&gt;, leverages the &lt;a href="https://en.wikipedia.org/wiki/Apache_Lucene" target="_blank" rel="noopener"&gt;Lucene search engine&lt;/a&gt; to modernize how freetext searches are done. Nouveau is faster at running these queries and more efficient at storing and creating the indexes. Offline users do not use this.&lt;/p&gt;
&lt;h4&gt;NGINX&lt;span class="hx-absolute -hx-mt-20" id="nginx"&gt;&lt;/span&gt;
&lt;a href="#nginx" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href="https://www.nginx.com/" target="_blank" rel="noopener"&gt;NGINX&lt;/a&gt; provides SSL termination and routes requests to API.&lt;/p&gt;
&lt;h4&gt;HAProxy&lt;span class="hx-absolute -hx-mt-20" id="haproxy"&gt;&lt;/span&gt;
&lt;a href="#haproxy" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href="https://www.haproxy.com/" target="_blank" rel="noopener"&gt;HAProxy&lt;/a&gt; provides logging and reverse proxying for any request that makes it to CouchDB.&lt;/p&gt;
&lt;h4&gt;HealthCheck&lt;span class="hx-absolute -hx-mt-20" id="healthcheck"&gt;&lt;/span&gt;
&lt;a href="#healthcheck" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A service that periodically verifies the health status of the CouchDb cluster. HAProxy uses this service for checking server status.&lt;/p&gt;
&lt;h4&gt;CHT Upgrade Service&lt;span class="hx-absolute -hx-mt-20" id="cht-upgrade-service"&gt;&lt;/span&gt;
&lt;a href="#cht-upgrade-service" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The CHT Upgrade Service is used within the CHT to update individual Docker containers when an upgrade is requested. Read more detail in the &lt;a href="https://github.com/medic/cht-upgrade-service/" target="_blank" rel="noopener"&gt;cht-upgrade-service GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Client&lt;span class="hx-absolute -hx-mt-20" id="client"&gt;&lt;/span&gt;
&lt;a href="#client" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The CHT Core Framework provides two web applications: the &lt;a href="#cht-web-application" &gt;CHT Web App&lt;/a&gt; for care teams and program staff, and &lt;a href="#app-management" &gt;App Management&lt;/a&gt; for program administrators.&lt;/p&gt;
&lt;h4&gt;CHT Web Application&lt;span class="hx-absolute -hx-mt-20" id="cht-web-application"&gt;&lt;/span&gt;
&lt;a href="#cht-web-application" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;The CHT Web Application is used by Community Health Workers and provides a large variety of &lt;a href="https://docs.communityhealthtoolkit.org/building/" &gt;features&lt;/a&gt;. View the source code in &lt;a href="https://github.com/medic/cht-core/tree/master/webapp" target="_blank" rel="noopener"&gt;our GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Technology&lt;span class="hx-absolute -hx-mt-20" id="technology"&gt;&lt;/span&gt;
&lt;a href="#technology" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;The CHT Web Application is &lt;a href="https://angular.io/guide/rx-library" target="_blank" rel="noopener"&gt;reactive&lt;/a&gt;, responsive, and a single page application built with &lt;a href="https://angular.io/" target="_blank" rel="noopener"&gt;Angular&lt;/a&gt; and &lt;a href="https://ngrx.io" target="_blank" rel="noopener"&gt;NgRx&lt;/a&gt; frameworks. Additionally, it uses the following technology:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technology&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://pouchdb.com" target="_blank" rel="noopener"&gt;PouchDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To implement an &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/concepts/offline-first/" &gt;Offline-First&lt;/a&gt; strategy, which means the data is stored on the client and all pages can load immediately regardless of whether the user has a fast connection, slow connection, or no connection at all. The data is stored in PouchDB, which replicates changes back and forth in the background with the server CouchDB.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://enketo.org" target="_blank" rel="noopener"&gt;Enketo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To render configured xforms and help with styling and dynamic elements such as show/hide and validation rules.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/valor-software/ngx-bootstrap" target="_blank" rel="noopener"&gt;ngx-bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To integrate Bootstrap components in the Angular application.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ngx-translate/core" target="_blank" rel="noopener"&gt;ngx-translate&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To automatically translate the labels from a Angular application. Read more about &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/translations/" target="_blank" rel="noopener"&gt;how to configure translations&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/karma-runner/karma" target="_blank" rel="noopener"&gt;Karma&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A test runner for &lt;a href="https://github.com/medic/cht-core/tree/master/webapp/tests" target="_blank" rel="noopener"&gt;unit tests&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://mochajs.org/" target="_blank" rel="noopener"&gt;MochaJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A test framework to run the &lt;a href="https://github.com/medic/cht-core/tree/master/webapp/tests" target="_blank" rel="noopener"&gt;unit tests&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://webdriver.io/" target="_blank" rel="noopener"&gt;WebDriverIO&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To run the &lt;a href="https://github.com/medic/cht-core/tree/master/tests/e2e" target="_blank" rel="noopener"&gt;e2e tests&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://lesscss.org/" target="_blank" rel="noopener"&gt;Less&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A CSS preprocessor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;Structure&lt;span class="hx-absolute -hx-mt-20" id="structure"&gt;&lt;/span&gt;
&lt;a href="#structure" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;The CHT Web Application has the following high level structure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;/js&lt;/strong&gt;: Contains the vanilla JavaScript scripts, for example: Enketo widgets, MomentJS locales, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/ts&lt;/strong&gt;: Contains the Angular application source code which uses TypeScript.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;/actions&lt;/strong&gt;, &lt;strong&gt;/effects&lt;/strong&gt;, &lt;strong&gt;/reducers&lt;/strong&gt; and &lt;strong&gt;/selectors&lt;/strong&gt;: Contain the implementation for the application’s reactive state which uses &lt;a href="https://ngrx.io" target="_blank" rel="noopener"&gt;NgRx&lt;/a&gt; framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/components&lt;/strong&gt;, &lt;strong&gt;/directives&lt;/strong&gt;, &lt;strong&gt;/pipes&lt;/strong&gt;, &lt;strong&gt;/providers&lt;/strong&gt; and &lt;strong&gt;/services&lt;/strong&gt;: Contain the reusable elements from &lt;a href="https://angular.io/" target="_blank" rel="noopener"&gt;Angular&lt;/a&gt; framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/modals&lt;/strong&gt;: Contains the all application’s modals components.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/modules&lt;/strong&gt;: Contains the application’s modules, each of them has components that are associated to the modules’ routing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/css&lt;/strong&gt;: Contains the style files. It uses &lt;a href="http://lesscss.org/" target="_blank" rel="noopener"&gt;Less&lt;/a&gt; as a CSS preprocessor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/fonts&lt;/strong&gt;: Contains the fonts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/img&lt;/strong&gt;: Contains the static images.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;App Management&lt;span class="hx-absolute -hx-mt-20" id="app-management"&gt;&lt;/span&gt;
&lt;a href="#app-management" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href="https://docs.communityhealthtoolkit.org/apps/features/admin/" target="_blank" rel="noopener"&gt;App Management&lt;/a&gt; is an interface for non-technical administrative users to manage users and settings.&lt;/p&gt;
&lt;p&gt;View the application source code in &lt;a href="https://github.com/medic/cht-core/tree/master/admin" target="_blank" rel="noopener"&gt;our GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Technology&lt;span class="hx-absolute -hx-mt-20" id="technology-1"&gt;&lt;/span&gt;
&lt;a href="#technology-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;App Management is a single page application built with &lt;a href="https://angularjs.org" target="_blank" rel="noopener"&gt;AngularJS&lt;/a&gt; framework and implements &lt;a href="https://github.com/reduxjs/redux" target="_blank" rel="noopener"&gt;Redux&lt;/a&gt; to manage a reactive state. Additionally, it uses the following technology:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technology&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/angular-translate/angular-translate" target="_blank" rel="noopener"&gt;Angular Translate&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To automatically translate the labels from a AngularJS application. Read more about &lt;a href="https://docs.communityhealthtoolkit.org/apps/reference/translations/" target="_blank" rel="noopener"&gt;how to manage translations&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/karma-runner/karma" target="_blank" rel="noopener"&gt;Karma&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A test runner for &lt;a href="https://github.com/medic/cht-core/tree/master/admin/tests" target="_blank" rel="noopener"&gt;unit tests&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://mochajs.org/" target="_blank" rel="noopener"&gt;MochaJS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A test framework to run the &lt;a href="https://github.com/medic/cht-core/tree/master/admin/tests" target="_blank" rel="noopener"&gt;unit tests&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://webdriver.io/" target="_blank" rel="noopener"&gt;WebDriverIO&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;To run the &lt;a href="https://github.com/medic/cht-core/tree/master/tests/e2e" target="_blank" rel="noopener"&gt;e2e tests&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://lesscss.org/" target="_blank" rel="noopener"&gt;Less&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A CSS preprocessor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5&gt;Structure&lt;span class="hx-absolute -hx-mt-20" id="structure-1"&gt;&lt;/span&gt;
&lt;a href="#structure-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;/css&lt;/strong&gt;: Contains style files. It uses &lt;a href="http://lesscss.org/" target="_blank" rel="noopener"&gt;Less&lt;/a&gt; as a CSS preprocessor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/js&lt;/strong&gt;: Contains the JavaScript code.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;/actions&lt;/strong&gt;, &lt;strong&gt;/reducers&lt;/strong&gt; and &lt;strong&gt;/selectors&lt;/strong&gt;: Contain the implementation of &lt;a href="https://github.com/reduxjs/redux" target="_blank" rel="noopener"&gt;Redux&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/controllers&lt;/strong&gt;, &lt;strong&gt;/directives&lt;/strong&gt;, &lt;strong&gt;/filters&lt;/strong&gt; and &lt;strong&gt;/services&lt;/strong&gt;: Contain the reusable elements from &lt;a href="https://angularjs.org" target="_blank" rel="noopener"&gt;AngularJS&lt;/a&gt; framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/modules&lt;/strong&gt;: Contains the vanilla JavaScript scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/template&lt;/strong&gt;: Contains the HTML templates that are used in the AngularJS components and directives.&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>CHT Conf</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-conf/</guid><description>
&lt;p&gt;&lt;a href="https://github.com/medic/cht-conf" target="_blank" rel="noopener"&gt;CHT Conf&lt;/a&gt; is a command-line interface tool to manage and configure apps built using the &lt;a href="https://github.com/medic/cht-core" target="_blank" rel="noopener"&gt;CHT Core Framework&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installation&lt;span class="hx-absolute -hx-mt-20" id="installation"&gt;&lt;/span&gt;
&lt;a href="#installation" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Read more about setting up &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/cht-conf/" &gt;CHT Conf&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Currently Supported&lt;span class="hx-absolute -hx-mt-20" id="currently-supported"&gt;&lt;/span&gt;
&lt;a href="#currently-supported" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The different items that are supported by CHT Conf include:&lt;/p&gt;
&lt;h3&gt;Settings&lt;span class="hx-absolute -hx-mt-20" id="settings"&gt;&lt;/span&gt;
&lt;a href="#settings" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Compile app settings from:
&lt;ul&gt;
&lt;li&gt;tasks&lt;/li&gt;
&lt;li&gt;rules&lt;/li&gt;
&lt;li&gt;schedules&lt;/li&gt;
&lt;li&gt;contact-summary&lt;/li&gt;
&lt;li&gt;purge&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;App settings can also be defined in a more modular way by having the following files in app_settings folder:
&lt;ul&gt;
&lt;li&gt;base_settings.json&lt;/li&gt;
&lt;li&gt;forms.json&lt;/li&gt;
&lt;li&gt;schedules.json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Backup app settings from server&lt;/li&gt;
&lt;li&gt;Upload app settings to server&lt;/li&gt;
&lt;li&gt;Upload resources to server&lt;/li&gt;
&lt;li&gt;Upload custom translations to the server&lt;/li&gt;
&lt;li&gt;Upload privacy policies to server&lt;/li&gt;
&lt;li&gt;Upload branding to server&lt;/li&gt;
&lt;li&gt;Upload partners to server&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Forms&lt;span class="hx-absolute -hx-mt-20" id="forms"&gt;&lt;/span&gt;
&lt;a href="#forms" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fetch from Google Drive and save locally as &lt;code&gt;.xlsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Backup from server&lt;/li&gt;
&lt;li&gt;Delete all forms from server&lt;/li&gt;
&lt;li&gt;Delete specific form from server&lt;/li&gt;
&lt;li&gt;Upload all app or contact forms to server&lt;/li&gt;
&lt;li&gt;Upload specified app or contact forms to server&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Managing data and images&lt;span class="hx-absolute -hx-mt-20" id="managing-data-and-images"&gt;&lt;/span&gt;
&lt;a href="#managing-data-and-images" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Convert CSV files with contacts and reports to JSON docs&lt;/li&gt;
&lt;li&gt;Move contacts by downloading and making the changes locally first&lt;/li&gt;
&lt;li&gt;Upload JSON files as docs on instance&lt;/li&gt;
&lt;li&gt;Compress PNGs and SVGs in the current directory and its subdirectories&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Editing contacts across the hierarchy.&lt;span class="hx-absolute -hx-mt-20" id="editing-contacts-across-the-hierarchy"&gt;&lt;/span&gt;
&lt;a href="#editing-contacts-across-the-hierarchy" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To edit existing couchdb documents, create a CSV file that contains the ids of the document you wish to update, and the columns of the document attribute(s) you wish to add/edit. By default, values are parsed as strings. To parse a CSV column as a JSON type.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;column(s)&lt;/td&gt;
&lt;td&gt;Comma delimited list of columns you wish to add/edit. If this is not specified all columns will be added.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;docDirectoryPath&lt;/td&gt;
&lt;td&gt;This action outputs files to local disk at this destination&lt;/td&gt;
&lt;td&gt;No. Default &lt;code&gt;json-docs&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file(s)&lt;/td&gt;
&lt;td&gt;Comma delimited list of files you wish to process using edit-contacts. By default, contact.csv is searched for in the current directory and processed.&lt;/td&gt;
&lt;td&gt;No.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;updateOfflineDocs&lt;/td&gt;
&lt;td&gt;If passed, this updates the docs already in the docDirectoryPath instead of downloading from the server.&lt;/td&gt;
&lt;td&gt;No.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Example&lt;span class="hx-absolute -hx-mt-20" id="example"&gt;&lt;/span&gt;
&lt;a href="#example" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a contact.csv file with your columns in the csv folder in your current path. The documentID column is a requirement. The documentID column contains the document IDs to be fetched from couchdb.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;documentID&lt;/th&gt;
&lt;th&gt;is_in_emnch:bool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;documentID1&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;documentID2&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;documentID3&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the following command to download and edit the documents:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cht --instance&lt;span class="o"&gt;=&lt;/span&gt;*instance* edit-contacts -- --column&lt;span class="o"&gt;=&lt;/span&gt;*is_in_emnch* --docDirectoryPath&lt;span class="o"&gt;=&lt;/span&gt;*my_folder*&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;or this one to update already downloaded docs:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cht --instance&lt;span class="o"&gt;=&lt;/span&gt;*instance* edit-contacts -- --column&lt;span class="o"&gt;=&lt;/span&gt;*is_in_emnch* --docDirectoryPath&lt;span class="o"&gt;=&lt;/span&gt;*my_folder* --updateOfflineDocs&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then upload the edited documents using the &lt;em&gt;&lt;strong&gt;upload-docs&lt;/strong&gt;&lt;/em&gt; command.&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cht --instance&lt;span class="o"&gt;=&lt;/span&gt;*instance* --upload-docs&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Project layout&lt;span class="hx-absolute -hx-mt-20" id="project-layout"&gt;&lt;/span&gt;
&lt;a href="#project-layout" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This tool expects a project to be structured as follows:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;example-project/
.eslintrc
app_settings.json
contact-summary.js
privacy-policies.json
privacy-policies/
language1.html
…
purge.js
resources.json
resources/
icon-one.png
…
targets.js
tasks.js
task-schedules.json
forms/
app/
my_project_form.xlsx
my_project_form.xml
my_project_form.properties.json
my_project_form-media/
[extra files]
…
contact/
person-create.xlsx
person-create.xml
person-create-media/
[extra files]
…
…
…
translations/
messages-xx.properties
…&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you are starting from scratch you can initialise the file layout using the initialise-project-layout action:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cht initialise-project-layout&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Derived configs&lt;span class="hx-absolute -hx-mt-20" id="derived-configs"&gt;&lt;/span&gt;
&lt;a href="#derived-configs" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Configuration can be inherited from another project, and then modified. This allows the &lt;code&gt;app_settings.json&lt;/code&gt; and contained files (&lt;code&gt;task-schedules.json&lt;/code&gt;, &lt;code&gt;targets.json&lt;/code&gt; etc.) to be imported, and then modified.&lt;/p&gt;
&lt;p&gt;To achieve this, create a file called &lt;code&gt;settings.inherit.json&lt;/code&gt; in your project&amp;rsquo;s root directory with the following format:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-json" data-lang="json"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;inherit&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;../path/to/other/project&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;replace&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;keys.to.replace&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;value-to-replace-it-with&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;merge&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;complex.objects&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;will_be_merged&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;delete&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;all.keys.listed.here&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;will.be.deleted&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;filter&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nt"&gt;&amp;#34;object.at.this.key&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;will&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;keep&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;only&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;these&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>CHT Watchdog</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-watchdog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-watchdog/</guid><description>
&lt;p&gt;CHT Watchdog is deployed on a separate server so that you can watch for, and alert on, any critical issues with the CHT Core. Read more about &lt;a href="https://docs.communityhealthtoolkit.org/hosting/monitoring/setup/" &gt;setting up CHT Watchdog&lt;/a&gt;.&lt;/p&gt;
&lt;!-- make updates to this diagram on the google slides: --&gt;
&lt;!-- https://docs.google.com/presentation/d/1j4jPsi-gHbiaLBfgYOyru1g_YV98PkBrx2zs7bwhoEQ/ --&gt;
&lt;figure&gt;&lt;a href="cht-watchdog.png"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-watchdog/cht-watchdog.png"
alt="Data Flows"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;Data Flows&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Grafana&lt;span class="hx-absolute -hx-mt-20" id="grafana"&gt;&lt;/span&gt;
&lt;a href="#grafana" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://grafana.com/" target="_blank" rel="noopener"&gt;Grafana&lt;/a&gt; is a dashboard visualization and alerting software. It is open source and an industry standard for this task. There is an &lt;a href="https://grafana.com/grafana/dashboards/" target="_blank" rel="noopener"&gt;free repository of pre-existing dashboards&lt;/a&gt; which greatly reduce the time to create new dashboards and alerts. It can send alerts via email, Slack, SMS and many more.&lt;/p&gt;
&lt;h3&gt;Prometheus&lt;span class="hx-absolute -hx-mt-20" id="prometheus"&gt;&lt;/span&gt;
&lt;a href="#prometheus" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://prometheus.io/docs/introduction/overview/" target="_blank" rel="noopener"&gt;Prometheus&lt;/a&gt; is an open source Time Series Database (TSDB) that was developed explicitly to do detailed longitudinal monitoring. It also aggregates metrics and can automatically cull older data to save on CPU and disk space.&lt;/p&gt;
&lt;h3&gt;JSON Exporter&lt;span class="hx-absolute -hx-mt-20" id="json-exporter"&gt;&lt;/span&gt;
&lt;a href="#json-exporter" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/prometheus-community/json_exporter" target="_blank" rel="noopener"&gt;JSON Exporter&lt;/a&gt; is a wrapper utility to convert a JSON API to be compatible with Prometheus scrape config. This is used to convert the CHT &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#get-apiv2monitoring" &gt;Monitoring API&amp;rsquo;s JSON&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Postgres Exporter&lt;span class="hx-absolute -hx-mt-20" id="postgres-exporter"&gt;&lt;/span&gt;
&lt;a href="#postgres-exporter" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/prometheus-community/postgres_exporter" target="_blank" rel="noopener"&gt;Postgres Exporter&lt;/a&gt; allows Prometheus to scrape a Postgres database and at a predefined interval. The queries can be configured to ingest any relevant data needed.&lt;/p&gt;
&lt;h3&gt;CHT Core Framework &amp;amp; RDBMS&lt;span class="hx-absolute -hx-mt-20" id="cht-core-framework--rdbms"&gt;&lt;/span&gt;
&lt;a href="#cht-core-framework--rdbms" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For more information on these technologies, see &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/" &gt;CHT Core overview&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>CHT Sync</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-sync/</guid><description>
&lt;p&gt;CHT Sync is an integrated solution designed to enable data synchronization between CouchDB and PostgreSQL for the purpose of analytics. It combines several technologies to achieve this synchronization and provides an efficient workflow for data processing and visualization. The synchronization occurs in near real-time, ensuring that the data displayed on dashboards is up-to-date.&lt;/p&gt;
&lt;p&gt;Read more about setting up &lt;a href="https://docs.communityhealthtoolkit.org/hosting/analytics/" &gt;CHT Sync&lt;/a&gt;.&lt;/p&gt;
&lt;!-- make updates to this diagram on the google slides: --&gt;
&lt;!-- https://docs.google.com/presentation/d/1j4jPsi-gHbiaLBfgYOyru1g_YV98PkBrx2zs7bwhoEQ/ --&gt;
&lt;figure class=" center col-8 col-lg-6"&gt;&lt;a href="cht-sync.png"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-sync/cht-sync.png"&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href="https://github.com/medic/cht-sync" target="_blank" rel="noopener"&gt;CHT Sync&lt;/a&gt; replicates data from CouchDB to PostgreSQL in a near real-time manner. It listens to changes in the CHT database, and updates the analytics database accordingly.
It is not designed to be accessed by users, and it does not have a user interface. It is designed to be run on the same server as the CHT, but it can be run on a separate server if necessary.&lt;/p&gt;
&lt;p&gt;As CHT Sync puts all new data into a PostgreSQL database into a single table that has a &lt;code&gt;jsonb&lt;/code&gt; column, this is not very useful for analytics. &lt;a href="https://github.com/medic/cht-pipeline" target="_blank" rel="noopener"&gt;cht-pipeline&lt;/a&gt; contains a set of SQL queries that transform the data in the &lt;code&gt;jsonb&lt;/code&gt; column into a more useful format. It uses &lt;a href="https://www.getdbt.com/" target="_blank" rel="noopener"&gt;dbt&lt;/a&gt; to define the models that are translated into PostgreSQL tables or views, which makes it easier to query the data in the analytics platform of choice.&lt;/p&gt;
&lt;h4&gt;couch2pg&lt;span class="hx-absolute -hx-mt-20" id="couch2pg"&gt;&lt;/span&gt;
&lt;a href="#couch2pg" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href="https://github.com/medic/cht-sync/tree/main/couch2pg" target="_blank" rel="noopener"&gt;couch2pg&lt;/a&gt; streams data from CouchDB and forwards it to PostgreSQL, ensuring near real-time updates.&lt;/p&gt;
&lt;h4&gt;PostgreSQL&lt;span class="hx-absolute -hx-mt-20" id="postgresql"&gt;&lt;/span&gt;
&lt;a href="#postgresql" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;A free and open source SQL database used for analytics queries. See more at the &lt;a href="https://www.postgresql.org" target="_blank" rel="noopener"&gt;PostgreSQL&lt;/a&gt; site.&lt;/p&gt;
&lt;h4&gt;dbt&lt;span class="hx-absolute -hx-mt-20" id="dbt"&gt;&lt;/span&gt;
&lt;a href="#dbt" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;Once the data is synchronized and stored in PostgreSQL, it undergoes transformation using predefined &lt;a href="https://www.getdbt.com/" target="_blank" rel="noopener"&gt;dbt&lt;/a&gt; models from the &lt;a href="https://github.com/medic/cht-pipeline" target="_blank" rel="noopener"&gt;cht-pipeline&lt;/a&gt;. dbt is used to ingest raw JSON data from the PosgtreSQL database (&lt;code&gt;jsonb&lt;/code&gt; column) and normalize it into a relational schema to make it easier to query. A daemon runs the dbt models, and it updates the database whenever the data in the &lt;code&gt;jsonb&lt;/code&gt; column changes.&lt;/p&gt;
&lt;h4&gt;Data Visualization&lt;span class="hx-absolute -hx-mt-20" id="data-visualization"&gt;&lt;/span&gt;
&lt;a href="#data-visualization" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;We recommend &lt;a href="https://superset.apache.org/" target="_blank" rel="noopener"&gt;Apache Superset&lt;/a&gt; as the Data Visualization Tool. Superset is a free, open-source platform for data exploration and data visualization.&lt;/p&gt;
&lt;h3&gt;CHT Core Framework &amp;amp; CouchDB&lt;span class="hx-absolute -hx-mt-20" id="cht-core-framework--couchdb"&gt;&lt;/span&gt;
&lt;a href="#cht-core-framework--couchdb" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For more information on these technologies, see &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/" &gt;CHT Core overview&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>CHT Android</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-android/</guid><description>
&lt;p&gt;The &lt;a href="https://github.com/medic/cht-android" target="_blank" rel="noopener"&gt;cht-android&lt;/a&gt; application is a thin Android wrapper to load the &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-core/" &gt;CHT Core Framework web application&lt;/a&gt; in a Webview native container.&lt;/p&gt;
&lt;p&gt;It consists of “flavored” configurations, where each “flavor” or “brand” is an app, which allows the application to be hardcoded to a specific CHT deployment and have a partner-specific logo and display name. The app also provides some deeper integration with other Android apps and native phone functions that are otherwise unavailable to webapps.&lt;/p&gt;</description></item><item><title>CHT Interoperability</title><link>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-interoperability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/technical-overview/architecture/cht-interoperability/</guid><description>
&lt;p&gt;&lt;a href="https://docs.communityhealthtoolkit.org/building/interoperability/" &gt;CHT Interoperability&lt;/a&gt; refers to the ability of different health information systems and applications to communicate with each other and exchange data seamlessly. With interoperability, patient information can be seen, exchanged, and used across different platforms. The information/data exchanged has to be understood across the different software for these systems to become interoperable. This is different from &lt;em&gt;integration&lt;/em&gt; which requires custom development to connect two specific systems.&lt;/p&gt;</description></item></channel></rss>