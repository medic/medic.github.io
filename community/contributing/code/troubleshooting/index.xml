<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ Troubleshooting</title><link>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/</link><description>Recent content in Troubleshooting on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/index.xml" rel="self" type="application/rss+xml"/><item><title>Revalidate invalid reports</title><link>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/invalid-reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/invalid-reports/</guid><description>
&lt;p&gt;You may encounter a dreaded case when reports coming in to a Medic Webapp instance have a red indicator instead of the green indicator.&lt;/p&gt;
&lt;figure&gt;&lt;a href="invalid_report.png"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/invalid-reports/invalid_report.png"
alt="Invalid reports"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;Invalid reports&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This may be caused by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Missing forms in the &lt;code&gt;app_settings&lt;/code&gt; config.&lt;/li&gt;
&lt;li&gt;Missing or incorrect fields in the input form. e.g Missing patient ID, or Patient ID with letters&lt;/li&gt;
&lt;li&gt;Extra fields in the input form. This happens when you don&amp;rsquo;t configure for some fields in the app_settings.json of the webapp&lt;/li&gt;
&lt;li&gt;Configuring some forms in the wrong section of the app_settings i.e &lt;code&gt;registrations&lt;/code&gt; and &lt;code&gt;patient_reports&lt;/code&gt;. Forms that don&amp;rsquo;t have a patient_id field because it is generated afterwards, e.g ANCR, IMMR, go to the &lt;code&gt;registrations&lt;/code&gt; section, while form that have a patient_id field e.g ANCP, ANCV, IMMV; go to the &lt;code&gt;patient_reports&lt;/code&gt; section&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How to solve&lt;span class="hx:absolute hx:-mt-20" id="how-to-solve"&gt;&lt;/span&gt;
&lt;a href="#how-to-solve" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To revalidate an invalid report, we need to clear the errors field on the doc (set it to []). Updating this field from Futon will not work and will result in an endless update process. The recommended way to do it is to download the doc, update it and then upload it. This will also ensure propagation and replication in couchdb.&lt;/p&gt;
&lt;p&gt;To download a doc, use:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;curl &amp;#39;https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;instance&amp;gt;.app.medicmobile.org/medic/&amp;lt;doc id&amp;gt;&amp;#39; &amp;gt; filename.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;filename.json&lt;/code&gt; is the local file in your computer you have stored the doc json&lt;/p&gt;
&lt;p&gt;Update &lt;code&gt;filename.json&lt;/code&gt;: Set &amp;ldquo;errors&amp;rdquo; to [] and remove &amp;ldquo;accept_patient_reports&amp;rdquo; transition so that sentinel can revalidate the report.&lt;/p&gt;
&lt;p&gt;Upload &lt;code&gt;filename.json&lt;/code&gt; with:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;curl -X PUT hhttps://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;instance&amp;gt;.app.medicmobile.org/medic/&amp;lt;doc id&amp;gt; -d @filename.json --header &amp;#34;Content-Type: application/json&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Obtaining Browser and Phone Logs</title><link>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/obtaining-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/obtaining-logs/</guid><description>
&lt;p&gt;There are many places where useful logs reside. This details all those places, and the easiest way to get a hold of them.&lt;/p&gt;
&lt;h2&gt;On a laptop or desktop&lt;span class="hx:absolute hx:-mt-20" id="on-a-laptop-or-desktop"&gt;&lt;/span&gt;
&lt;a href="#on-a-laptop-or-desktop" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To check if there are relevant logs open up the developer console in your browser. The shortcut is probably COMMAND+OPTION+I on MacOS, or CTRL+SHIFT+I on Linux and Windows. Click the console tab and copy out any errors or logging that you think is relevant.&lt;/p&gt;
&lt;h2&gt;On a phone&lt;span class="hx:absolute hx:-mt-20" id="on-a-phone"&gt;&lt;/span&gt;
&lt;a href="#on-a-phone" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are two types of logs updated by Android devices depending on what information is needed. If you trying to get either of the logs from a device for the first time you need to set it up for USB debugging.&lt;/p&gt;
&lt;div class="hextra-steps hx:ml-4 hx:mb-12 hx:ltr:border-l hx:rtl:border-r hx:border-gray-200 hx:ltr:pl-6 hx:rtl:pr-6 hx:dark:border-neutral-800 [counter-reset:step]"&gt;
&lt;h3&gt;Step 1&lt;span class="hx:absolute hx:-mt-20" id="step-1"&gt;&lt;/span&gt;
&lt;a href="#step-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Enable USB debugging on the phone. This varies from phone to phone, but here is the &lt;a href="https://developer.android.com/studio/debug/dev-options#enable"target="_blank" rel="noopener"&gt;official Android documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 2&lt;span class="hx:absolute hx:-mt-20" id="step-2"&gt;&lt;/span&gt;
&lt;a href="#step-2" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Connect your phone by USB to the computer.&lt;/p&gt;
&lt;h3&gt;Step 3&lt;span class="hx:absolute hx:-mt-20" id="step-3"&gt;&lt;/span&gt;
&lt;a href="#step-3" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;On your phone, you will see a popup &lt;em&gt;&amp;ldquo;Allow USB debugging. The computer&amp;rsquo;s RSA fingerprint&amp;hellip;&amp;rdquo;&lt;/em&gt;, click &lt;em&gt;&amp;ldquo;OK&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;figure&gt;&lt;img src="https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/obtaining-logs/allow_usb_debugging.png"
alt="Allow USB debugging"&gt;&lt;figcaption&gt;
&lt;p&gt;Allow USB debugging&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Browser logs&lt;span class="hx:absolute hx:-mt-20" id="browser-logs"&gt;&lt;/span&gt;
&lt;a href="#browser-logs" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Now that you&amp;rsquo;ve enabled USB debugging on the phone you can access the dev console on the phone via USB from your desktop browser. This allows the same level of debugging and inspection you have on a desktop browser, but from your phone&amp;rsquo;s browser in the CHT app. Follow the &lt;a href="https://developer.chrome.com/docs/devtools/remote-debugging/webviews/#open_a_webview_in_devtools"target="_blank" rel="noopener"&gt;official Android documentation&lt;/a&gt; to access the console.&lt;/p&gt;
&lt;h3&gt;Android logs&lt;span class="hx:absolute hx:-mt-20" id="android-logs"&gt;&lt;/span&gt;
&lt;a href="#android-logs" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The Android log is written to from the cht-android wrapper which captures errors like application crashes or failing integrations between Android apps.&lt;/p&gt;
&lt;div class="hextra-steps hx:ml-4 hx:mb-12 hx:ltr:border-l hx:rtl:border-r hx:border-gray-200 hx:ltr:pl-6 hx:rtl:pr-6 hx:dark:border-neutral-800 [counter-reset:step]"&gt;
&lt;h3&gt;Step 1&lt;span class="hx:absolute hx:-mt-20" id="step-1-1"&gt;&lt;/span&gt;
&lt;a href="#step-1-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To install the &lt;code&gt;adb&lt;/code&gt; command, follow the instructions under the &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/android/development-setup/#debug-tool-adb"&gt;Development Environment &amp;gt; Debug tool adb&lt;/a&gt; section.&lt;/p&gt;
&lt;h3&gt;Step 2&lt;span class="hx:absolute hx:-mt-20" id="step-2-1"&gt;&lt;/span&gt;
&lt;a href="#step-2-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Within a command line session, write the following command: &lt;code&gt;adb start-server&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Step 3&lt;span class="hx:absolute hx:-mt-20" id="step-3-1"&gt;&lt;/span&gt;
&lt;a href="#step-3-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To check if your phone is properly connected, write the command &lt;code&gt;adb devices&lt;/code&gt;. This will list the devices connected.&lt;/p&gt;
&lt;figure&gt;&lt;img src="https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/obtaining-logs/adb_devices.png"
alt="ADB Devices"&gt;&lt;figcaption&gt;
&lt;p&gt;ADB Devices&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Step 4&lt;span class="hx:absolute hx:-mt-20" id="step-4"&gt;&lt;/span&gt;
&lt;a href="#step-4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Type the command &lt;code&gt;adb logcat &amp;gt; phone.log&lt;/code&gt; to get the android logs in the file &lt;code&gt;phone.log&lt;/code&gt;. The log will be written to the &lt;code&gt;phone.log&lt;/code&gt; file as long as this command is running. You can stop the recording at any time pressing &lt;em&gt;Ctrl+C&lt;/em&gt;. Now if you reproduce the error on the phone you can look for any useful information being written to the &lt;code&gt;phone.log&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This will get all the logs from the device, not just logs for the app you want to debug. You can pass arguments to &lt;code&gt;adb&lt;/code&gt; to only get the logs you want.&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adb logcat MedicMobile:V AndroidRuntime:E chromium:V &lt;span class="s1"&gt;&amp;#39;*:S&amp;#39;&lt;/span&gt; &amp;gt; phone.log&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Alternatively you can use &lt;code&gt;grep&lt;/code&gt; to filter the logs down to only those from the relevant app.&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adb logcat &lt;span class="p"&gt;|&lt;/span&gt; grep MedicMobile &amp;gt; phone.log&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;On the server&lt;span class="hx:absolute hx:-mt-20" id="on-the-server"&gt;&lt;/span&gt;
&lt;a href="#on-the-server" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Some unexpected errors are caught and stored in &lt;code&gt;feedback&lt;/code&gt; docs and stored on the phone and later synced to CouchDB on the server. To access these, look for docs in the &lt;code&gt;medic-user-{username}-meta&lt;/code&gt; or &lt;code&gt;medic-users-meta&lt;/code&gt; databases. This is particularly useful to debug issues where you do not have physical access to the device. More information is available under &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/data/"&gt;Managing Databases&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Replicating Production Data Locally</title><link>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/replicating-production-data-locally/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/replicating-production-data-locally/</guid><description>
&lt;p&gt;Sometimes there will be a production problem that you need to dig into locally to solve. This guide explains how to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy the data from an instance to a local CouchDB database&lt;/li&gt;
&lt;li&gt;Run a local webapp instance with that data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;First, a note about data safety&lt;span class="hx:absolute hx:-mt-20" id="first-a-note-about-data-safety"&gt;&lt;/span&gt;
&lt;a href="#first-a-note-about-data-safety" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Production data is medical data. It&amp;rsquo;s HIV statuses and pregnancies. It&amp;rsquo;s important, and it&amp;rsquo;s not yours. If you&amp;rsquo;re downloading it, do so on an encrypted drive and delete it once you&amp;rsquo;re done with it.&lt;/p&gt;
&lt;h2&gt;Step 1: Get the data&lt;span class="hx:absolute hx:-mt-20" id="step-1-get-the-data"&gt;&lt;/span&gt;
&lt;a href="#step-1-get-the-data" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First thing is to get the data onto your local CouchDB. It&amp;rsquo;s advisable to create a new DB for this, so that you have a fresh untouched collection of data that isn&amp;rsquo;t mixed in with anything you have locally.&lt;/p&gt;
&lt;h3&gt;Small production instances&lt;span class="hx:absolute hx:-mt-20" id="small-production-instances"&gt;&lt;/span&gt;
&lt;a href="#small-production-instances" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If there isn&amp;rsquo;t much data you can replicate the entire DB locally. You can initiate this either from your local Fauxton, or from the command line. You must use an administrator username and password for this at both the source and destination.&lt;/p&gt;
&lt;p&gt;For Fauxton, navigate to http://localhost:5984/_utils/#/replication/_create
For command line, see: &lt;a href="https://docs.couchdb.org/en/stable/api/server/common.html#replicate"target="_blank" rel="noopener"&gt;https://docs.couchdb.org/en/stable/api/server/common.html#replicate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that replication may stall on one document, and you may end up with your local DB having one less document than the source. This is due to how our URLs are setup: the replicator gets confused and considers &lt;code&gt;login&lt;/code&gt; (ie &lt;code&gt;https://url/login&lt;/code&gt;) to be a document. You can safely ignore this difference - you&amp;rsquo;re good to go once your destination database has one less document than the source.&lt;/p&gt;
&lt;h3&gt;Large production instances&lt;span class="hx:absolute hx:-mt-20" id="large-production-instances"&gt;&lt;/span&gt;
&lt;a href="#large-production-instances" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If the instance is too large to replicate locally (or you are too impatient), you can replicate the data accessible to a single user. This process downloads a user&amp;rsquo;s data into a browser and then copies that data into a CouchDB database.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Firefox and navigate to &lt;code&gt;about:config&lt;/code&gt;. Set &lt;code&gt;security.csp.enable&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable Content Security Policies.&lt;/li&gt;
&lt;li&gt;Navigate to the instance and login as the user with the data you want. &lt;em&gt;(If you want more data, like an entire district, you could consider logging in as a new user with a contact document at your desired place in the contact hierarchy. But that is an exercise for the reader)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Wait for the data to replicate. You know this is done once the app lets you interact with it. &lt;em&gt;(If you want to get the user&amp;rsquo;s data before purging, consider disabling purging. Another exercise for the reader)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Make sure your local CouchDB has CORS enabled: &lt;a href="https://docs.couchdb.org/en/stable/config/http.html#cors"target="_blank" rel="noopener"&gt;https://docs.couchdb.org/en/stable/config/http.html#cors&lt;/a&gt;. Consider using &lt;a href="https://github.com/pouchdb/add-cors-to-couchdb#user-content-what-it-does"target="_blank" rel="noopener"&gt;add-cors-to-couchdb&lt;/a&gt; or its recommended settings.&lt;/li&gt;
&lt;li&gt;Allow your CouchDB to be accessible via &lt;code&gt;https&lt;/code&gt;. One way is to run &lt;code&gt;ngrok http PORT&lt;/code&gt;. The &lt;code&gt;PORT&lt;/code&gt; &lt;em&gt;(&lt;code&gt;5984&lt;/code&gt; by default)&lt;/em&gt; can be found in database configuration using fauxton under the &lt;code&gt;chttpd&lt;/code&gt; section. This will make your CouchDB accessible via a url like &lt;code&gt;https://abcd1234.ngrok.io&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open the console in Firefox and run &lt;code&gt;await PouchDB.replicate('medic-user-XXX', 'https://your:admin@abcd1234.ngrok.io/YYY');&lt;/code&gt;. Here &lt;code&gt;XXX&lt;/code&gt; is the name you logged in as, and &lt;code&gt;YYY&lt;/code&gt; is the name of a database in which to store the data.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you get 401s make sure that: your CouchDB credentials are right; and you don&amp;rsquo;t have a local session in the same browser already (session cookies can take precedence over basic auth); and if you&amp;rsquo;re running CouchDB in Docker you have exposed both &lt;code&gt;5984&lt;/code&gt; and &lt;code&gt;5986&lt;/code&gt; to localhost.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Wait for the replication to complete. In Fauxton you should see the database YYY with the same number of documents reported during the user&amp;rsquo;s initial replication.&lt;/li&gt;
&lt;li&gt;Log out of the instance and clear your data from the developer console (Application -&amp;gt; Clear storage).&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;about:config&lt;/code&gt;. Set &lt;code&gt;security.csp.enable&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to re-enable Content Security Policies.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Regardless, do this too&lt;span class="hx:absolute hx:-mt-20" id="regardless-do-this-too"&gt;&lt;/span&gt;
&lt;a href="#regardless-do-this-too" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To log in as a specific prod user you need to also copy them from the prod &lt;code&gt;_users&lt;/code&gt; database into your own local &lt;code&gt;_users&lt;/code&gt; database. The simplest way to do this is to just open the DB in Fauxton, find the document and copy it on your clipboard, then create a new document in your local &lt;code&gt;_users&lt;/code&gt; DB and paste it in, deleting the &lt;code&gt;_rev&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;You could also use this opportunity to change the password to something easier to work with locally. To do this, add a &lt;code&gt;password&lt;/code&gt; property into the document with the password you want in plain text. CouchDB will convert this to a properly hashed password on save.&lt;/p&gt;
&lt;h2&gt;Step 2, run it locally&lt;span class="hx:absolute hx:-mt-20" id="step-2-run-it-locally"&gt;&lt;/span&gt;
&lt;a href="#step-2-run-it-locally" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First you need to decide if you need a local development environment (unless you already have one, in which case you might as well use it), or are happy to just use &lt;a href="https://github.com/medic/horticulturalist"target="_blank" rel="noopener"&gt;Horticulturalist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A local development environment will be useful to you if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You want to change code locally&lt;/li&gt;
&lt;li&gt;You want to see useful, non-minified stack traces, or otherwise browse / step through non-minified code in the browser&lt;/li&gt;
&lt;li&gt;You want to deploy a version of the code older than &lt;code&gt;2.14.0&lt;/code&gt;, as they are not available in Horticulturalist&amp;rsquo;s repos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Option 1, local development environment&lt;span class="hx:absolute hx:-mt-20" id="option-1-local-development-environment"&gt;&lt;/span&gt;
&lt;a href="#option-1-local-development-environment" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If you don&amp;rsquo;t already have a local dev env, follow the instructions on the &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/core/dev-environment/"&gt;development setup instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then you need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Push the code you want to run via &lt;code&gt;COUCH_URL=http://your:admin@localhost:5984/YYY npm run build-dev&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Start API and Sentinel by running &lt;code&gt;COUCH_URL=http://your:admin@localhost:5984/YYY node api/server&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you&amp;rsquo;ve done all of that you should be able to log in with your user.&lt;/p&gt;
&lt;h3&gt;Option 2, horticulturalist&lt;span class="hx:absolute hx:-mt-20" id="option-2-horticulturalist"&gt;&lt;/span&gt;
&lt;a href="#option-2-horticulturalist" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Follow the instructions on the &lt;a href="https://github.com/medic/horticulturalist"target="_blank" rel="noopener"&gt;horticulturalist repo&lt;/a&gt; to get it installed. Then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure that the &lt;code&gt;medic&lt;/code&gt; DB doesn&amp;rsquo;t exist, so that you have a fresh database.&lt;/li&gt;
&lt;li&gt;Replicate your local PROD DB into a new &lt;code&gt;medic&lt;/code&gt; database using the Fauxton console.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;horti --local --bootstrap=XXX&lt;/code&gt;, where &lt;code&gt;XXX&lt;/code&gt; is the version you want to use (maybe the same one as production?)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now be able to log in as that user locally!&lt;/p&gt;</description></item><item><title>Sharing Logs</title><link>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/sharing-4x-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/community/contributing/code/troubleshooting/sharing-4x-logs/</guid><description>
&lt;p&gt;CHT 4.x moves from a monolithic container MedicOS to discrete containers, each service hosting one service of the CHT. When troubleshooting an issue with your CHT instance, it can be hard to list each container, see it&amp;rsquo;s status, gather up logs for each container and then share all this information with Medic or other support staff. To ease this pain, a script was written which automates the process.&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;span class="hx:absolute hx:-mt-20" id="prerequisites"&gt;&lt;/span&gt;
&lt;a href="#prerequisites" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This assumes you have access to the command line on the server where the CHT is running locally or via SSH.&lt;/p&gt;
&lt;p&gt;This guide also assumes you have the &lt;a href="https://github.com/medic/cht-core/"target="_blank" rel="noopener"&gt;CHT Core repo checked out&lt;/a&gt; so that you have a copy of the &lt;code&gt;compress_and_archive_docker_logs.sh&lt;/code&gt; script. If you do not have it checked out, you can manually create a local copy with this &lt;code&gt;curl&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="l"&gt;curl -o compress_and_archive_docker_logs.sh https://raw.githubusercontent.com/medic/cht-core/master/scripts/compress_and_archive_docker_logs.sh&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="l"&gt;chmod +x compress_and_archive_docker_logs.sh&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Calling the script&lt;span class="hx:absolute hx:-mt-20" id="calling-the-script"&gt;&lt;/span&gt;
&lt;a href="#calling-the-script" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:flex-col hx:rounded-lg hx:border hx:py-4 hx:px-4 hx:border-gray-200 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-purple-200 hx:bg-purple-100 hx:text-purple-900 hx:dark:border-purple-200/30 hx:dark:bg-purple-900/30 hx:dark:text-purple-200"&gt;
&lt;p class="hx:flex hx:items-center hx:font-medium"&gt;&lt;svg height=16px class="hx:inline-block hx:align-middle hx:mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;Important&lt;/p&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;&lt;p&gt;Be aware of two important features of this script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It will get logs for ALL docker containers running, even if they&amp;rsquo;re not part of the CHT&lt;/li&gt;
&lt;li&gt;Logs on production CHT instances will contain PII/PHI and should be handled with care&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The script defaults to getting the past 24 hours of logs and can be called from anywhere on your system as long as you specify the full path to the script. Here it&amp;rsquo;s being called from with in the &lt;code&gt;cht-core/scripts&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;./compress_and_archive_docker_logs.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;d liked to get more logs than the most recent 24 hours, pass in an argument of hours. Here we&amp;rsquo;re asking for 2 days worth of logs by using &lt;code&gt;48&lt;/code&gt; as the argument:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;./compress_and_archive_docker_logs.sh 48&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Depending on this volume of your logs, this may take a while. This is what the output of the script is when it&amp;rsquo;s completed:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;Wait while the script gathers stats and logs about the CHT containers.
Be patient, this might take a moment...
Done!
/home/cht-user/.medic/support_logs/cht-docker-logs-2023-02-14T15.04.45-08.00.tar.gz
NOTE: Please remove the file when done as it may contain PII/PHI.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The files are saved in your home directory (&lt;code&gt;/home/cht-user/&lt;/code&gt; in this case) and are timestamped with the creation date and timezone offset (&lt;code&gt;2023-02-14T15.04.45-08.00&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can now share this &lt;code&gt;tar.gz&lt;/code&gt; file with support staff as needed. Again, be careful with it as &lt;strong&gt;it will contain PII/PHI if you ran this against a production instance&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Archive contents&lt;span class="hx:absolute hx:-mt-20" id="archive-contents"&gt;&lt;/span&gt;
&lt;a href="#archive-contents" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First, let&amp;rsquo;s look at the running containers when we called the script by calling &lt;code&gt;docker ps --format '{{.Names}}'&lt;/code&gt;:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_nginx_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_sentinel_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_api_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_haproxy_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_couchdb_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_healthcheck_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project-dir-cht-upgrade-service-1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now if we uncompress the tarball created above and list the contents, it should look very similar when we call &lt;code&gt;cd ~/.medic/support_logs&amp;amp;&amp;amp;tar xzvf cht-docker-logs-2023-02-14T15.04.45-08.00.tar.gz&lt;/code&gt;:&lt;/p&gt;
&lt;div class="hextra-code-block hx:relative hx:mt-6 hx:first:mt-0 hx:group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;docker_ps.log
docker_stats.log
new_project-dir-cht-upgrade-service-1.log
new_project_api_1.log
new_project_couchdb_1.log
new_project_haproxy_1.log
new_project_healthcheck_1.log
new_project_nginx_1.log
new_project_sentinel_1.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx:opacity-0 hx:transition hx:group-hover/code:opacity-100 hx:flex hx:gap-1 hx:absolute hx:m-[11px] hx:right-0 hx:top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx:group/copybtn hx:cursor-pointer hx:transition-all hx:active:opacity-50 hx:bg-primary-700/5 hx:border hx:border-black/5 hx:text-gray-600 hx:hover:text-gray-900 hx:rounded-md hx:p-1.5 hx:dark:bg-primary-300/10 hx:dark:border-white/10 hx:dark:text-gray-400 hx:dark:hover:text-gray-50"
title="Copy code"
&gt;
&lt;div class="hextra-copy-icon hx:group-[.copied]/copybtn:hidden hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;div class="hextra-success-icon hx:hidden hx:group-[.copied]/copybtn:block hx:pointer-events-none hx:h-4 hx:w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There&amp;rsquo;s one file per container, each with the logs from that container. As well there&amp;rsquo;s two other files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker_ps.log&lt;/code&gt; - the output of &lt;code&gt;docker ps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker_stats.log&lt;/code&gt; - the output of &lt;code&gt;docker stats&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>