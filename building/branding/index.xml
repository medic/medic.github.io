<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Branding on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/building/branding/</link><description>Recent content in Branding on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/branding/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuring CHT Application Graphics</title><link>https://docs.communityhealthtoolkit.org/building/branding/application-graphics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/branding/application-graphics/</guid><description>This tutorial will take you through customising some graphical elements of CHT core.
You will cover site branding, partner logos, header tab icons, and app icons (used in tasks, targets, and contacts).
Required ResourcesYou should have a functioning CHT instance with cht-conf installed locally and completed a project folder setup.
Implementation Steps1. Site brandingYou have the ability to modify the app title, logo, and favicon. For Progressive Web App installations you can also configure the desktop icon.</description></item><item><title>resources/</title><link>https://docs.communityhealthtoolkit.org/building/branding/resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/branding/resources/</guid><description>IconsApps can be customized by defining the icons to use for tasks, targets, and contacts.
Add icons to the resources folder, and include them by name in the resources.json file as the following example:
{ &amp;#34;icon-risk&amp;#34;: &amp;#34;icon-healthcare-warning@2x.png&amp;#34;, &amp;#34;icon-treatment&amp;#34;: &amp;#34;icon-healthcare-medicine@2x.png&amp;#34;, &amp;#34;medic-clinic&amp;#34;: &amp;#34;medic-family.svg&amp;#34;, &amp;#34;medic-district-hospital&amp;#34;: &amp;#34;medic-family.svg&amp;#34;, &amp;#34;medic-health-center&amp;#34;: &amp;#34;medic-chw-area.svg&amp;#34;, &amp;#34;medic-person&amp;#34;: &amp;#34;medic-person.svg&amp;#34; } See Also: Interface
The folder and files structure would look like this:
./ resources.json /resources icon-healthcare-warning@2x.png icon-healthcare-medicine@2x.png medic-family.svg medic-family.svg medic-chw-area.svg medic-person.svg Finally run the command: cht --local upload-resources</description></item><item><title>Building CHT Android Flavors</title><link>https://docs.communityhealthtoolkit.org/building/branding/android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/branding/android/</guid><description>This tutorial will take you through building a CHT Android Application off the existing wrapper.
The CHT Android application is a thin wrapper to load the CHT Core Framework web application in a WebView.
You will be adding a new android flavor based off the CHT Android.
Brief Overview of Key ConceptsThe CHT Android is a native Android container for the Community Health Toolkit (CHT). The repository contains &amp;ldquo;flavored&amp;rdquo; configurations, where each &amp;ldquo;flavor&amp;rdquo; or &amp;ldquo;brand&amp;rdquo; is an app.</description></item></channel></rss>