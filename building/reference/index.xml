<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference Documentation on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/building/reference/</link><description>Recent content in Reference Documentation on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>API to interact with CHT Applications</title><link>https://docs.communityhealthtoolkit.org/building/reference/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/api/</guid><description>This page covers the endpoints to use when integrating with the CHT server. If there isn&amp;rsquo;t an endpoint that provides the function or data you need, direct access to the database is possible via the CouchDB API. Access to the PostgreSQL database may also prove useful for data analysis. If additional endpoints would be helpful, please make suggestions via a GitHub issue.
Settings GET /api/v1/settings PUT /api/v1/settings Query Parameters Export GET /api/v2/export/dhis GET /api/v2/export/reports Query parameters GET /api/v2/export/messages Output Examples GET /api/v2/export/feedback Query Parameters GET /api/v2/export/contacts Output Query parameters GET /api/v2/export/user-devices Output Forms GET /api/v1/forms Headers Examples GET /api/v1/forms/{{id}}.</description></item><item><title>resources/</title><link>https://docs.communityhealthtoolkit.org/building/reference/resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/resources/</guid><description>IconsApps can be customized by defining the icons to use for tasks, targets, and contacts.
Add icons to the resources folder, and include them by name in the resources.json file as the following example:
{ &amp;#34;icon-risk&amp;#34;: &amp;#34;icon-healthcare-warning@2x.png&amp;#34;, &amp;#34;icon-treatment&amp;#34;: &amp;#34;icon-healthcare-medicine@2x.png&amp;#34;, &amp;#34;medic-clinic&amp;#34;: &amp;#34;medic-family.svg&amp;#34;, &amp;#34;medic-district-hospital&amp;#34;: &amp;#34;medic-family.svg&amp;#34;, &amp;#34;medic-health-center&amp;#34;: &amp;#34;medic-chw-area.svg&amp;#34;, &amp;#34;medic-person&amp;#34;: &amp;#34;medic-person.svg&amp;#34; } See Also: Icon Library
The folder and files structure would look like this:
./ resources.json /resources icon-healthcare-warning@2x.png icon-healthcare-medicine@2x.png medic-family.svg medic-family.svg medic-chw-area.svg medic-person.svg Finally run the command: cht --local upload-resources</description></item><item><title>extension-libs/</title><link>https://docs.communityhealthtoolkit.org/building/reference/extension-libs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/extension-libs/</guid><description>Introduced in v4.2.0
IntroductionExtension libraries are blocks of code that are cached with the CHT web application giving app developers a powerful tool to extend the CHT. This is an advanced feature and requires an app developer with some software development experience.
An example of a use for this feature is to provide a function to calculate a risk score based on a machine learning model. The function can then be called passing in values from app forms and return the result to be stored with the report.</description></item><item><title>CHT API</title><link>https://docs.communityhealthtoolkit.org/building/reference/_partial_cht_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/_partial_cht_api/</guid><description>Introduced in v3.12.0
Provides CHT-Core Framework&amp;rsquo;s functions to contact summary, targets and tasks. The API is available in the cht reserved variable under the v1 version.
Function Arguments Description hasPermissions(permissions, userRoles, chtPermissionsSettings) permissions: String or array of permission name(s).
userRoles: (Optional) Array of user roles. Default to the current logged in user.
chtPermissionsSettings: (Optional) Object of configured permissions in CHT-Core&amp;rsquo;s settings. Default to the current instance&amp;rsquo;s configured permissions. Returns true if the user has the permission(s), otherwise returns false.</description></item><item><title>Utils Functions</title><link>https://docs.communityhealthtoolkit.org/building/reference/_partial_utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/reference/_partial_utils/</guid><description>Utility functions in the Core Framework can make common tasks much easier. These are available only for Tasks and Targets. To use the function call Utils.&amp;lt;function-name&amp;gt;(&amp;lt;params&amp;gt;), for example Utils.addDate(report.reported_date, 10).
Name Description isTimely(date, event) Returns true if the given date is after the start date and before the end date of the event. addDate(date, days) Returns a new Date set to midnight the given number of days after the given date.</description></item></channel></rss>