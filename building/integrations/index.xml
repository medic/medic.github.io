<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit – Integrations</title><link>https://docs.communityhealthtoolkit.org/building/integrations/</link><description>Recent content in Integrations on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom</title><link>https://docs.communityhealthtoolkit.org/building/integrations/custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/custom/</guid><description>
&lt;p>The CHT Core Framework includes functionality that allows sharing data with any API-based system. Developers have configured CHT integrations with OpenMRS, KenyaEMR, Bahmni, DHIS2, RapidPro, Apache NiFi, OpenHIM, custom electronic medical records (EMR), and several other systems.&lt;/p>
&lt;h2>Overview&lt;span class="hx-absolute -hx-mt-20" id="overview">&lt;/span>
&lt;a href="#overview" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Integrating a CHT App into your digital health ecosystem starts with identifying an integration use case. It&amp;rsquo;s important to first understand all the components present in the ecosystem (EMR, laboratory system, community health information system, etc) and then plan out what the workflow will look like operationally. It is important to consider what information is needed at each point, will it be available to them, what happens if it is not, is this workflow even useful for them.&lt;/p>
&lt;p>One of the biggest challenges in developing integrations between systems is patient matching and/or &lt;a href="https://en.wikipedia.org/wiki/Data_deduplication" target="_blank" rel="noopener">deduplication&lt;/a>. Sometimes this can be controlled operationally, other times it requires complicated algorithms or human intervention.&lt;/p>
&lt;p>Below are a few example integration use cases:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Lost to Follow-up&lt;/strong>: EMR generates a list of patients that require follow-up in the community, that list is sent to the CHT and healthworkers receive a task in the CHT to find those patients and refer them to the health facility.&lt;/li>
&lt;li>&lt;strong>Referrals from the community&lt;/strong>: When a CHW does an assessment and determines the patient should be referred to a health facility, send the referral information to the EMR.&lt;/li>
&lt;li>&lt;strong>Contact Tracing&lt;/strong>: Similar to Lost to Follow-Up, the EMR generates a list of contacts to be followed up with and this is sent to the CHT so that a tracer can call those contacts to see if they have symptoms.&lt;/li>
&lt;li>&lt;strong>Interactive Messaging&lt;/strong>: Integrate with a messaging platform (such as RapidPro) to allow community members to initiate self-screening assessments, which can then be sent to the CHT for follow-up by a healthworker.&lt;/li>
&lt;/ol>
&lt;p>As you design your use cases, creating a &lt;a href="https://www.websequencediagrams.com/" target="_blank" rel="noopener">sequence diagram&lt;/a> will be helpful in illustrating what the flow will look like. &lt;a href="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/#sequence-diagrams" >Here&lt;/a> is an example sequence diagram for an integration use case with RapidPro.&lt;/p>
&lt;h2>Integration Design Patterns&lt;span class="hx-absolute -hx-mt-20" id="integration-design-patterns">&lt;/span>
&lt;a href="#integration-design-patterns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>There are a number of different interactions that may occur between digital health systems. Below are some common use cases:&lt;/p>
&lt;ol>
&lt;li>Creating a patient in the CHT creates that patient in another system&lt;/li>
&lt;li>Creating a patient in another system creates that patient in the CHT&lt;/li>
&lt;li>Submitting a form in the CHT triggers an event in another system&lt;/li>
&lt;li>Submitting a form in the CHT sends data to another system&lt;/li>
&lt;li>Activity in another system triggers an event in the CHT&lt;/li>
&lt;li>Activity in another system stores the results in the CHT&lt;/li>
&lt;li>Another system needs to look up data in the CHT&lt;/li>
&lt;/ol>
&lt;h2>Sending data to other systems&lt;span class="hx-absolute -hx-mt-20" id="sending-data-to-other-systems">&lt;/span>
&lt;a href="#sending-data-to-other-systems" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Using the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/" >outbound push&lt;/a> feature, you can configure the CHT to send data to another system. Before starting, you&amp;rsquo;ll want to make sure you understand the APIs of the destination system and have login credentials with adequate privileges.&lt;/p>
&lt;p>To send data to other systems from the CHT, you will need to do the following:&lt;/p>
&lt;ol>
&lt;li>Enable &lt;code>outbound&lt;/code> in &lt;code>app_settings&lt;/code>&lt;/li>
&lt;li>Specify &lt;em>when&lt;/em> data is sent&lt;/li>
&lt;li>Specify &lt;em>where&lt;/em> data is sent&lt;/li>
&lt;li>Specify &lt;em>what&lt;/em> data is sent&lt;/li>
&lt;li>Set up credentials for the destination system&lt;/li>
&lt;/ol>
&lt;h3>Enable outbound&lt;span class="hx-absolute -hx-mt-20" id="enable-outbound">&lt;/span>
&lt;a href="#enable-outbound" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/#configuration" >Enable&lt;/a> the &lt;code>mark_for_outbound&lt;/code> transition in &lt;code>app_settings&lt;/code>.&lt;/p>
&lt;h3>When data is sent&lt;span class="hx-absolute -hx-mt-20" id="when-data-is-sent">&lt;/span>
&lt;a href="#when-data-is-sent" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Whenever a document is changed (such as submitting a form, creating a new contact, or editing an existing one) you can configure outbound to send data to another system. The &lt;code>relevant_to&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/#relevant_to" >property&lt;/a> in the outbound configuration is used to identify which activities will trigger the sending of data.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-green-200 hx-bg-green-100 hx-text-green-900 dark:hx-border-green-200/30 dark:hx-bg-green-900/30 dark:hx-text-green-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>&lt;/svg>Tip&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Send data to the EMR whenever a CHW submits an &lt;code>assessment&lt;/code> form where &lt;code>referral = true&lt;/code>.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>Where data is sent&lt;span class="hx-absolute -hx-mt-20" id="where-data-is-sent">&lt;/span>
&lt;a href="#where-data-is-sent" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The &lt;code>destination&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/#destination" >property&lt;/a> in the outbound configuration is used to specify &lt;em>where&lt;/em> to send data. This will normally be the API endpoint of the destination system or interoperabiliy layer.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-green-200 hx-bg-green-100 hx-text-green-900 dark:hx-border-green-200/30 dark:hx-bg-green-900/30 dark:hx-text-green-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>&lt;/svg>Tip&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Send data to the &lt;code>/api/v1/referral&lt;/code> endpoint in the destination system.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>What data is sent&lt;span class="hx-absolute -hx-mt-20" id="what-data-is-sent">&lt;/span>
&lt;a href="#what-data-is-sent" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>You configure &lt;em>what&lt;/em> data is sent using the &lt;code>mapping&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/#mapping" >property&lt;/a>. You will map data from the CHT to the format required by the destination API endpoint.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-green-200 hx-bg-green-100 hx-text-green-900 dark:hx-border-green-200/30 dark:hx-bg-green-900/30 dark:hx-text-green-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>&lt;/svg>Tip&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Map the &lt;code>contact.name&lt;/code> field in the CHT to the &lt;code>patient.name&lt;/code> field in the EMR.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3>Authentication&lt;span class="hx-absolute -hx-mt-20" id="authentication">&lt;/span>
&lt;a href="#authentication" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Credentials for the destination system are &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/#credentials" >stored in CouchdDB&lt;/a>. You will need to set this up before you can test your configuration.&lt;/p>
&lt;h2>Requests from other systems&lt;span class="hx-absolute -hx-mt-20" id="requests-from-other-systems">&lt;/span>
&lt;a href="#requests-from-other-systems" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The CHT has a complete RESTful API that other systems can utilize to interact with data in the CHT.&lt;/p>
&lt;p>The most common uses are:&lt;/p>
&lt;ol>
&lt;li>Looking up data in the CHT from another system&lt;/li>
&lt;li>POSTing data to the CHT from another system&lt;/li>
&lt;/ol>
&lt;h3>Look up data in the CHT&lt;span class="hx-absolute -hx-mt-20" id="look-up-data-in-the-cht">&lt;/span>
&lt;a href="#look-up-data-in-the-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The CHT has a number of different API endpoints that can be used to look up data.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Important&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Example 1: You have a patient&amp;rsquo;s phone number and you want to look up more information about that patient, such as who their CHW is or what Catchment Area they live in.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>You can use the &lt;code>contacts_by_phone&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#get-apiv1contacts-by-phone" >endpoint&lt;/a> will return the fully hydrated contact information for those patients.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>&lt;br>&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Example 2: You just have the internal UUID of a particular contact but want to get the complete information available for that contact.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>You can use the &lt;code>hydrate&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#get-apiv1hydrate" >endpoint&lt;/a> to obtain this information. to look up the complete information for that contact.&lt;/p>
&lt;h3>POST data to the CHT&lt;span class="hx-absolute -hx-mt-20" id="post-data-to-the-cht">&lt;/span>
&lt;a href="#post-data-to-the-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The CHT API also allows you to POST data. Using these endpoints, you can create new records in your CHT API. You can store activities that took place in another system on that contact&amp;rsquo;s profile in the CHT, and even create tasks for CHWs in the CHT based on activities that took place in the other system.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>&lt;br>&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Example 1: You use RapidPro to send daily quarantine follow-up messages to a patient. You want to store the patient&amp;rsquo;s responses to those messages on their profile in the CHT.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>You can do this by submitting a JSON Form to the records &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#post-apiv2records" >endpoint&lt;/a>.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Important&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Example 2: Continuing from Example 1, create a task for a CHW in the CHT whenever a patient responds that they have developed symptoms.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>You would do this by simply configuring a &lt;a href="https://docs.communityhealthtoolkit.org/building/tasks/" >task&lt;/a> to be generated based on criteria available in the report that was created in Example 1.&lt;/p></description></item><item><title>Android</title><link>https://docs.communityhealthtoolkit.org/building/integrations/android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/android/</guid><description>
&lt;p>The &lt;a href="https://github.com/medic/cht-android" target="_blank" rel="noopener">CHT Android application&lt;/a> can be launched by clicking on a link or invoking an intent in another Android app. This is useful for enabling login by SMS, directing a user to a specific page, and integrating between Android applications.&lt;/p>
&lt;h2>Sending a URL&lt;span class="hx-absolute -hx-mt-20" id="sending-a-url">&lt;/span>
&lt;a href="#sending-a-url" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-cards hx-mt-4 hx-gap-4 hx-grid not-prose" style="--hextra-cards-grid-cols: 3;">
&lt;a
class="hextra-card hx-group hx-flex hx-flex-col hx-justify-start hx-overflow-hidden hx-rounded-lg hx-border hx-border-gray-200 hx-text-current hx-no-underline dark:hx-shadow-none hover:hx-shadow-gray-100 dark:hover:hx-shadow-none hx-shadow-gray-100 active:hx-shadow-sm active:hx-shadow-gray-200 hx-transition-all hx-duration-200 hover:hx-border-gray-300 hx-bg-gray-100 hx-shadow dark:hx-border-neutral-700 dark:hx-bg-neutral-800 dark:hx-text-gray-50 hover:hx-shadow-lg dark:hover:hx-border-neutral-500 dark:hover:hx-bg-neutral-700"href="../../branding/android/android-12-prompt.png"
>&lt;img
alt=""
class="hextra-card-image"
loading="lazy"
decoding="async"
src="../../branding/android/android-12-prompt.png"
/>&lt;span class="hextra-card-icon hx-flex hx-font-semibold hx-items-start hx-gap-2 hx-p-4 hx-text-gray-700 hover:hx-text-gray-900 dark:hx-text-neutral-200 dark:hover:hx-text-neutral-50">&lt;/span>&lt;/a>
&lt;a
class="hextra-card hx-group hx-flex hx-flex-col hx-justify-start hx-overflow-hidden hx-rounded-lg hx-border hx-border-gray-200 hx-text-current hx-no-underline dark:hx-shadow-none hover:hx-shadow-gray-100 dark:hover:hx-shadow-none hx-shadow-gray-100 active:hx-shadow-sm active:hx-shadow-gray-200 hx-transition-all hx-duration-200 hover:hx-border-gray-300 hx-bg-gray-100 hx-shadow dark:hx-border-neutral-700 dark:hx-bg-neutral-800 dark:hx-text-gray-50 hover:hx-shadow-lg dark:hover:hx-border-neutral-500 dark:hover:hx-bg-neutral-700"href="android-prompt.png"
>&lt;img
alt=""
class="hextra-card-image"
loading="lazy"
decoding="async"
src="https://docs.communityhealthtoolkit.org/building/integrations/android/android-prompt_hu_4b65c0134d233a19.webp"
width="800"
height="544"
/>&lt;span class="hextra-card-icon hx-flex hx-font-semibold hx-items-start hx-gap-2 hx-p-4 hx-text-gray-700 hover:hx-text-gray-900 dark:hx-text-neutral-200 dark:hover:hx-text-neutral-50">&lt;/span>&lt;/a>
&lt;/div>
&lt;p>When the user clicks on a link to a CHT instance from an SMS, email, WhatsApp, or any other app, Android will prompt the user to choose whether to open the URL in the Android app or the browser. If a CHT app is not installed then the URL will be opened in the browser.&lt;/p>
&lt;p>The prompt may look different depending on the version of Android being used. Up to Android 11, users can choose &amp;ldquo;Always&amp;rdquo; to skip this prompt in the future. Starting with Android 12, users will be promped to associate the CHT instance&amp;rsquo;s domain with the Android app. Alternatively, a CHT instance can be configured to have its links automatically verified for the associated Android App (with no user action required). See the docs on &lt;a href="https://docs.communityhealthtoolkit.org/building/branding/android/#android-app-links-verification" >Android App Links verification&lt;/a> for more information.&lt;/p>
&lt;h2>Using an intent&lt;span class="hx-absolute -hx-mt-20" id="using-an-intent">&lt;/span>
&lt;a href="#using-an-intent" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>To have another Android application launch the CHT Android application, use an &lt;a href="https://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW" target="_blank" rel="noopener">ACTION_VIEW&lt;/a> intent, for example:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;https://myapplication.app.medicmobile.org&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Intent&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Intent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Intent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ACTION_VIEW&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Uri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">startActivity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>DHIS2</title><link>https://docs.communityhealthtoolkit.org/building/integrations/dhis2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/dhis2/</guid><description>
&lt;p>Most health systems have regular reporting requirements for community-level activities. Health workers often carry around heavy logbooks to manually record all relevant activities. When it is time to submit their data, community health workers (CHWs) summarize what was recorded in their logbooks and share this information with their supervisors, who in turn create paper records of these totals across entire community units or health facilities. This paper record is often passed to yet another individual whose responsibility is to manually key in the data into a health information management system, such as DHIS2.&lt;/p>
&lt;p>In communities using digital health apps that do not integrate with DHIS2, it is highly likely that health workers are duplicating efforts by recording the same information both in their app and in their logbook(s). For example, they are not only registering new pregnancies in their app, but they are also manually recording this in their logbooks, manually adding them up at the end of the month, and then someone else is manually keying this into DHIS2.&lt;/p>
&lt;p>In communities using digital health apps built with the CHT, health systems can reduce or eliminate the need to complete paper based forms for DHIS2 reporting needs. This gives health workers more time to focus on caring for the families in their community while also increasing accuracy and timeliness of their DHIS2 reporting requirements.&lt;/p>
&lt;h2>Overview&lt;span class="hx-absolute -hx-mt-20" id="overview">&lt;/span>
&lt;a href="#overview" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The CHT Core Framework supports integrations with DHIS2 in a variety of ways:&lt;/p>
&lt;ol>
&lt;li>Sending patient data&lt;/li>
&lt;li>Sending event data&lt;/li>
&lt;li>Sending pre-aggregated &amp;ldquo;Service Reports&amp;rdquo;&lt;/li>
&lt;li>Aggregating data across multiple health workers into DHIS2 Data Values&lt;/li>
&lt;li>Exporting a file that can be imported into DHIS2 as a Data Set&lt;/li>
&lt;li>Exposing an API for DHIS2 app developers to pull aggregate data from CHT Core&lt;/li>
&lt;li>Receiving data from DHIS2&lt;/li>
&lt;/ol>
&lt;p>Sending patient, event, and pre-aggregated data can be achieved using the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/" >Outbound push&lt;/a> feature. Receiving data from DHIS2 can be achieved using the &lt;a href="https://github.com/medic/cht-core/tree/master/api" target="_blank" rel="noopener">CHT Core Web API&lt;/a>.&lt;/p>
&lt;p>Aggregating data across multiple health workers requires a somewhat specific workflow and was designed with three key user personas in mind. The aggregate workflow is described in more detail below.&lt;/p>
&lt;h2>Aggregate Workflow&lt;span class="hx-absolute -hx-mt-20" id="aggregate-workflow">&lt;/span>
&lt;a href="#aggregate-workflow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The aggregate workflow was designed specifically for CHWs, Supervisors, and Health Records Information Officers (HRIO) but may be adapted to other contexts.&lt;/p>
&lt;p>&lt;strong>CHW (offline user)&lt;/strong>: Conducts home visits and records information in the app. Reviews aggregate data throughout the month and makes sure to sync at the end of the month.&lt;/p>
&lt;p>&lt;strong>Supervisor (offline user)&lt;/strong>: Provides supervision to the CHWs, reviews and verifies aggregate data for an entire community unit.&lt;/p>
&lt;p>&lt;strong>HRIO (online user)&lt;/strong>: Exports a file from the CHT and imports into DHIS2. Reviews data in DHIS2.&lt;/p>
&lt;h3>Community Health Workers&lt;span class="hx-absolute -hx-mt-20" id="community-health-workers">&lt;/span>
&lt;a href="#community-health-workers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>CHWs support patients in their community by following care guides and recording responses in the CHT. The CHT calculates aggregate DHIS2 Data Values for each CHW based on rules configured in the CHT. CHWs can view these indicators on the Targets tab and should review them and sync at the end of the month.&lt;/p>
&lt;figure>&lt;a href="chw.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/dhis2/chw.png"
alt="CHWs">&lt;/a>&lt;figcaption>
&lt;p>CHWs&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/targets/targets-overview/">Targets&lt;/a>&lt;/p>
&lt;h3>Supervisors&lt;span class="hx-absolute -hx-mt-20" id="supervisors">&lt;/span>
&lt;a href="#supervisors" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>In addition to their own targets, Supervisors can see the aggregate of each DHIS2 Data Value across &lt;em>all&lt;/em> CHWs in their area from the &lt;em>CHW Aggregate&lt;/em> view on the &lt;strong>Targets tab&lt;/strong>. By tapping on a target, they can also see each CHW’s contribution towards that total. Supervisors can review and verify with CHWs that everyone has synced and that their data is correct. The Supervisor can communicate with the HRIO when everything has been validated.&lt;/p>
&lt;figure>&lt;a href="supervisor.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/dhis2/supervisor.png"
alt="Feature Overview Supervisors">&lt;/a>&lt;figcaption>
&lt;p>Feature Overview Supervisors&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h3>Health Records Information Officers&lt;span class="hx-absolute -hx-mt-20" id="health-records-information-officers">&lt;/span>
&lt;a href="#health-records-information-officers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HRIOs access the &lt;strong>CHT App Management&lt;/strong> tab and select the appropriate &lt;em>DHIS2 Data Set, Organisation Unit,&lt;/em> and &lt;em>Period&lt;/em>. They then &lt;em>Export&lt;/em> a file that is formatted for DHIS2. HRIOs will need access to the &lt;strong>Import/Export&lt;/strong> feature in DHIS2 so that they can &lt;strong>Import&lt;/strong> the file. Once it has been imported into DHIS2, they review the data from the &lt;strong>Data Entry&lt;/strong> screen in DHIS2.&lt;/p>
&lt;figure>&lt;a href="data-entry-1.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/dhis2/data-entry-1.png"
alt="Feature Overview Data Entry 1">&lt;/a>&lt;figcaption>
&lt;p>Feature Overview Data Entry 1&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h2>DHIS2 apps&lt;span class="hx-absolute -hx-mt-20" id="dhis2-apps">&lt;/span>
&lt;a href="#dhis2-apps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The CHT also includes an &lt;a href="https://github.com/medic/cht-core/tree/master/api" target="_blank" rel="noopener">API&lt;/a> that can be called from other applications that returns DHIS2 Data Sets. This means that you can build a &lt;a href="https://docs.dhis2.org/master/en/developer/html/apps_creating_apps.html" target="_blank" rel="noopener">DHIS2 app&lt;/a> that pulls data from the CHT and imports it electronically into DHIS2. This would allow &lt;strong>Data Entry&lt;/strong> to control the process directly from DHIS2 without having to access the CHT.&lt;/p>
&lt;figure>&lt;a href="data-entry-1.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/dhis2/data-entry-2.png"
alt="Feature Overview Data Entry 2">&lt;/a>&lt;figcaption>
&lt;p>Feature Overview Data Entry 2&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h2>Version Notes&lt;span class="hx-absolute -hx-mt-20" id="version-notes">&lt;/span>
&lt;a href="#version-notes" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Feature&lt;/th>
&lt;th>CHT Core version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Calculate DHIS2 Data Values by aggregating data from CHT Core reports&lt;/td>
&lt;td>3.9.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Export file from CHT Core that can be imported into DHIS2 as a Data Set&lt;/td>
&lt;td>3.9.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>DHIS2 Aggregate</title><link>https://docs.communityhealthtoolkit.org/building/integrations/dhis2-aggregate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/dhis2-aggregate/</guid><description>
&lt;p>One of the first things you’ll need to do is identify the specific &lt;a href="https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/data-sets-and-forms.html#what-is-a-data-set" target="_blank" rel="noopener">DHIS2 data set&lt;/a> that you plan to implement. You’ll need a list of all the &lt;a href="https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/data-elements-and-custom-dimensions.html#data-elements" target="_blank" rel="noopener">data elements&lt;/a> on that data set, a detailed understanding of how each is calculated, the frequency in which the data set is submitted (weekly, monthly, etc…), and for which &lt;a href="https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/organisation-units.html" target="_blank" rel="noopener">organisation units&lt;/a> the data set applies. You’ll also want to identify and engage the appropriate DHIS2 stakeholders to get access to DHIS2 metadata, test environments, and discuss workflows. The DHIS2 documentation site provides additional background and advice &lt;a href="https://docs.dhis2.org/2.34/en/dhis2_implementation_guide/integration-concepts.html#integration-concepts" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h2>Design Considerations&lt;span class="hx-absolute -hx-mt-20" id="design-considerations">&lt;/span>
&lt;a href="#design-considerations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>There are a few very important considerations related to how you design workflows and set up your CHT application to make sure you will be able to integrate with DHIS2. The main areas are:&lt;/p>
&lt;ol>
&lt;li>Hierarchies&lt;/li>
&lt;li>Fields and calculations&lt;/li>
&lt;li>Workflows and user access.&lt;/li>
&lt;/ol>
&lt;p>These considerations are summarized below.&lt;/p>
&lt;h3>Hierarchies&lt;span class="hx-absolute -hx-mt-20" id="hierarchies">&lt;/span>
&lt;a href="#hierarchies" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The CHT relies on your Place hierarchy to determine how data should be aggregated for DHIS2. As such, it’s important that you consider how organization units are configured in the DHIS2 instance that you need to integrate data into. If your CHT Place hierarchy does not align with the DHIS2 organisation unit structure, the CHT will not be able to aggregate data in the way DHIS2 needs it.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Important&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>There should be a one-to-one relationship between DHIS2 organisation units and CHT places.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/workflows/hierarchy/">Hierarchies&lt;/a>&lt;/p>
&lt;h3>Fields and calculations&lt;span class="hx-absolute -hx-mt-20" id="fields-and-calculations">&lt;/span>
&lt;a href="#fields-and-calculations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>It’s important to understand each data element on the DHIS2 data set you want to integrate data into and how each data element is calculated. When you are designing your forms in the CHT, you will need to make sure you are capturing information in your forms so that every data element on the chosen DHIS2 data set can be calculated within the CHT.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Note&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Once you obtain the list of data elements on the data set, be sure to go through them one by one and figure out how to calculate each one using information available in your CHT forms.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/forms/">Forms&lt;/a>&lt;/p>
&lt;h3>Workflows and User Access&lt;span class="hx-absolute -hx-mt-20" id="workflows-and-user-access">&lt;/span>
&lt;a href="#workflows-and-user-access" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The aggregate data workflow is really designed around 3 key user personas. You’ll need to make sure that your context can support those assumptions and will be able to have access to the appropriate features in the CHT and DHIS2.&lt;/p>
&lt;p>Moving data from the CHT to DHIS2 can be done in three main ways.&lt;/p>
&lt;ol>
&lt;li>Manually downloading from the CHT&lt;/li>
&lt;li>Building an app in DHIS2 and calling an API in the CHT&lt;/li>
&lt;li>Orchestrating the steps using an interoperability layer such as &lt;a href="http://openhim.org/" target="_blank" rel="noopener">OpenHIM&lt;/a>, &lt;a href="https://www.openfn.org/" target="_blank" rel="noopener">OpenFn&lt;/a>, etc&amp;hellip;&lt;/li>
&lt;/ol>
&lt;h2>Configuration&lt;span class="hx-absolute -hx-mt-20" id="configuration">&lt;/span>
&lt;a href="#configuration" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Once you have designed your hierarchies, forms, calculations, and workflows, there are a few key configurations that need to be made.&lt;/p>
&lt;h3>Data sets&lt;span class="hx-absolute -hx-mt-20" id="data-sets">&lt;/span>
&lt;a href="#data-sets" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>For the CHT to be able to export the file for DHIS2, it needs to know the specific name and ID of the data set in DHIS2. You will need to obtain the ID from the test or production DHIS2 environment.&lt;/p>
&lt;p>Configure the data set in &lt;code>app_settings.json&lt;/code>.&lt;/p>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/dhis2/">DHIS2 in App Settings&lt;/a>&lt;/p>
&lt;h3>Organisation units&lt;span class="hx-absolute -hx-mt-20" id="organisation-units">&lt;/span>
&lt;a href="#organisation-units" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Aggregation in the CHT is based on your Place hierarchy. As mentioned in the Hierarchies Design Considerations above, your Places must align with DHIS2 organisation units. You will need to specify the DHIS2 organisation unit&amp;rsquo;s ID on the Place document in the CHT.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Note&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Update the contact document of each place you wish to map to an organisation unit. Add a &lt;code>dhis.orgUnit&lt;/code> attribute.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/forms/contact/">Contact Forms&lt;/a>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;my_place&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;health_center&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;dhis&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;orgUnit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;HJiPOcmziQA&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Data elements&lt;span class="hx-absolute -hx-mt-20" id="data-elements">&lt;/span>
&lt;a href="#data-elements" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Calculations for DHIS2 indicators are done using CHT Target functionality. For each DHIS2 data element, you will need to configure a corresponding CHT Target and specify the ID of the DHIS2 data set and data element. If you do not include the data set, this data element will be included in every data set.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Note&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>In &lt;code>targets.js&lt;/code>, configure one or more data elements by setting the &lt;code>dhis.dataSet&lt;/code> and &lt;code>dhis.dataElement&lt;/code> attributes in the target schema.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/targets/targets-js/">Targets&lt;/a>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">export&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;births-this-month&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;count&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">icon&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;icon-infant&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">translation_key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;targets.births.title&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">subtitle_translation_key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;targets.this_month.subtitle&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">goal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesTo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;contacts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesToType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;person&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesIf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">contact&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">date&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">date_of_birth&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dhis&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataSet&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;VMuFODsyWaO&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataElement&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;kB0ZBFisE0e&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Users&lt;span class="hx-absolute -hx-mt-20" id="users">&lt;/span>
&lt;a href="#users" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>For the HRIO role, create a new user role and a new user with that role; or update an existing user role. To export DHIS2 metrics, users need to have the following permissions: &lt;code>can_configure&lt;/code>, &lt;code>can_export_all&lt;/code>, and &lt;code>can_export_dhis&lt;/code>.&lt;/p>
&lt;p>&lt;em>See Also&lt;/em>: &lt;a href="https://docs.communityhealthtoolkit.org/building/concepts/users/">Users&lt;/a>&lt;/p>
&lt;h2>User experience&lt;span class="hx-absolute -hx-mt-20" id="user-experience">&lt;/span>
&lt;a href="#user-experience" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Once your CHT project is configured to integrate with DHIS2, follow these steps to export the data from CHT and import it into DHIS:&lt;/p>
&lt;h3>Export data&lt;span class="hx-absolute -hx-mt-20" id="export-data">&lt;/span>
&lt;a href="#export-data" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Login to the CHT instance using a user account with the required permissions. You should be automatically navigated to the Admin Console.&lt;/li>
&lt;li>Select &amp;ldquo;Import &amp;amp; export data&amp;rdquo; from the side&lt;/li>
&lt;li>Select &amp;ldquo;DHIS2&amp;rdquo; from the header along the top&lt;/li>
&lt;li>Select the data set, org unit, and time period that you&amp;rsquo;d like to send to DHIS2. Click &amp;ldquo;Export&amp;rdquo;&lt;/li>
&lt;li>A file should download in your browser. This file contains a &lt;a href="https://docs.dhis2.org/master/en/developer/html/webapi_data_values.html" target="_blank" rel="noopener">dataValueSet&lt;/a> with aggregated user&amp;rsquo;s data.&lt;/li>
&lt;/ol>
&lt;h3>Import data&lt;span class="hx-absolute -hx-mt-20" id="import-data">&lt;/span>
&lt;a href="#import-data" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Login to DHIS2 using a user account with permission to manage the relevant dataset and organisation units.&lt;/li>
&lt;li>Select the &amp;ldquo;import/export&amp;rdquo; application inside DHIS2. Select &amp;ldquo;import data&amp;rdquo;.&lt;/li>
&lt;li>Upload the file you downloaded in Step 5.&lt;/li>
&lt;li>Click &amp;ldquo;Import&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>Check the UI for any errors. If you get errors you don&amp;rsquo;t understand or are unable to resolve an error, you can always ask for assistance on the &lt;a href="https://forum.communityhealthtoolkit.org/c/support/18" target="_blank" rel="noopener">CHT Forum&lt;/a>. If there are no errors, you can review the numbers that resulted by reviewing the data set in DHIS2.&lt;/p>
&lt;h2>Known limitations&lt;span class="hx-absolute -hx-mt-20" id="known-limitations">&lt;/span>
&lt;a href="#known-limitations" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Data for each user is aggregated based on the contents of the user&amp;rsquo;s target document. Note that if your users don&amp;rsquo;t login and synchronize, their data won&amp;rsquo;t be represented in the exported data.&lt;/li>
&lt;li>Integrations are limited to &lt;em>monthly&lt;/em> DHIS2 data sets.&lt;/li>
&lt;li>Integrations are limited to numeric data-types. To support other data types, consider making a &lt;a href="https://docs.dhis2.org/master/en/developer/html/apps_creating_apps.html" target="_blank" rel="noopener">DHIS2 App&lt;/a> for your project.&lt;/li>
&lt;/ul></description></item><item><title>OpenMRS</title><link>https://docs.communityhealthtoolkit.org/building/integrations/openmrs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/openmrs/</guid><description>
&lt;p>&lt;a href="https://openmrs.org" target="_blank" rel="noopener">OpenMRS&lt;/a> is an open source electronic medical record system used in dozens of countries. Integrating CHT apps with OpenMRS can open up opportunities to improve health outcomes for patients by promoting better coordination of care. For example, referrals by CHWs in the community can be sent electronically to health facilities using OpenMRS so that nurses and clinicians can prepare for their visit and have full access to the assessment done by a CHW.&lt;/p>
&lt;p>Integrating CHT apps with OpenMRS can be achieved by following &lt;a href="https://docs.communityhealthtoolkit.org/building/integrations/openmrs/" >this guide&lt;/a>, which leverages the &lt;a href="https://rest.openmrs.org" target="_blank" rel="noopener">OpenMRS REST API&lt;/a>.&lt;/p>
&lt;h2>Overview&lt;span class="hx-absolute -hx-mt-20" id="overview">&lt;/span>
&lt;a href="#overview" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The CHT Core Framework supports integrations with OpenMRS in a variety of ways:&lt;/p>
&lt;ol>
&lt;li>Sending patient and patient contacts data&lt;/li>
&lt;li>Sending reports (encounters and observations) data&lt;/li>
&lt;li>Exposing an API for OpenMRS developers to pull data from CHT Core&lt;/li>
&lt;li>Receiving data from OpenMRS&lt;/li>
&lt;/ol>
&lt;p>Sending patients, patient contacts, and reports data can be achieved using the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/" >Outbound push&lt;/a>. Receiving data from OpenMRS can be achieved using the CHT Core Web &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/" target="_blank" rel="noopener">API&lt;/a>.&lt;/p>
&lt;p>Common OpenMRS use cases include:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Linkage to care&lt;/strong>: Completion of medical visits after diagnosis&lt;/li>
&lt;li>&lt;strong>Contact tracing&lt;/strong>: OpenMRS generates a list of contacts to be followed up&lt;/li>
&lt;li>&lt;strong>Care coordination&lt;/strong>: Reminding patients to self-report or health-care givers to complete follow ups on patients of interest&lt;/li>
&lt;/ol>
&lt;h2>Prerequisites&lt;span class="hx-absolute -hx-mt-20" id="prerequisites">&lt;/span>
&lt;a href="#prerequisites" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>As you design your usecases, bear in mind that at the heart of OpenMRS is the &lt;a href="https://wiki.openmrs.org/display/docs/Concept&amp;#43;Dictionary&amp;#43;Basics" target="_blank" rel="noopener">Concept Dictionary&lt;/a>. Every contact, relationship, encounter or observation metadata exists first, which guides the definition of the forms in the CHT. Therefore, you need to have good understanding of what data maps to what concept.&lt;/p>
&lt;h2>Getting started&lt;span class="hx-absolute -hx-mt-20" id="getting-started">&lt;/span>
&lt;a href="#getting-started" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/" >CHT API&lt;/a> and &lt;a href="https://rest.openmrs.org/#openmrs-rest-api" target="_blank" rel="noopener">OpenMRS API&lt;/a> are used for integration. However, the APIs do not do data cleaning and formatting out-of-the-box. Therefore, both systems require custom solutions that ochestrate the functionality to transform exchanged data to be accepted. In the following sections, we focus more on the general procedure for setting up custom modules and services.&lt;/p>
&lt;h3>CHT to OpenMRS&lt;span class="hx-absolute -hx-mt-20" id="cht-to-openmrs">&lt;/span>
&lt;a href="#cht-to-openmrs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>This section focuses on a simple process and the best practices to send data to OpenMRS.&lt;/p>
&lt;h4>Mapping forms&lt;span class="hx-absolute -hx-mt-20" id="mapping-forms">&lt;/span>
&lt;a href="#mapping-forms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>The first thing is to define forms to capture data. Forms can be contact or app, which translate to patient and encounter (for example, observation, lab request, and referral) respectively. Forms are defined using the XLS Form standard.
Some of the best practices here include adopting a convention that results in minimum disruption (or that would require minimal processing) of the concept dictionary.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Defining contact forms&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>Here, you need to capture the basic details required for registering a patient or a patient contact in OpenMRS. Below is a sample naming convention for demographic details such as a person&amp;rsquo;s name (under field name):&lt;/p>
&lt;p>&lt;code>patient_familyName&lt;/code> for family_name,
&lt;code>patient_firstName&lt;/code> for first_name,
&lt;code>patient_middleName&lt;/code> for middle_name&lt;/p>
&lt;p>Another example of patient identifiers could take the form &lt;code>_IdentifierType_humanReadableName_IdentifierTypeUuid&lt;/code>. For example, national Id identifier type definition would be, &lt;code>patient_identifierType_nationalId_49af6cdc-7968-4abb-bf46-de10d7f4859f&lt;/code>.&lt;/p>
&lt;p>A sample form definition could be as follows:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>type&lt;/th>
&lt;th>name&lt;/th>
&lt;th>label&lt;/th>
&lt;th>required&lt;/th>
&lt;th>relevant&lt;/th>
&lt;th>appearance&lt;/th>
&lt;th>constraint&lt;/th>
&lt;th>constraint_message&lt;/th>
&lt;th>calculation&lt;/th>
&lt;th>choice_filter&lt;/th>
&lt;th>hint&lt;/th>
&lt;th>default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>begin group&lt;/td>
&lt;td>patient_demographics&lt;/td>
&lt;td>Demographic details&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>string&lt;/td>
&lt;td>patient_familyName&lt;/td>
&lt;td>Family name&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>string&lt;/td>
&lt;td>patient_firstName&lt;/td>
&lt;td>First name&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>string&lt;/td>
&lt;td>patient_middleName&lt;/td>
&lt;td>Middle name&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>string&lt;/td>
&lt;td>patient_identifierType_nationalId_49af6cdc-7968-4abb-bf46-de10d7f4859f&lt;/td>
&lt;td>National ID&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>end group&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>A sample payload would be as follows:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient_demographics&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient_familyName&amp;#34;: &amp;#34;Doe&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient_firstName&amp;#34;: &amp;#34;John&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient_middleName&amp;#34;: &amp;#34;Test&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient_identifierType_nationalId_49af6cdc-7968-4abb-bf46-de10d7f4859f&amp;#34;: &amp;#34;38839128&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient_identifierType_clinicNumber_000f85aa-a460-46d1-87be-daabe7bd9d99&amp;#34;: &amp;#34;1271891&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Such convention makes it easier to process the payload for queueing handling.&lt;/p>
&lt;ol start="2">
&lt;li>&lt;strong>Defining app forms&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>An encounter form consists of input and observation groups in the XForm. &lt;code>form_uuid&lt;/code> and &lt;code>encounter_type_uuid&lt;/code> define the uuids for the encounter form and encounter type respectively. Note that these are defined within the general &lt;code>input&lt;/code> group provided by CHT.&lt;/p>
&lt;p>The &lt;code>observation&lt;/code> group is used to define the clinical observation variables to be collected by the form. This group is equivalent to the group of &lt;code>&amp;lt;obs&amp;gt;&lt;/code> in OpenMRS html form entry module. In OpenMRS, an observation construct has concept ID (with inherent concept type), label, and answer options if it requires. In Xforms, one needs to define the following:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Observation type (field type of the xlsform)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Name - this will be used as &lt;code>key&lt;/code> in the generated JSON payload for the form data. Using the adopted convention above, &lt;code>_conceptID_humanReadableConceptName_99DCT&lt;/code>, we could have:&lt;/p>
&lt;p>&lt;code>_5089_weight_99DC&lt;/code> for weight.&lt;/p>
&lt;p>For multi-select (obs group in OpenMRS), we can easily append &lt;code>MULTISELECT&lt;/code> to the &lt;code>humanReadableConceptName&lt;/code> for example:
&lt;code>_162558_disabilityTypeMULTISELECT_99DCT&lt;/code> for diability type with the options &lt;code>blind, dumb, ...&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A label which is displayed to the user during form entry&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Here is a sample form snippet followed by sample select list in the choices worksheet.&lt;/p>
&lt;h5>Data fields&lt;span class="hx-absolute -hx-mt-20" id="data-fields">&lt;/span>
&lt;a href="#data-fields" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>type&lt;/th>
&lt;th>name&lt;/th>
&lt;th>label&lt;/th>
&lt;th>required&lt;/th>
&lt;th>relevant&lt;/th>
&lt;th>appearance&lt;/th>
&lt;th>constraint&lt;/th>
&lt;th>constraint_message&lt;/th>
&lt;th>calculation&lt;/th>
&lt;th>choice_filter&lt;/th>
&lt;th>hint&lt;/th>
&lt;th>default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>calculate&lt;/td>
&lt;td>form_uuid&lt;/td>
&lt;td>NO_LABEL&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>_99DCT&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>calculate&lt;/td>
&lt;td>encounter_type_uuid&lt;/td>
&lt;td>NO_LABEL&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>begin group&lt;/td>
&lt;td>group_assessment&lt;/td>
&lt;td>Assessment&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>select_one client_consented&lt;/td>
&lt;td>_1710_clientConsented_99DCT&lt;/td>
&lt;td>Has ${patient_name} consented?&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>select_multiple disability_type&lt;/td>
&lt;td>_162558_disabilityTypeMULTISELECT_99DCT&lt;/td>
&lt;td>Disability type&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>text&lt;/td>
&lt;td>_160632_Specify_99DCT&lt;/td>
&lt;td>Specify (Other)&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>${_162558_disabilityTypeMULTISELECT_99DCT} = &amp;lsquo;other&amp;rsquo;&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>end group&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>Choices&lt;span class="hx-absolute -hx-mt-20" id="choices">&lt;/span>
&lt;a href="#choices" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>list_name&lt;/th>
&lt;th>name&lt;/th>
&lt;th>label&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>client_consented&lt;/td>
&lt;td>_1065_Yes_99DCT&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client_consented&lt;/td>
&lt;td>_1066_No_99DCT&lt;/td>
&lt;td>No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>disability_type&lt;/td>
&lt;td>_1058_vision_99DCT&lt;/td>
&lt;td>Vision&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>disability_type&lt;/td>
&lt;td>_1059_hearing_99DCT&lt;/td>
&lt;td>Hearing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>disability_type&lt;/td>
&lt;td>_1060_mental_99DCT&lt;/td>
&lt;td>Mental&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>disability_type&lt;/td>
&lt;td>_1061_other_99DCT&lt;/td>
&lt;td>Other&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Remember to convert and upload your forms&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">cht --url&lt;span class="o">=&lt;/span>https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@localhost --accept-self-signed-certs convert-contact-forms upload-contact-forms convert-app-forms upload-app-forms&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Important&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Remember to setup the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/" >Outbound push&lt;/a> modules to send data to OpenMRS.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h4>Handling the data&lt;span class="hx-absolute -hx-mt-20" id="handling-the-data">&lt;/span>
&lt;a href="#handling-the-data" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>After collecting data using the forms defined above, the next step is to process and persist it in OpenMRS. Processing includes:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Cleaning&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>First, the data has to be transformed to an OpenMRS-compatible format before it is queued. This means that you need to define custom RESTful endpoints if not already existing, that would be utilized by the Outbound push modules configured above. Transformation basically involves extracting form data into an object. Most importantly, &lt;code>discriminators&lt;/code>, which are like flags appended to form data to inform the type of data being processed. For example, a &lt;code>registration&lt;/code> discriminator implies that we&amp;rsquo;re dealing with demographic details. A sample transformed payload is shown below:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient.family_name&amp;#34;: &amp;#34;Doe&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient.first_name&amp;#34;: &amp;#34;John&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient.middle_name&amp;#34;: &amp;#34;Test&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;patient.other_identifier&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;identifier_type_uuid&amp;#34;: &amp;#34;49af6cdc-7968-4abb-bf46-de10d7f4859f&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;identifier_type&amp;#34;: &amp;#34;38839128&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;identifier_type_name&amp;#34;: &amp;#34;National ID&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;identifier_type_uuid&amp;#34;: &amp;#34;000f85aa-a460-46d1-87be-daabe7bd9d99&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;identifier_type&amp;#34;: &amp;#34;1271891&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;identifier_type_name&amp;#34;: &amp;#34;Clinic Number&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;observation&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;1710^CLIENT CONSENTED^99DCT&amp;#34;: &amp;#34;1065^Yes^99DCT&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;1542^OCCUPATION^99DCT&amp;#34;: &amp;#34;1538^Farmer^99DCT&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;discriminator&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;discriminator&amp;#34;: &amp;#34;registration&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>&lt;strong>Queueing&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>This step involves adding a transformed payload, now objects, to a queue. This is important because it helps to capture errors that occur during processing and the data can be corrected and re-queued. A queue will have both registration and encounter objects.&lt;/p>
&lt;p>You need to define a queue processor that will be consuming the queue and push each object to the rightful handler.&lt;/p>
&lt;ol start="3">
&lt;li>&lt;strong>Data handlers&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>Data handlers are responsible for persisting the data in OpenMRS. The handler can also be used to trigger feedback to submitters of the data (this can be a brief summary such as number of synced documents and success rate). The following steps apply:&lt;/p>
&lt;ul>
&lt;li>Define handlers for each object type (e.g. person / patient, trace report.&lt;/li>
&lt;li>Create a scheduler to start the queue processor above. The queue processor shall get to the handler for processing.&lt;/li>
&lt;li>Closely monitor the errors log for prompt action where necessary.&lt;/li>
&lt;/ul>
&lt;p>You may want to further configure a service that relays feedback to the CHT. Feel free to utilize in-app text messages, which can be triggered via the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#post-apisms" target="_blank" rel="noopener">sms endpoint&lt;/a> of CHT. The health workers would receive these feedback messages on their phones as well as access via the Messages tab in-app.&lt;/p>
&lt;h4>Error Handling&lt;span class="hx-absolute -hx-mt-20" id="error-handling">&lt;/span>
&lt;a href="#error-handling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Exceptions thrown during processing can be added to a queue and presented on an interface for action. The erring data may then be re-queued. You need to consider what works best at this point. For convenience, it makes sense for a backend user to resolve such errors.&lt;/p>
&lt;p>Sample OpenMRS handler scripts include:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://github.com/PIH/openmrs-module-emr" target="_blank" rel="noopener">PIH Malawi&amp;rsquo;s EMR handler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/palladiumkenya/openmrs-module-afyastat" target="_blank" rel="noopener">KenyaEMR handler&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3>OpenMRS to CHT&lt;span class="hx-absolute -hx-mt-20" id="openmrs-to-cht">&lt;/span>
&lt;a href="#openmrs-to-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Scheduled tasks&lt;span class="hx-absolute -hx-mt-20" id="scheduled-tasks">&lt;/span>
&lt;a href="#scheduled-tasks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>This includes defining a scheduler and a task that will be compiling the payload to be pushed to the CHT on specific intervals. Remember that the CHT expects data in JSON format.
The CHT API can be used to process incoming reports. For custom payloads, the &lt;a href="https://docs.couchdb.org/en/stable/api/database/bulk-api.html#db-bulk-docs" target="_blank" rel="noopener">{db}/bulk_docs&lt;/a> can be utilized to save multiple payloads concurrent&lt;/p>
&lt;h4>Listener script in the CHT&lt;span class="hx-absolute -hx-mt-20" id="listener-script-in-the-cht">&lt;/span>
&lt;a href="#listener-script-in-the-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>This is a service that would help shift information in the CHT &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/hierarchy/" >hierarchy&lt;/a> to support the usecases of interest. Through {db}/bulk_docs, OpenMRS posts a data record that contains data objects such as observations and contact list (if available) details. The service obtains the record, and unpacks it into a contact in CHT and parented under the correct hierarchy level based on the metadata received from OpenMRS. The script should:&lt;/p>
&lt;ol>
&lt;li>Do patient matching to avoid duplicate details. Querying can be achieved via available endpoints such as &lt;code>contacts_by_phone&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#get-apiv1contacts-by-phone" >endpoint&lt;/a> and &lt;code>hydrate&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#get-apiv1hydrate" >endpoint&lt;/a> among others/&lt;/li>
&lt;li>If the incoming data matches what exists, update the contact found in CHT.&lt;/li>
&lt;li>Process all reports payloads and append them to the linked contact’s profile. Note that the &lt;code>&amp;lt;report type&amp;gt;&lt;/code> xml or JSON form has to be defined in the CHT.&lt;/li>
&lt;li>Delete the payload that is received from OpenMRS after it is processed since it will have been used to create CHT data structures.&lt;/li>
&lt;li>Monitor and log failed transactions&lt;/li>
&lt;/ol>
&lt;p>Once you have configured the above for data exchange, the data flow will be like this:&lt;/p>
&lt;figure>&lt;a href="cht-openmrs.jpeg">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/openmrs/cht-openmrs.jpeg"
alt="CHT - OpenMRS Data Flow">&lt;/a>&lt;figcaption>
&lt;p>CHT - OpenMRS Data Flow&lt;/p>
&lt;/figcaption>
&lt;/figure></description></item><item><title>RapidPro</title><link>https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/</guid><description>
&lt;p>&lt;a href="https://app.rapidpro.io/" target="_blank" rel="noopener">RapidPro&lt;/a> is the open-source platform that powers &lt;a href="https://textit.com/" target="_blank" rel="noopener">TextIt&lt;/a>, developed by UNICEF and Nyaruka. RapidPro allows you to visually build messaging workflows for mobile-based services. The flows support a variety of technologies such as: SMS, USSD, IVR, Telegram, Facebook Messenger, and WhatsApp. Review RapidPro’s documentation to familiarize yourself with various components that include the &lt;a href="https://rapidpro.io/api/v2/" target="_blank" rel="noopener">API&lt;/a>. Before you embark on designing an integrated RapidPro/CHT workflow, you should start by understanding the needs of your users, identifying a problem to solve, and establishing goals. While an integrated RapidPro/CHT workflow can open up many powerful and personalized messaging capabilities, introducing an additional technology solution does come with complexities and cost. A good way to mitigate some of the complexities of setting up and &lt;a href="https://rapidpro.github.io/rapidpro/docs/hosting/" target="_blank" rel="noopener">hosting&lt;/a> RapidPro yourself is to utilize a SaaS solution such as &lt;a href="https://textit.in/" target="_blank" rel="noopener">TextIt&lt;/a>. TextIt offers transparent per message &lt;a href="https://textit.com/pricing" target="_blank" rel="noopener">pricing&lt;/a> and free credits to start off.&lt;/p>
&lt;p>To learn more about the platform, check out RapidPro on &lt;a href="https://rapidpro.github.io/rapidpro/" target="_blank" rel="noopener">GitHub&lt;/a> or join their Google &lt;a href="https://groups.google.com/g/rapidpro" target="_blank" rel="noopener">Group&lt;/a>.&lt;/p>
&lt;p>Coming up with a design to accommodate user needs requires a detailed understanding of the capabilities of both systems and conceptually where it makes sense to introduce interactions between them. Below we introduce some of the key concepts in RapidPro, but to learn more you can have a look at their &lt;a href="https://rapidpro.github.io/rapidpro/docs/" target="_blank" rel="noopener">documentation&lt;/a>.&lt;/p>
&lt;h2>Overview&lt;span class="hx-absolute -hx-mt-20" id="overview">&lt;/span>
&lt;a href="#overview" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>CHT-based &lt;a href="https://docs.communityhealthtoolkit.org/building/workflows/workflows-overview/#sms-messaging" >SMS workflows&lt;/a> can be configured to support registering of new patients or pregnancies, recording outcomes of visits, confirmation via auto-responses, and scheduling reminders. Some projects are designed entirely around SMS workflows. The CHT also supports person to person SMS &lt;a href="https://docs.communityhealthtoolkit.org/building/messaging/" >messaging&lt;/a> from the Messages tab.&lt;/p>
&lt;p>For more complex messaging workflows or to utilize other messaging platforms, you can design workflows that leverage the functionality of RapidPro and the CHT together. This enables semi-automated, direct to patient approaches to health assessments and care coordination at the community level.&lt;/p>
&lt;h2>Workflows&lt;span class="hx-absolute -hx-mt-20" id="workflows">&lt;/span>
&lt;a href="#workflows" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Integrated RapidPro/CHT workflows are very flexible and leverage the full functionality of each application; You configure RapidPro directly in RapidPro, and configure the CHT in the CHT and the two systems communicate with each other through APIs and &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/" >Outbound push&lt;/a>. With this architecture, you are not limited to a subset of functionality within either application.&lt;/p>
&lt;p>A simple RapidPro/CHT integration might include triggering an interactive SMS messaging flow in RapidPro whenever a new patient is registered in the CHT and then storing the responses of that messaging flow in the CHT. You could then conditionally trigger a &lt;a href="https://docs.communityhealthtoolkit.org/building/tasks/" >Task&lt;/a> for a health worker in the CHT based on the patient responses from the RapidPro flow.&lt;/p>
&lt;p>App builders have built and deployed a number of interactive messaging workflows that integrate RapidPro and the CHT already, see below for a few examples.&lt;/p>
&lt;h3>Contact Tracing&lt;span class="hx-absolute -hx-mt-20" id="contact-tracing">&lt;/span>
&lt;a href="#contact-tracing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The &lt;a href="https://docs.communityhealthtoolkit.org/reference-apps/contact-tracing/#workflow-example" >COVID-19 Contact Tracing app&lt;/a> uses RapidPro to send messages to quarantined COVID-19 patients. Messages are sent to the patients daily asking whether or not they developed new symptoms. If so, a health worker will be notified by SMS and receive a CHT task. All responses to the RapidPro workflow are recorded in the CHT and can be queried in analytics.&lt;/p>
&lt;h3>Remote Training&lt;span class="hx-absolute -hx-mt-20" id="remote-training">&lt;/span>
&lt;a href="#remote-training" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The &lt;a href="https://docs.communityhealthtoolkit.org/reference-apps/training/#remote-training-by-sms" >Remote Training by SMS app&lt;/a> uses RapidPro to train health workers on Antenatal Care in the language of their choice. If the health worker answers a training question incorrectly, a task can be created for their supervisor to follow up with them.&lt;/p>
&lt;h3>CHW Symptom and Mental Health Checks&lt;span class="hx-absolute -hx-mt-20" id="chw-symptom-and-mental-health-checks">&lt;/span>
&lt;a href="#chw-symptom-and-mental-health-checks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The &lt;a href="https://docs.google.com/document/d/19F6vOCNFKQnSyREiaBnryUmre20s5QZzYe0hWuWn-0k/edit" target="_blank" rel="noopener">CHW Symptom and Mental Health Checks app&lt;/a> is used to proactively check in with health workers to screen for COVID-19 symptoms and/or the need for psychosocial counseling.&lt;/p>
&lt;h2>RapidPro Concepts&lt;span class="hx-absolute -hx-mt-20" id="rapidpro-concepts">&lt;/span>
&lt;a href="#rapidpro-concepts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Before designing your integrated RapidPro/CHT workflow, it&amp;rsquo;s important to understand a couple key functional concepts in RapidPro: &lt;em>Flows&lt;/em>, &lt;em>Campaigns&lt;/em>, and &lt;em>Triggers&lt;/em>.&lt;/p>
&lt;h3>Flows&lt;span class="hx-absolute -hx-mt-20" id="flows">&lt;/span>
&lt;a href="#flows" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;figure class="right col-7 col-lg-5">&lt;a href="flow-concept.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/flow-concept.png">&lt;/a>
&lt;/figure>
&lt;p>&lt;a href="https://help.nyaruka.com/en/article/introduction-to-flows-1vmh15z/" target="_blank" rel="noopener">Flows&lt;/a> are a series of steps you link together visually to define the interactions users will have. At any point in the flow, you can trigger actions such as sending an SMS, email, or calling external APIs. Flows are the base for RapidPro&amp;rsquo;s other features.&lt;/p>
&lt;p>&lt;em>Use Case Example:&lt;/em> Send an SMS to a patient asking if they are experiencing any new symptoms today. If so, let the patient know that a CHW will contact them. If not, let the patient know that they will receive another check-in message in three days and to contact their CHW if any new symptoms develop before then.&lt;/p>
&lt;p>&lt;em>Additional Resource:&lt;/em> &lt;a href="https://youtu.be/WcFhpSFhFug" target="_blank" rel="noopener">How to Build a RapidPro Flow&lt;/a>.&lt;/p>
&lt;h3>Campaigns&lt;span class="hx-absolute -hx-mt-20" id="campaigns">&lt;/span>
&lt;a href="#campaigns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;figure class="right col-5">&lt;a href="campaign-concept.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/campaign-concept.png">&lt;/a>
&lt;/figure>
&lt;p>&lt;a href="https://help.nyaruka.com/en/article/introduction-to-campaigns-1d71057/" target="_blank" rel="noopener">Campaigns&lt;/a> allow you to schedule messages and flows around a date unique to each contact in a group, like a delivery date or registration date. You can add any number of &lt;a href="https://help.nyaruka.com/en/article/adding-a-campaign-event-1amovrz/" target="_blank" rel="noopener">Events&lt;/a> to the Campaign.&lt;/p>
&lt;p>&lt;em>Use Case Example:&lt;/em> Send a daily check-in message to quarantined patients for 14 days to see if they have developed any symptoms.&lt;/p>
&lt;p>&lt;em>Additional Resources:&lt;/em> &lt;a href="https://youtu.be/3tJPOoHxJXE" target="_blank" rel="noopener">Creating a Campaign&lt;/a>&lt;/p>
&lt;h3>Triggers&lt;span class="hx-absolute -hx-mt-20" id="triggers">&lt;/span>
&lt;a href="#triggers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;figure class="right col-5">&lt;a href="trigger-concept.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/trigger-concept.png">&lt;/a>
&lt;/figure>
&lt;p>&lt;a href="https://help.nyaruka.com/en/article/introduction-to-triggers-1pm94xb/" target="_blank" rel="noopener">Triggers&lt;/a> allow you to control how or when a Flow begins. A Trigger can be a keyword received in a text, a point in time, a missed call, or even a follow to a Twitter handle.&lt;/p>
&lt;p>&lt;em>Use Case Example:&lt;/em> Start a health assessment Flow whenever a person sends the text &lt;code>assessment&lt;/code> to a specific short code.&lt;/p>
&lt;p>&lt;em>Additional Resources:&lt;/em> &lt;a href="https://help.nyaruka.com/en/article/creating-a-keyword-trigger-that-starts-a-flow-bpmhw0/" target="_blank" rel="noopener">Creating a Keyword Trigger that starts a Flow&lt;/a>&lt;/p>
&lt;h2>Workflow Design&lt;span class="hx-absolute -hx-mt-20" id="workflow-design">&lt;/span>
&lt;a href="#workflow-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Designing an integrated workflow between multiple systems is more of an art than a science. Drafting a sequence diagram (below) is a good first step. When drafting your sequence diagram, it is useful to consider a few key integration touchpoints that are common across many integrated workflows.&lt;/p>
&lt;ol>
&lt;li>One system &lt;strong>initiates or triggers an action in&lt;/strong> the other system&lt;/li>
&lt;li>One system needs to &lt;strong>get information from&lt;/strong> the other system&lt;/li>
&lt;li>One system wants to &lt;strong>store or update data in&lt;/strong> the other system&lt;/li>
&lt;/ol>
&lt;h3>Sequence Diagrams&lt;span class="hx-absolute -hx-mt-20" id="sequence-diagrams">&lt;/span>
&lt;a href="#sequence-diagrams" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>A &lt;em>sequence diagram&lt;/em> will help you identify the various actors in a given workflow and what the flow of data will look like. Below is an overview and example diagram for a patient initiated triage and feedback workflow.&lt;/p>
&lt;ol>
&lt;li>Patient triggers a RapidPro flow by sending a message to a short code&lt;/li>
&lt;li>Using the phone number of the patient, RapidPro requests information from the CHT&lt;/li>
&lt;li>The CHT responds with the patient&amp;rsquo;s name and other details&lt;/li>
&lt;li>RapidPro sends personalized messages to conduct triage for the patient&lt;/li>
&lt;li>RapidPro determines the outcome&lt;/li>
&lt;li>RapidPro sends the outcome to the patient via SMS and posts the results to the CHT&lt;/li>
&lt;li>If the patient needs to be followed-up with, the CHT creates a task for the appropriate CHW&lt;/li>
&lt;li>Once the CHW completes that task, the CHT initiates the Feedback Flow in RapidPro&lt;/li>
&lt;li>RapidPro logic records feedback via SMS from the patient&lt;/li>
&lt;li>The results of the feedback flow are saved in the CHT&lt;/li>
&lt;/ol>
&lt;figure>&lt;a href="sequence-diagram.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/sequence-diagram.png"
alt="Sequence">&lt;/a>&lt;figcaption>
&lt;p>Sequence&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h2>Configuration&lt;span class="hx-absolute -hx-mt-20" id="configuration">&lt;/span>
&lt;a href="#configuration" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The information below focuses on specific interactions between RapidPro and the CHT, it does not cover RapidPro specific configuration, consult RapidPro documentation and resources for that. Also, the examples and code snippets below are using TextIt, the hosted RapidPro service mentioned above.&lt;/p>
&lt;h3>Create RapidPro user in CHT&lt;span class="hx-absolute -hx-mt-20" id="create-rapidpro-user-in-cht">&lt;/span>
&lt;a href="#create-rapidpro-user-in-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>For RapidPro to communicate with the CHT, you need to create a &lt;a href="https://docs.communityhealthtoolkit.org/building/concepts/users/" >User&lt;/a> in the CHT that will be used by RapidPro when calling the CHT’s APIs. This can be done from the &lt;a href="https://docs.communityhealthtoolkit.org/building/admin/" >App Management&lt;/a> page in the CHT. When adding the user in the CHT, be sure to select the &lt;code>Gateway - Limited access user for Medic Gateway&lt;/code> &lt;a href="https://docs.communityhealthtoolkit.org/building/concepts/users/#roles" >Role&lt;/a>.&lt;/p>
&lt;h3>Globals&lt;span class="hx-absolute -hx-mt-20" id="globals">&lt;/span>
&lt;a href="#globals" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://help.nyaruka.com/en/article/global-variables-km8la6/" target="_blank" rel="noopener">Globals&lt;/a> are shared values that can be referenced in flows, as well as broadcasts and campaigns, within your account referenced by &lt;code>@globals.value_name&lt;/code>. They allow you to create a value once and use it repeatedly without having to reenter the value. Likewise, globals make updating a shared value much easier. Rather than manually changing a value everywhere it&amp;rsquo;s used in your account, simply update the value found in your &lt;code>Globals&lt;/code> page.&lt;/p>
&lt;figure>&lt;a href="globals.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/globals.png"
alt="Globals">&lt;/a>&lt;figcaption>
&lt;p>Globals&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Once you have configured a Global value, you can easily use it in your flows like this:&lt;/p>
&lt;figure>&lt;a href="globals-usage.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/globals-usage.png"
alt="Globals-Usage">&lt;/a>&lt;figcaption>
&lt;p>Globals-Usage&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h3>Start RapidPro Flow from CHT&lt;span class="hx-absolute -hx-mt-20" id="start-rapidpro-flow-from-cht">&lt;/span>
&lt;a href="#start-rapidpro-flow-from-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>One of the most common activities you&amp;rsquo;ll want to do is trigger a Flow in RapidPro based on something that occurred in the CHT. For example&amp;hellip; whenever a specific form is submitted in the CHT with some conditional value, start a flow in RapidPro. To do this, you will use the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/outbound/" >Outbound&lt;/a> feature in the CHT, invoking the &lt;a href="https://rapidpro.io/api/v2/explorer/" target="_blank" rel="noopener">Flow Starts Endpoint&lt;/a> in RapidPro.&lt;/p>
&lt;p>Below is an example &lt;code>outbound&lt;/code> config in the CHT called &lt;code>textit-self-quarantine&lt;/code> that will trigger a flow in RapidPro whenever a &lt;code>covid_trace_follow_up&lt;/code> form is submitted in the CHT where &lt;code>symptom = no&lt;/code>. It will also pass an extra date value for &lt;code>self_quarantine_enrollment&lt;/code>.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JSON" data-lang="JSON">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;textit-self-quarantine&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;relevant_to&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;doc.type === &amp;#39;data_record&amp;#39; &amp;amp;&amp;amp; doc.form === &amp;#39;covid_trace_follow_up&amp;#39; &amp;amp;&amp;amp; doc.fields.trace.symptom === &amp;#39;no&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;destination&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;base_url&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;https://textit.in&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;value_key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;textit.in&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/api/v2/flow_starts.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mapping&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;flow&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;expr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;UUID of Flow in RapidPro&amp;gt;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;urns&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;expr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;[ &amp;#39;tel:&amp;#39; + doc.fields.inputs.contact.phone ]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;optional&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extra.self_quarantine_enrollment&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;expr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;new Date(doc.reported_date).getDate()+&amp;#39;-&amp;#39;+ (new Date(doc.reported_date).getMonth()+1) +&amp;#39;-&amp;#39; + new Date(doc.reported_date).getFullYear()+ &amp;#39; &amp;#39; + new Date(doc.reported_date).getHours() + &amp;#39;:&amp;#39; + new Date(doc.reported_date).getMinutes()&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;optional&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extra.name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;doc.fields.inputs.contact.surname&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Save flow data to the CHT&lt;span class="hx-absolute -hx-mt-20" id="save-flow-data-to-the-cht">&lt;/span>
&lt;a href="#save-flow-data-to-the-cht" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Once a user has completed a Flow in RapidPro, it is likely you will want to record some of the information collected in the RapidPro flow back in the CHT. This can be achieved by utilizing the &lt;a href="https://help.nyaruka.com/en/article/calling-a-webhook-adicxq/" target="_blank" rel="noopener">Call Webhook&lt;/a> action in RapidPro.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Step&lt;/th>
&lt;th>Application&lt;/th>
&lt;th>Config step&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>CHT&lt;/td>
&lt;td>Configure a &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/app-settings/forms/" >JSON Form&lt;/a> that includes the fields from RapidPro you want to send to the CHT.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>RapidPro&lt;/td>
&lt;td>Add a &lt;em>Call a Webhook&lt;/em> node.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>RapidPro&lt;/td>
&lt;td>&lt;code>POST&lt;/code> to the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#post-apiv2records" >records endpoint&lt;/a> in the CHT. If you used the Global value mentioned above, the POST will look something like &lt;code>@globals.api/v2/records&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>RapidPro&lt;/td>
&lt;td>Set a &lt;code>Result Name&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>RapidPro&lt;/td>
&lt;td>Configure HTTP Headers to be &lt;code>Content-Type&lt;/code> -&amp;gt; &lt;code>application/json&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td>RapidPro&lt;/td>
&lt;td>Configure the &lt;code>POST Body&lt;/code> (see example below)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;figure>&lt;a href="post-to-cht.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/rapidpro/post-to-cht.png">&lt;/a>
&lt;/figure>
&lt;h3>Look up CHT data from RapidPro&lt;span class="hx-absolute -hx-mt-20" id="look-up-cht-data-from-rapidpro">&lt;/span>
&lt;a href="#look-up-cht-data-from-rapidpro" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Another common action you will likely need to perform in RapidPro is getting information from the CHT about a user or patient based on their phone number. You can use the &lt;a href="https://docs.communityhealthtoolkit.org/building/reference/api/#contacts-by-phone" >contacts-by-phone&lt;/a> API to get fully hydrated contacts associated to that phone number.&lt;/p>
&lt;h2>Best Practices&lt;span class="hx-absolute -hx-mt-20" id="best-practices">&lt;/span>
&lt;a href="#best-practices" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Messages&lt;span class="hx-absolute -hx-mt-20" id="messages">&lt;/span>
&lt;a href="#messages" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>If language options are included allow users to select their preference before beginning the flow&lt;/li>
&lt;li>Make sure the language and terminology of your messages are appropriate for the audience&lt;/li>
&lt;li>Use a personalized welcome message before asking users to take actions&lt;/li>
&lt;li>Keep content brief and relevant to the topic as to not overload the user&lt;/li>
&lt;li>Make your response requests and calls-to-action clear&lt;/li>
&lt;li>Be cognizant of form collisions during assessments (ex. “0=no, 1=yes” if those numbers may also reference workflow codes, or “N=no” if “N” is the code to create a new person)&lt;/li>
&lt;li>Use standards in logic where possible (ex. The non-zero value is true; 0=false, 1=true, 0=no, 1=yes)&lt;/li>
&lt;li>Sign the first message with the partner’s name, or MOH for visibility&lt;/li>
&lt;li>Consider providing an option to revisit information again (ex. Text 123 to this number to receive these messages again)&lt;/li>
&lt;/ol>
&lt;h3>Workspaces&lt;span class="hx-absolute -hx-mt-20" id="workspaces">&lt;/span>
&lt;a href="#workspaces" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>A workspace contains models for a set of RapidPro users, and it also identifies a company or project. Set up &lt;code>staging&lt;/code> and &lt;code>production&lt;/code> workspaces so that builds, tests and updates can proceed safely before and after deployment.&lt;/p>
&lt;h3>SMS Messaging Channels&lt;span class="hx-absolute -hx-mt-20" id="sms-messaging-channels">&lt;/span>
&lt;a href="#sms-messaging-channels" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>RapidPro supports both Android channels and SMS aggregators.&lt;/p>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Note&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>Android channels have a messaging limit of 330 outgoing messages per hour.&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Ensure that you install the maximum number of SMS packs (available in the RapidPro SMS Channel Android app) and follow these best practices when using Android channels:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Prevent the Android channel from going to sleep.
Some steps to achieve this are available on &lt;a href="https://dontkillmyapp.com" target="_blank" rel="noopener">dontkillmyapp&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Do not optimize battery usage.&lt;/li>
&lt;li>Make sure that the app is on the list of Apps that will not be put to sleep.&lt;/li>
&lt;li>Set &lt;code>Background Limit&lt;/code> to Standard Limit and confirm that the RapidPro app has the toggle enabled in &amp;ldquo;Background Check&amp;rdquo; and all of the apps have &amp;ldquo;App Standby state: ACTIVE&amp;rdquo; in Standby apps.&lt;/li>
&lt;li>Keep the phone plugged into a power source.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Automatically wake up the phone.&lt;/p>
&lt;ul>
&lt;li>The RapidPro system uses Google Cloud Messaging which wakes up the phone whenever a message is sent. Install an APK that makes the channel relay messages as soon as RapidPro emits.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Alerts for when things go wrong.&lt;/p>
&lt;ul>
&lt;li>Send monitoring emails and alert various parties when the Android Channel goes to sleep or becomes unavailable. This can be done from the channel&amp;rsquo;s management page under &lt;code>Alert Email&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Android channels can be &lt;a href="http://web.archive.org/web/20220126134411/https://help.nyaruka.com/en/article/using-a-bulk-sender-sk27hz/" target="_blank" rel="noopener">used with a bulk sender&lt;/a> to get past the 330 outgoing messages per hour.&lt;/p>
&lt;p>Use shared or dedicated shortcodes for SMS messaging. Dedicated shortcodes are preferred because recipients do not have to include the keyword with each response submitted. Shortcode procurement can be a lengthy process, so make arrangements for the shortcode in advance. It is possible but inconvenient to migrate to a shortcode after deployment.&lt;/p>
&lt;p>It is recommended that SMS costs be zero-rated so that respondents do not incur charges. This motivates them to respond.&lt;/p>
&lt;h3>Flow design&lt;span class="hx-absolute -hx-mt-20" id="flow-design">&lt;/span>
&lt;a href="#flow-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Tips and best practices are listed below:&lt;/p>
&lt;ul>
&lt;li>If possible, have less than 10 questions. Long surveys may either lead to low completion rates or rushed responses that affects the data quality.&lt;/li>
&lt;li>Close ended questions are better and easier to respond and handle in RapidPro since respondents only have to send a number or letter such as 1 for “Yes”, 2 for “No”.&lt;/li>
&lt;li>Avoid sensitive questions since privacy cannot be guaranteed over SMS and where it is common to share phones.&lt;/li>
&lt;li>Include intro and outro messages. Intro messages serve the purpose of giving the survey details such as the background of the survey, the number of questions, data protection, whether there shall be follow up, SMS billing, etc. Outro messages are helpful to notify respondents that they survey is over and commonly include thank you notes.&lt;/li>
&lt;li>Include questions that give the respondent an opportunity to opt-in or out of the survey. If they opt out, do not send a follow-up text.&lt;/li>
&lt;li>Keep it short, to the size of one SMS (160 characters). Longer messages will be split and may not display well on the recipients’ devices since Mobile Network Operators (MNOs) cannot guarantee that the multi-parts shall be delivered in the desired order. Retain the same message length as you localize to multiple languages. Truncate appropriately if long contact names included in the message push the length beyond the limit.&lt;/li>
&lt;/ul>
&lt;h3>Flow programming&lt;span class="hx-absolute -hx-mt-20" id="flow-programming">&lt;/span>
&lt;a href="#flow-programming" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Use skip logic to ask relevant questions only. For example, number of children only if they have children.&lt;/li>
&lt;li>Automate error messages to validate responses. For example, &lt;code>You submitted an invalid response. Reply 1 for “Yes”, 2 for “No”&lt;/code>. These can be customized.&lt;/li>
&lt;li>Reduce unnecessary messaging by using reminders and follow-up messages selectively on respondents by first differentiating those that completed a flow versus those that did not.&lt;/li>
&lt;li>Customize messages as much as possible by pre-populating information already known such as name, to target respondents, especially when phones are shared among clients.&lt;/li>
&lt;li>Translate all messages, especially when deploying in a multi-lingual environment. This ensures that respondents fully understand the survey in their language.&lt;/li>
&lt;li>Beware of the timing of the surveys that directly affects response rates. From experience, sending questions when respondents are busy with their errands during the day ultimately leads to low response rates as opposed to evenings when they are done for the day.&lt;/li>
&lt;li>Make sure you handle unsolicited responses by redirecting such to, for example, a flow that eventually alerts concerned individuals such as reports of an outbreak.&lt;/li>
&lt;li>Use &lt;a href="https://help.nyaruka.com/en/article/adding-timeouts-to-a-flow-1e2oodi/" target="_blank" rel="noopener">timeouts&lt;/a> or &lt;a href="https://web.archive.org/web/20210927110029/https://blog.textit.com/feature-update-add-timeouts-pauses-to-flows" target="_blank" rel="noopener">pauses&lt;/a> to send automatic messages after a period of inactivity during a survey. This helps nudge the respondents to complete their flows.&lt;/li>
&lt;/ul>
&lt;h3>Configuration&lt;span class="hx-absolute -hx-mt-20" id="configuration-1">&lt;/span>
&lt;a href="#configuration-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Persist a unique identifier for each respondent entering the flows. This identifier shall be used to link flow runs to the recipients to make data analysis smooth.&lt;/li>
&lt;li>Use consistent language and message design patterns to maintain a consistent experience and conversation. For example, if including a contact name at the beginning of a message, keep it that way for all messages including the localized messages.&lt;/li>
&lt;li>Be mindful of when you save data back to the CHT. This should happen at major milestones in a flow, for example, end of a flow or before sending a payload to an API endpoint.&lt;/li>
&lt;li>Use &lt;code>globals&lt;/code>, shared values that can be referenced inflows, as well as broadcasts and campaigns, within your account referenced by &lt;code>@globals.value_name&lt;/code>. This prevents re-entry of values in various components and allows flows to be shared easily in staging and production environments.&lt;/li>
&lt;li>Beware of concurrency that is not supported in RapidPro. Concurrency refers to a situation whereby one contact participates in more than one flow at the same time. Whenever this happens, the former flow shall be interrupted in favor of the latter. This can result in respondents exiting flows before completion, which is a confusing user experience and results in poor survey data. A main flow that spins up individual flows may be useful to consider.&lt;/li>
&lt;/ul>
&lt;h3>Testing&lt;span class="hx-absolute -hx-mt-20" id="testing">&lt;/span>
&lt;a href="#testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Testing includes manual and scripted.&lt;/p>
&lt;p>&lt;em>Manual testing&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Telegram is an effective, free, convenient tool for testing that is great for developers and quick testing.&lt;/li>
&lt;li>Prior to release, it is crucial that you test the workflow as close to production as possible. Use the production messaging channels, to especially check messaging fidelity.&lt;/li>
&lt;li>It is recommended to run a pilot prior to scaling a deployment. Remember, this shall expose the flows to real respondents and be helpful towards uncovering details such as text display among others.&lt;/li>
&lt;li>In order to prevent breakages in flows, run full end-to-end tests as edits/changes can have unpredictable impacts. Check that the entire flow is not impacted by the change prior to releasing in production.&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Scripted testing&lt;/em>&lt;/p>
&lt;p>These tests cover the parts that are inaccessible via manual tests. They include units that test individual components and end-to-end tests that test a flow from start to end. As a best practice, the following test pattern using the &lt;a href="http://docs.communityhealthtoolkit.org/cht-conf-test-harness/" target="_blank" rel="noopener">cht-conf-test-harness&lt;/a> is recommended:&lt;/p>
&lt;ul>
&lt;li>Create contact doc via cht-conf-test-harness&lt;/li>
&lt;li>PUT docs into localhost API&lt;/li>
&lt;li>Trigger RapidPro flow&lt;/li>
&lt;li>Wait for a RapidPro flow to complete&lt;/li>
&lt;li>Fetch state of contact in RapidPro&lt;/li>
&lt;li>Wait for document to be created in API&lt;/li>
&lt;li>Inject document into cht-conf-test-harness&lt;/li>
&lt;li>Mock passage of time to test task behavior&lt;/li>
&lt;li>One e2e test per production scenario&lt;/li>
&lt;/ul>
&lt;h3>Deployment&lt;span class="hx-absolute -hx-mt-20" id="deployment">&lt;/span>
&lt;a href="#deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Make sure all your flows are in source control. For every change, no matter how small (fixing a typo, etc), at the very least, document and commit the JSON for the flows to Github. This makes flows restorable, auditable, and releasable across environments&lt;/li>
&lt;li>Use an automated deployment process when pushing changes to an instance - either staging or production. A CI/CD reduces manual errors and ensures your production state is tested and reproducible.&lt;/li>
&lt;li>Remember to set up the &lt;a href="https://github.com/medic/rapidpro2pg" target="_blank" rel="noopener">rapidpro2pg&lt;/a> service to get your RapidPro workspace data over to the Postgres database.&lt;/li>
&lt;/ul>
&lt;h3>Monitoring&lt;span class="hx-absolute -hx-mt-20" id="monitoring">&lt;/span>
&lt;a href="#monitoring" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Make sure you are monitoring workflows. Are they finishing as expected? Are some workflows not being used? A useful feature is the “send email” action whenever an unexpected event occurs while the flow is in progress, for example, failure calling an API endpoint.
&lt;ul>
&lt;li>Include relevant parties in the monitoring notifications. For starters, a mailing group that includes all parties will do it without re-entry of each address of relevant recipients.&lt;/li>
&lt;li>Include notifications to respondents too, appropriate to the messaging method.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Check that your workspace has enough credits and ensure RapidPro email credit alerts are configured so that credits top ups are done promptly.&lt;/li>
&lt;/ul></description></item><item><title>OppiaMobile</title><link>https://docs.communityhealthtoolkit.org/building/integrations/oppia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/integrations/oppia/</guid><description>
&lt;h2>Overview&lt;span class="hx-absolute -hx-mt-20" id="overview">&lt;/span>
&lt;a href="#overview" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://digital-campus.org/oppiamobile" target="_blank" rel="noopener">OppiaMobile&lt;/a> is an open source mobile learning platform built by Digital Campus specially designed for delivering learning content, multimedia, and quizzes in low connectivity settings. All the content and activities can be accessed and used when no internet connection is available, and users can earn points and badges for completing activities and watching videos. To learn more about the platform, check out the &lt;a href="https://digital-campus.org/oppiamobile/developers" target="_blank" rel="noopener">overview&lt;/a>, OppiaMobile on &lt;a href="https://github.com/DigitalCampus" target="_blank" rel="noopener">Github&lt;/a>, and their &lt;a href="http://oppiamobile.readthedocs.io/en/latest" target="_blank" rel="noopener">documentation site&lt;/a>. You can also join the OppiaMobile &lt;a href="https://community.oppia-mobile.org" target="_blank" rel="noopener">Community Discussion Board&lt;/a>.&lt;/p>
&lt;p>This documentation describes how the CHT and OppiaMobile can integrate to provide a learning and care experience for community health workers and other health care providers. It demonstrates how both apps link to one another to provide a seamless user experience, describes features of both applications, and the required configuration adjustments.&lt;/p>
&lt;p>We provide a detailed example of the CHT&amp;lt;&amp;gt;OppiaMobile integration, including how to access the learning material, an overview of the functionalities within educational modules, and post-course assessment and supervisor support.&lt;/p>
&lt;h2>Features&lt;span class="hx-absolute -hx-mt-20" id="features">&lt;/span>
&lt;a href="#features" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>This integration leverages the &lt;strong>remote onboarding, task &amp;amp; scheduling, and target features&lt;/strong> of the CHT core framework with the &lt;strong>curated, multimedia educational content&lt;/strong> available via OppiaMobile’s learning platform.&lt;/p>
&lt;p>The CHT Core Framework &amp;amp; OppiaMobile integration currently supports the following capabilities and features:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/building/tasks/" >Task management&lt;/a> for notifications on new educational modules and software updates&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/reference-apps/training/" >Remote onboarding&lt;/a> to new apps, software features, and workflows when they are updated, without relying on face-to-face training&lt;/li>
&lt;li>Optimized multimedia content with links to educational modules powered by OppiaMobile&lt;/li>
&lt;li>Message and feedback options, to contact supervisors with questions and seek support&lt;/li>
&lt;li>&lt;a href="https://docs.communityhealthtoolkit.org/building/targets/targets-overview/#supervisor-view" >Supervisor visibility&lt;/a> into CHW progress for onboarding, learning, and care&lt;/li>
&lt;li>Hosting options for government-led, government-owned platforms&lt;/li>
&lt;/ul>
&lt;p>The training modules configuration consists of five main components:&lt;/p>
&lt;ul>
&lt;li>App Forms - Content that the user will interact with;&lt;/li>
&lt;li>Tasks - How forms are presented to the user: how and when the user accesses the forms for input;&lt;/li>
&lt;li>Targets - Shows the progress of the user;&lt;/li>
&lt;li>Contact Summary - Gives a highlight of the modules completed by the user;&lt;/li>
&lt;li>Context - Defines what forms are available to fill from the user’s profile, or available as tasks.&lt;/li>
&lt;/ul>
&lt;h3>App Forms&lt;span class="hx-absolute -hx-mt-20" id="app-forms">&lt;/span>
&lt;a href="#app-forms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The CHT application uses &lt;a href="https://docs.communityhealthtoolkit.org/building/forms/app/" >XLSForms&lt;/a> (app forms), which are a simplified method of setting up form configurations using Excel (or Libre Office Calc, Google sheets, etc). The forms contain the questions/content that the user will interact with, including &lt;a href="https://oppiamobile.readthedocs.io/en/latest/implementers/integration/launch_from_other_app.html" target="_blank" rel="noopener">web links&lt;/a> that enable the users to navigate from the CHT application to a specific course in OppiaMobile. App forms are typically created in the &lt;code>project-folder &amp;gt; forms &amp;gt; app&lt;/code> directory of a project. If the content requires a user to access any form of media, then a media folder for the specific form is created and named after the form. For example, to add video content for a form module_one.xlsx, save the video file to the following directory: &lt;code>project-folder &amp;gt; forms &amp;gt; app &amp;gt; module_one-media &amp;gt; video&lt;/code>. Once the forms are set up with content, the forms are converted to XForms, which are in xml format. To limit access of App Forms to certain contacts, an App Forms must have a properties file, which defines when and for whom certain forms should be accessed. Once configured, the forms are uploaded to an instance using the CHT configurer with the following commands, which upload specific forms and all forms respectively:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>cht --instance=&amp;lt;instance&amp;gt; convert-app-forms upload-app-forms -- &amp;lt;form1&amp;gt; &amp;lt;form2&amp;gt;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>or&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>cht --instance=&amp;lt;instance&amp;gt; convert-app-forms upload-app-forms&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The image below shows an example of an XLSForm configured for the Educational Modules:&lt;/p>
&lt;figure class="left col-12 col-lg-9">&lt;a href="xls-modules.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/oppia/xls-modules.png">&lt;/a>
&lt;/figure>
&lt;h3>Integration with OppiaMobile using weblinks&lt;span class="hx-absolute -hx-mt-20" id="integration-with-oppiamobile-using-weblinks">&lt;/span>
&lt;a href="#integration-with-oppiamobile-using-weblinks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The CHT application makes use of weblinks to direct the user to the OppiaMobile application. Each task in the CHT has a weblink configured to point to a specific course in OppiaMobile. The weblinks are configured in the forms as a button, which, when clicked or tapped, redirects the user accordingly, depending on the installation status of the OppiaMobile application and the respective course. The weblinks are configured in each of the XLSForms that are triggered by a selected task as illustrated in the image below:&lt;/p>
&lt;figure class="left col-12 col-lg-9">&lt;a href="weblink.png">&lt;img src="https://docs.communityhealthtoolkit.org/building/integrations/oppia/weblink.png">&lt;/a>
&lt;/figure>
&lt;br clear="all">
&lt;p>&lt;code>[&amp;lt;span style='background-color: #648af7; color:white; padding: 1em; text-decoration: none;border-radius: 8px; '&amp;gt;Open Oppia Mobile&amp;lt;/span&amp;gt;]&lt;/code> represents the button styling and label.&lt;/p>
&lt;p>&lt;code>https://staging.cha.oppia-mobile.org/view?course=introduction-to-covid-19&lt;/code> represents the weblink, where &lt;code>course=introduction-to-covid-19&lt;/code> specifies the name of the course to be launched in OppiaMobile as configured on Moodle.&lt;/p>
&lt;p>This image shows the outcome of the button configuration:&lt;/p>
&lt;div class="hextra-cards hx-mt-4 hx-gap-4 hx-grid not-prose" style="--hextra-cards-grid-cols: 3;">
&lt;a
class="hextra-card hx-group hx-flex hx-flex-col hx-justify-start hx-overflow-hidden hx-rounded-lg hx-border hx-border-gray-200 hx-text-current hx-no-underline dark:hx-shadow-none hover:hx-shadow-gray-100 dark:hover:hx-shadow-none hx-shadow-gray-100 active:hx-shadow-sm active:hx-shadow-gray-200 hx-transition-all hx-duration-200 hover:hx-border-gray-300 hx-bg-gray-100 hx-shadow dark:hx-border-neutral-700 dark:hx-bg-neutral-800 dark:hx-text-gray-50 hover:hx-shadow-lg dark:hover:hx-border-neutral-500 dark:hover:hx-bg-neutral-700"href="weblink-config-outcome.png"
>&lt;img
alt=""
class="hextra-card-image"
loading="lazy"
decoding="async"
src="https://docs.communityhealthtoolkit.org/building/integrations/oppia/weblink-config-outcome_hu_9e65671d95737a87.webp"
width="800"
height="1425"
/>&lt;span class="hextra-card-icon hx-flex hx-font-semibold hx-items-start hx-gap-2 hx-p-4 hx-text-gray-700 hover:hx-text-gray-900 dark:hx-text-neutral-200 dark:hover:hx-text-neutral-50">&lt;/span>&lt;/a>
&lt;/div>
&lt;h3>Tasks&lt;span class="hx-absolute -hx-mt-20" id="tasks">&lt;/span>
&lt;a href="#tasks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.communityhealthtoolkit.org/building/tasks/tasks-js/" >Tasks&lt;/a> are a set of actions available to users from the task tab. Selecting a task opens up a specific form that completes a workflow. Tasks are available within a given timeframe, after which they expire and the user is unable to view or do them. Tasks are defined as an array of objects in a tasks.js file under the project folder, with each task following the task schema. The required properties of a task include:&lt;/p>
&lt;ul>
&lt;li>Name - unique identifier of the task;&lt;/li>
&lt;li>Title - displays the workflow to be completed for a contact;&lt;/li>
&lt;li>AppliesTo - determines if the task is emitted per contact or report;&lt;/li>
&lt;li>ResolvedIf - conditions to mark a task as resolved/completed;&lt;/li>
&lt;li>Events - specifies the timeframe of a task;&lt;/li>
&lt;li>Actions - specifies the forms accessed by the user and allows injecting content from previous submissions.&lt;/li>
&lt;/ul>
&lt;p>On completing the task configuration, the following command is used to compile and upload the applications settings (tasks, targets, contact-summary, form properties):&lt;/p>
&lt;p>&lt;code>cht --instance=&amp;lt;instance&amp;gt; compile-app-settings upload-app-settings&lt;/code>&lt;/p>
&lt;p>The code snippet below illustrates an example of a task configured for the educational modules:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Community Health Academy&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;cha-module-one-oppia&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">contactLabel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Introduction To Covid-19&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">icon&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s1">&amp;#39;icon-cha&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesTo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;contacts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesToType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;person&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesIf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">role&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;chw&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parent&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;health_center&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">actions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">form&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;cha_module_one&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">events&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">Utils&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reported_date&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">start&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">end&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">25550&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resolvedIf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">report&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">report&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;cha_module_one&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Utils&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">report&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;assessment_passed&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;yes&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Targets&lt;span class="hx-absolute -hx-mt-20" id="targets">&lt;/span>
&lt;a href="#targets" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The users also have access to &lt;a href="https://docs.communityhealthtoolkit.org/building/targets/targets-js/" >targets&lt;/a>. Targets are a visual representation of the progress and goals of the user. These are app analytics accessed through the targets tab, where the user is able to view how many modules they have completed. Similar to tasks, targets are defined as an array of objects in a targets.js file under the project folder, with each target following the targets schema. The required properties of a target object include:&lt;/p>
&lt;ul>
&lt;li>Id - unique identifier of the target;&lt;/li>
&lt;li>Translation_key - title displayed for the widget;&lt;/li>
&lt;li>Type - type of numeric representation i.e. count/percentage;&lt;/li>
&lt;li>Goal - denotes how much the user should achieve;&lt;/li>
&lt;li>appliesTo - Determines whether a contact or a report is counted.&lt;/li>
&lt;/ul>
&lt;p>On completing the targets configuration, the following command is used to compile and upload the applications settings (tasks, targets, contact-summary, form properties):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>cht --instance=&amp;lt;instance&amp;gt; compile-app-settings upload-app-settings&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Below is a code snippet for a target configured for the educational modules:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;training-modules-completed&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;percent&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">icon&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;icon-cha&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">goal&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">context&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;user.role === &amp;#34;chw&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">translation_key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;targets.training_completion.title&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">subtitle_translation_key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;targets.all_time.subtitle&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesTo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;contacts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesToType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;person&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesIf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">getField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;role&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;chw&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">idType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;report&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passesIf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reports&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reports&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">aggregate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">date&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;now&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">emitCustom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">emit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">original&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">contact&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">assessmentModules&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;cha_module_one&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;cha_module_two&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;cha_module_three&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">eligibleModule&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">assessmentModules&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">assign&lt;/span>&lt;span class="p">({},&lt;/span> &lt;span class="nx">original&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">eligibleModule&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pass&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">validReports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">contact&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">report&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="nx">assessmentModules&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">includes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">report&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">report&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fields&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">assessment_passed&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;yes&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">report&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">validReports&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">assign&lt;/span>&lt;span class="p">({},&lt;/span> &lt;span class="nx">original&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">report&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pass&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">instance&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Contact Summary&lt;span class="hx-absolute -hx-mt-20" id="contact-summary">&lt;/span>
&lt;a href="#contact-summary" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>In addition to targets, the user is able to see which specific modules they have completed, and view upcoming tasks and other general information on their profile. The section containing this information is known as the &lt;a href="https://docs.communityhealthtoolkit.org/building/contact-summary/contact-summary-templated/" >contact summary&lt;/a>. The contact summary has 3 main outputs: cards, fields, and context. Contact summary is defined in the &lt;code>contact-summary.templated.js&lt;/code> file under the project folder.&lt;/p>
&lt;p>Cards are an array of objects which can be customized to group information viewed on a contact’s profile. The required properties of a card include:&lt;/p>
&lt;ul>
&lt;li>Label - title of the card;&lt;/li>
&lt;li>Fields - content of the card;
&lt;ul>
&lt;li>Field name- title/label of a field;&lt;/li>
&lt;li>Field value - value displayed for a field.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The code snippet below shows an example of a card configured for the educational modules:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">isCHW&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">getField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">contact&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;role&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;chw&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">hasCompletedModuleTraining&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">reports&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">reports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">report&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">report&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">form&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">report&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fields&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">assessment_passed&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;yes&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">hasCompletedModuleOne&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">hasCompletedModuleTraining&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cha_module_one&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">hasCompletedModuleTwo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">hasCompletedModuleTraining&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cha_module_two&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">hasCompletedModuleThree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">hasCompletedModuleTraining&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cha_module_three&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">cards&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;contact.profile.training&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesToType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;person&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">appliesIf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">isCHW&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fields&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">fields&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">completedModuleOne&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">hasCompletedModuleOne&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;Complete&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Incomplete&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">completedModuleTwo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">hasCompletedModuleTwo&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;Complete&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Incomplete&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">completedModuleThree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">hasCompletedModuleThree&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;Complete&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Incomplete&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fields&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="nx">icon&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;icon-cha&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Introduction To COVID-19&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">completedModuleOne&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="nx">icon&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;icon-cha&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;COVID Care&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">completedModuleTwo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="nx">icon&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;icon-cha&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">label&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;COVID Misinformation&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">completedModuleThree&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fields&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br clear="all">
&lt;p>This image shows the training card configured to show completion status of the educational modules:&lt;/p>
&lt;div class="hextra-cards hx-mt-4 hx-gap-4 hx-grid not-prose" style="--hextra-cards-grid-cols: 3;">
&lt;a
class="hextra-card hx-group hx-flex hx-flex-col hx-justify-start hx-overflow-hidden hx-rounded-lg hx-border hx-border-gray-200 hx-text-current hx-no-underline dark:hx-shadow-none hover:hx-shadow-gray-100 dark:hover:hx-shadow-none hx-shadow-gray-100 active:hx-shadow-sm active:hx-shadow-gray-200 hx-transition-all hx-duration-200 hover:hx-border-gray-300 hx-bg-gray-100 hx-shadow dark:hx-border-neutral-700 dark:hx-bg-neutral-800 dark:hx-text-gray-50 hover:hx-shadow-lg dark:hover:hx-border-neutral-500 dark:hover:hx-bg-neutral-700"href="status.png"
>&lt;img
alt=""
class="hextra-card-image"
loading="lazy"
decoding="async"
src="https://docs.communityhealthtoolkit.org/building/integrations/oppia/status_hu_ce588b489e1cb24d.webp"
width="800"
height="1425"
/>&lt;span class="hextra-card-icon hx-flex hx-font-semibold hx-items-start hx-gap-2 hx-p-4 hx-text-gray-700 hover:hx-text-gray-900 dark:hx-text-neutral-200 dark:hover:hx-text-neutral-50">&lt;/span>&lt;/a>
&lt;/div>
&lt;br clear="all">
&lt;p>Context provides information to App Forms, which are initiated from the contact&amp;rsquo;s profile page. To show an App Form on a contact’s profile, the form’s expression field in its properties file must evaluate to true for the contact. The context information from the profile is accessible as the variable &lt;code>summary&lt;/code>.&lt;/p>
&lt;p>The code snippet below shows the context variables that can be accessed in the app forms:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hasCompletedModuleOne&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hasCompletedModuleTwo&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hasCompletedModuleThree&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br clear="all">
&lt;p>The three variables &lt;code>hasCompletedModuleOne&lt;/code>, &lt;code>hasCompletedModuleTwo&lt;/code> and &lt;code>hasCompletedModuleThree&lt;/code> are used in the educational modules app forms to determine whether the user will access the forms through the care guide.&lt;/p>
&lt;p>The code snippet below shows an example of App Form properties, where the user can only access the form as a care guide if they have completed module one task. This is defined by the phrase &lt;code>summary.hasCompletedModuleOne&lt;/code> in the expression statement.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;icon&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;icon-person&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;context&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;person&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;place&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;expression&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;!contact || (contact.type === &amp;#39;person&amp;#39; &amp;amp;&amp;amp; user.parent.type === &amp;#39;health_center&amp;#39; &amp;amp;&amp;amp; user.role === &amp;#39;chw&amp;#39; &amp;amp;&amp;amp; contact.role === &amp;#39;chw&amp;#39; &amp;amp;&amp;amp; summary.hasCompletedModuleOne)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item></channel></rss>