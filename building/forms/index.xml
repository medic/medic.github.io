<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Forms on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/building/forms/</link><description>Recent content in Forms on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/forms/index.xml" rel="self" type="application/rss+xml"/><item><title>app</title><link>https://docs.communityhealthtoolkit.org/building/forms/app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/app/</guid><description>App forms are used for care guides within the web app, whether accessed in browser or via the Android app. When a user completes an app form, the contents are saved in the database with the type data_record. These docs are known in the app as Reports.
App forms are defined by the following files:
A XML form definition using a CHT-enhanced ODK XForm format A XLSForm form definition, easier to write and converts to the XForm (optional) Meta information in the {form_name}.</description></item><item><title>contact</title><link>https://docs.communityhealthtoolkit.org/building/forms/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/contact/</guid><description>Contact forms are used to create and edit contacts (persons and places). Each contact-type should ideally have two forms; one for creation, and another for editing.
These forms are stored in the forms/contact sub-folder of the project config directory. The naming convention used should be &amp;lt;contact_type_id-{create|edit}&amp;gt;.xlsx.
Form detailsSurvey sheetTo collect information about the contact, use a top-level group with the id of the contact_type as the name of the group (e.</description></item><item><title>collect</title><link>https://docs.communityhealthtoolkit.org/building/forms/collect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/collect/</guid><description>ODK XForms are used to render forms in the Medic Collect Android app. These forms cannot use any CHT-specific XForm notations. All Medic Collect forms are processed as SMS (even when submitted over a wifi) therefore a corresponding JSON form with matching fields is used to interpret the incoming report.
Collect forms must be in the forms/collect folder to be processed by cht-conf&amp;rsquo;s convert-collect-forms and upload-collect-forms actions. Once uploaded to the server, they can be downloaded by the Medic Collect app.</description></item><item><title>Setting Form Properties</title><link>https://docs.communityhealthtoolkit.org/building/forms/form-properties/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/form-properties/</guid><description>This tutorial will take you through how to write the &amp;lt;form_name&amp;gt;.properties.json file.
The &amp;lt;form_name&amp;gt;.properties.json file allows you to add logic that ensures that the right action appears for the right contacts (people and places). For instance, an assessment form for children under-5 will only appear for person contacts on the CHT whose age is less than 5.
You will be adding meta-data and context to an assessment workflow that allows Community Health Workers to conduct a health assessment for children under the age of 5.</description></item><item><title>Versioning forms</title><link>https://docs.communityhealthtoolkit.org/building/forms/versioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/forms/versioning/</guid><description>Added in cht-core 3.15.0 and cht-conf 3.10.0
When uploading app or contact xforms, cht-conf 3.10.0+ will automatically generate a version and include it in the form doc&amp;rsquo;s xmlVersion property. The version has two properties.
Property Description time The time that the form was uploaded to the server in millis since the epoch. sha256 A hash of the xform content. For example:
&amp;#34;xmlVersion&amp;#34;: { &amp;#34;time&amp;#34;: 1658717177750, &amp;#34;sha256&amp;#34;: &amp;#34;6f0bbfe5a9a9ebeb25784165879afec5e311b197cbd76ade5698c83c22dd9a8f&amp;#34; } When a user fills in a form with an xmlVersion property, the version is copied in to the report doc as the form_version property.</description></item></channel></rss>