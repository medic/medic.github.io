<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ Debugging Applications</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/</link><description>Recent content in Debugging Applications on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/guides/debugging/index.xml" rel="self" type="application/rss+xml"/><item><title>Obtaining Browser and Phone Logs</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/obtaining-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/obtaining-logs/</guid><description>
&lt;p&gt;There are many places where useful logs reside. This details all those places, and the easiest way to get a hold of them.&lt;/p&gt;
&lt;h2&gt;On a laptop or desktop&lt;span class="hx-absolute -hx-mt-20" id="on-a-laptop-or-desktop"&gt;&lt;/span&gt;
&lt;a href="#on-a-laptop-or-desktop" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To check if there are relevant logs open up the developer console in your browser. The shortcut is probably COMMAND+OPTION+I on MacOS, or CTRL+SHIFT+I on Linux and Windows. Click the console tab and copy out any errors or logging that you think is relevant.&lt;/p&gt;
&lt;h2&gt;On a phone&lt;span class="hx-absolute -hx-mt-20" id="on-a-phone"&gt;&lt;/span&gt;
&lt;a href="#on-a-phone" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are two types of logs updated by Android devices depending on what information is needed. If you trying to get either of the logs from a device for the first time you need to set it up for USB debugging.&lt;/p&gt;
&lt;div class="steps hx-ml-4 hx-mb-12 ltr:hx-border-l rtl:hx-border-r hx-border-gray-200 ltr:hx-pl-6 rtl:hx-pr-6 dark:hx-border-neutral-800 [counter-reset:step]"&gt;
&lt;h3&gt;Step 1&lt;span class="hx-absolute -hx-mt-20" id="step-1"&gt;&lt;/span&gt;
&lt;a href="#step-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Enable USB debugging on the phone. This varies from phone to phone, but here is the &lt;a href="https://developer.android.com/studio/debug/dev-options#enable" target="_blank" rel="noopener"&gt;official Android documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Step 2&lt;span class="hx-absolute -hx-mt-20" id="step-2"&gt;&lt;/span&gt;
&lt;a href="#step-2" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Connect your phone by USB to the computer.&lt;/p&gt;
&lt;h3&gt;Step 3&lt;span class="hx-absolute -hx-mt-20" id="step-3"&gt;&lt;/span&gt;
&lt;a href="#step-3" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;On your phone, you will see a popup &lt;em&gt;&amp;ldquo;Allow USB debugging. The computer&amp;rsquo;s RSA fingerprint&amp;hellip;&amp;rdquo;&lt;/em&gt;, click &lt;em&gt;&amp;ldquo;OK&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;figure&gt;&lt;a href="https://docs.communityhealthtoolkit.org/building/guides/debugging/images/allow_usb_debugging.png"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/building/guides/debugging/images/allow_usb_debugging.png"
alt="Allow USB debugging"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;Allow USB debugging&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Browser logs&lt;span class="hx-absolute -hx-mt-20" id="browser-logs"&gt;&lt;/span&gt;
&lt;a href="#browser-logs" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Now that you&amp;rsquo;ve enabled USB debugging on the phone you can access the dev console on the phone via USB from your desktop browser. This allows the same level of debugging and inspection you have on a desktop browser, but from your phone&amp;rsquo;s browser in the CHT app. Follow the &lt;a href="https://developer.chrome.com/docs/devtools/remote-debugging/webviews/#open_a_webview_in_devtools" target="_blank" rel="noopener"&gt;official Android documentation&lt;/a&gt; to access the console.&lt;/p&gt;
&lt;h3&gt;Android logs&lt;span class="hx-absolute -hx-mt-20" id="android-logs"&gt;&lt;/span&gt;
&lt;a href="#android-logs" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The Android log is written to from the cht-android wrapper which captures errors like application crashes or failing integrations between Android apps.&lt;/p&gt;
&lt;div class="steps hx-ml-4 hx-mb-12 ltr:hx-border-l rtl:hx-border-r hx-border-gray-200 ltr:hx-pl-6 rtl:hx-pr-6 dark:hx-border-neutral-800 [counter-reset:step]"&gt;
&lt;h3&gt;Step 1&lt;span class="hx-absolute -hx-mt-20" id="step-1-1"&gt;&lt;/span&gt;
&lt;a href="#step-1-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To install the &lt;code&gt;adb&lt;/code&gt; command, follow the instructions under the &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/android/development-setup/#debug-tool-adb" target="_blank" rel="noopener"&gt;Development Environment &amp;gt; Debug tool adb&lt;/a&gt; section.&lt;/p&gt;
&lt;h3&gt;Step 2&lt;span class="hx-absolute -hx-mt-20" id="step-2-1"&gt;&lt;/span&gt;
&lt;a href="#step-2-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Within a command line session, write the following command: &lt;code&gt;adb start-server&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Step 3&lt;span class="hx-absolute -hx-mt-20" id="step-3-1"&gt;&lt;/span&gt;
&lt;a href="#step-3-1" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To check if your phone is properly connected, write the command &lt;code&gt;adb devices&lt;/code&gt;. This will list the devices connected.&lt;/p&gt;
&lt;figure&gt;&lt;a href="https://docs.communityhealthtoolkit.org/building/guides/debugging/images/adb_devices.png"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/building/guides/debugging/images/adb_devices.png"
alt="ADB Devices"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;ADB Devices&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Step 4&lt;span class="hx-absolute -hx-mt-20" id="step-4"&gt;&lt;/span&gt;
&lt;a href="#step-4" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Type the command &lt;code&gt;adb logcat &amp;gt; phone.log&lt;/code&gt; to get the android logs in the file &lt;code&gt;phone.log&lt;/code&gt;. The log will be written to the &lt;code&gt;phone.log&lt;/code&gt; file as long as this command is running. You can stop the recording at any time pressing &lt;em&gt;Ctrl+C&lt;/em&gt;. Now if you reproduce the error on the phone you can look for any useful information being written to the &lt;code&gt;phone.log&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This will get all the logs from the device, not just logs for the app you want to debug. You can pass arguments to &lt;code&gt;adb&lt;/code&gt; to only get the logs you want.&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adb logcat MedicMobile:V AndroidRuntime:E chromium:V &lt;span class="s1"&gt;&amp;#39;*:S&amp;#39;&lt;/span&gt; &amp;gt; phone.log&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Alternatively you can use &lt;code&gt;grep&lt;/code&gt; to filter the logs down to only those from the relevant app.&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adb logcat &lt;span class="p"&gt;|&lt;/span&gt; grep MedicMobile &amp;gt; phone.log&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;On the server&lt;span class="hx-absolute -hx-mt-20" id="on-the-server"&gt;&lt;/span&gt;
&lt;a href="#on-the-server" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Some unexpected errors are caught and stored in &lt;code&gt;feedback&lt;/code&gt; docs and stored on the phone and later synced to CouchDB on the server. To access these, look for docs in the &lt;code&gt;medic-user-{username}-meta&lt;/code&gt; or &lt;code&gt;medic-users-meta&lt;/code&gt; databases. This is particularly useful to debug issues where you do not have physical access to the device. More information is available under &lt;a href="https://docs.communityhealthtoolkit.org/technical-overview/data/" &gt;Managing Databases&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Securely Sharing Your Development Environment</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/secure-sharing-of-developer-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/secure-sharing-of-developer-instance/</guid><description>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-red-200 hx-bg-red-100 hx-text-red-900 dark:hx-border-red-200/30 dark:hx-bg-red-900/30 dark:hx-text-red-200"&gt;
&lt;p class="hx-flex hx-items-center hx-font-medium"&gt;&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;Caution&lt;/p&gt;
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7"&gt;
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0"&gt;&lt;p&gt;Be extra careful with this process! The end result will be that your development instance will be accessible to the internet. If you have simple logins and passwords like &amp;ldquo;admin/test.223&amp;rdquo; because you thought it was just your local dev instance and it doesn&amp;rsquo;t matter, now it matters! Whenever you&amp;rsquo;re not using the SSH tunnel for testing, shut it down so there&amp;rsquo;s no more remote access.&lt;/p&gt;
&lt;p&gt;Never expose a development instance to the internet where you&amp;rsquo;ve replicated production data locally. Well, maybe not never, but with extreme care and intention.&lt;/p&gt;
&lt;p&gt;Also not - if you only want to test with mobile devices that require a valid TLS certificate, do not use method. Instead, use &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/core/dev-environment/#nginx-local-ip" &gt;nginx-local-ip&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Overview&lt;span class="hx-absolute -hx-mt-20" id="overview"&gt;&lt;/span&gt;
&lt;a href="#overview" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When using a local &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/core/dev-environment/" &gt;development environment&lt;/a&gt;, you may want to share your work with other collaborators. By using a publicly accessible web server, you can receive the secure https requests and forward them back to your CHT instance which doesn&amp;rsquo;t have https set up:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.communityhealthtoolkit.org/building/guides/debugging/images/SSH-tunnel-diagram.svg" &gt;&lt;img src="https://docs.communityhealthtoolkit.org/building/guides/debugging/images/SSH-tunnel-diagram.svg" width=100% height=100%&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you have this web server set up, you may continue to use it whenever you want by simply reconnecting to it via the secure tunnel.&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;span class="hx-absolute -hx-mt-20" id="prerequisites"&gt;&lt;/span&gt;
&lt;a href="#prerequisites" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This guide assumes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have a local &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/core/dev-environment/" &gt;dev instance&lt;/a&gt; set up of cht-core&lt;/li&gt;
&lt;li&gt;You have the &lt;a href="https://play.google.com/store/apps/details?id=org.medicmobile.webapp.mobile&amp;amp;hl=en_US" target="_blank" rel="noopener"&gt;generic Medic app&lt;/a&gt; installed on your Android device. This version allows you to enter a custom CHT URL on first run.&lt;/li&gt;
&lt;li&gt;You have an Ubuntu &amp;gt;18.04 server with a public IP and a DNS entry that you can SSH into and have sudo on&lt;/li&gt;
&lt;li&gt;You have Apache &amp;gt;2.4.29 installed on the Ubuntu server and can add a new vhost to it, including an SSL cert. (nginx could be used instead as well, but not covered here)&lt;/li&gt;
&lt;li&gt;You have certbot installed from letsencrypt.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The steps in this guide can be done on any of the cheap server providers out there (&lt;a href="https://digitalocean.com" target="_blank" rel="noopener"&gt;Digital Ocean&lt;/a&gt; has a $5/mo server).&lt;/p&gt;
&lt;h2&gt;Steps&lt;span class="hx-absolute -hx-mt-20" id="steps"&gt;&lt;/span&gt;
&lt;a href="#steps" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a DNS entry. Let&amp;rsquo;s assume it&amp;rsquo;s &lt;code&gt;cht.domain.com&lt;/code&gt;. It should point to the IP of your Ubuntu server. If you do not already have a domain name with DNS services that you can use, you can sign up for a free service to do this like &lt;a href="https://www.noip.com/remote-access" target="_blank" rel="noopener"&gt;noip.com&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your Ubuntu server, create a new apache vhost in &lt;code&gt;/etc/apache2/sites-available/100-cht.domain.com.conf&lt;/code&gt; with the following contents:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
ServerName cht.domain.com
RewriteEngine on
RewriteRule (.*) https://cht.domain.com%{REQUEST_URI}
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;IfModule mod_ssl.c&amp;gt;
&amp;lt;VirtualHost *:443&amp;gt;
ServerName cht.domain.com
SSLEngine On
&amp;lt;IfModule mod_headers.c&amp;gt;
Header always set Strict-Transport-Security &amp;#34;max-age=63072000; preload&amp;#34;
&amp;lt;/IfModule&amp;gt;
RewriteEngine on
Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem
SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
ProxyPass / http://localhost:8081/
ProxyPassReverse / http://localhost:8081/
RequestHeader set X-Forwarded-Proto &amp;#34;https&amp;#34;
&amp;lt;/VirtualHost&amp;gt;
&amp;lt;/IfModule&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable the new site: &lt;code&gt;a2ensite 100-cht.domain.com&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart apache and ensure there&amp;rsquo;s no errors: &lt;code&gt;apachectl restart&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create the TLS certificate: &lt;code&gt;certbot -d cht.domain.com&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When prompted choose no redirect: &amp;ldquo;No redirect - Make no further changes to the webserver configuration.&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart apache and ensure there&amp;rsquo;s no errors: &lt;code&gt;apachectl restart&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a browser, test that you can connect to your server with no errors at &lt;a href="https://cht.domain.com" target="_blank" rel="noopener"&gt;https://cht.domain.com&lt;/a&gt; (you may get a &lt;code&gt;500&lt;/code&gt; error, but you shouldn&amp;rsquo;t get any TLS errors)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure your cht-core local dev instance is running by going to http://localhost:5988/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your local dev box, set up the SSH tunnel with: &lt;code&gt;ssh -NT -R 8081:127.0.0.1:5988 cht.domain.com&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This assumes your local username is the same as it is on cht.domain.com. This command will hang and you may exit when down with &lt;code&gt;ctrl + c&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a browser, test again that you now see your local dev instance and it loads correctly at &lt;a href="https://cht.domain.com" target="_blank" rel="noopener"&gt;https://cht.domain.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If needed, reset the Medic app on your phone so that it prompts which instance to use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the app on your phone, choose &amp;ldquo;custom&amp;rdquo; for which instance to use and enter &lt;a href="https://cht.domain.com" target="_blank" rel="noopener"&gt;https://cht.domain.com&lt;/a&gt;. You should now see your local dev instance in the CHT Android device. Happy testing!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Tunnel command breakdown&lt;span class="hx-absolute -hx-mt-20" id="tunnel-command-breakdown"&gt;&lt;/span&gt;
&lt;a href="#tunnel-command-breakdown" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;From the SSH command in step 10 above:&lt;/p&gt;
&lt;figure&gt;&lt;a href="../images/ssh-ports.svg"&gt;&lt;img src="../images/ssh-ports.svg"
alt="Explanation of ports and IPs from SSH"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;Explanation of ports and IPs from SSH&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;8081&lt;/code&gt; - Remote port on cht.domain.com to listen to. This is the same port that apache redirects to in step 2 above.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;127.0.0.1&lt;/code&gt; - Host to send forwarded traffic to. In this case, your local machine.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5988&lt;/code&gt; - Local port where traffic from step one will be sent. In this case, your instance of the CHT&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cht.domain.com&lt;/code&gt; - Public domain where you have an SSH account and we&amp;rsquo;ll attach port &lt;code&gt;8081&lt;/code&gt; to from step 1.&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Sharing 4.x Logs</title><link>https://docs.communityhealthtoolkit.org/building/guides/debugging/sharing-4x-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/debugging/sharing-4x-logs/</guid><description>
&lt;p&gt;CHT 4.x moves from a monolithic container MedicOS to discrete containers, each service hosting one service of the CHT. When troubleshooting an issue with your CHT instance, it can be hard to list each container, see it&amp;rsquo;s status, gather up logs for each container and then share all this information with Medic or other support staff. To ease this pain, a script was written which automates the process.&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;span class="hx-absolute -hx-mt-20" id="prerequisites"&gt;&lt;/span&gt;
&lt;a href="#prerequisites" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This assumes you have access to the command line on the server where the CHT is running locally or via SSH.&lt;/p&gt;
&lt;p&gt;This guide also assumes you have the &lt;a href="https://github.com/medic/cht-core/" target="_blank" rel="noopener"&gt;CHT Core repo checked out&lt;/a&gt; so that you have a copy of the &lt;code&gt;compress_and_archive_docker_logs.sh&lt;/code&gt; script. If you do not have it checked out, you can manually create a local copy with this &lt;code&gt;curl&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="l"&gt;curl -o compress_and_archive_docker_logs.sh https://raw.githubusercontent.com/medic/cht-core/master/scripts/compress_and_archive_docker_logs.sh&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="l"&gt;chmod +x compress_and_archive_docker_logs.sh&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Calling the script&lt;span class="hx-absolute -hx-mt-20" id="calling-the-script"&gt;&lt;/span&gt;
&lt;a href="#calling-the-script" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-indigo-200 hx-bg-indigo-100 hx-text-indigo-900 dark:hx-border-indigo-200/30 dark:hx-bg-indigo-900/30 dark:hx-text-indigo-200"&gt;
&lt;p class="hx-flex hx-items-center hx-font-medium"&gt;&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;Important&lt;/p&gt;
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7"&gt;
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0"&gt;&lt;p&gt;Be aware of two important features of this script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It will get logs for ALL docker containers running, even if they&amp;rsquo;re not part of the CHT&lt;/li&gt;
&lt;li&gt;Logs on production CHT instances will contain PII/PHI and should be handled with care&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The script defaults to getting the past 24 hours of logs and can be called from anywhere on your system as long as you specify the full path to the script. Here it&amp;rsquo;s being called from with in the &lt;code&gt;cht-core/scripts&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;./compress_and_archive_docker_logs.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;d liked to get more logs than the most recent 24 hours, pass in an argument of hours. Here we&amp;rsquo;re asking for 2 days worth of logs by using &lt;code&gt;48&lt;/code&gt; as the argument:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;./compress_and_archive_docker_logs.sh 48&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Depending on this volume of your logs, this may take a while. This is what the output of the script is when it&amp;rsquo;s completed:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;Wait while the script gathers stats and logs about the CHT containers.
Be patient, this might take a moment...
Done!
/home/cht-user/.medic/support_logs/cht-docker-logs-2023-02-14T15.04.45-08.00.tar.gz
NOTE: Please remove the file when done as it may contain PII/PHI.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The files are saved in your home directory (&lt;code&gt;/home/cht-user/&lt;/code&gt; in this case) and are timestamped with the creation date and timezone offset (&lt;code&gt;2023-02-14T15.04.45-08.00&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can now share this &lt;code&gt;tar.gz&lt;/code&gt; file with support staff as needed. Again, be careful with it as &lt;strong&gt;it will contain PII/PHI if you ran this against a production instance&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Archive contents&lt;span class="hx-absolute -hx-mt-20" id="archive-contents"&gt;&lt;/span&gt;
&lt;a href="#archive-contents" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First, let&amp;rsquo;s look at the running containers when we called the script by calling &lt;code&gt;docker ps --format '{{.Names}}'&lt;/code&gt;:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_nginx_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_sentinel_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_api_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_haproxy_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_couchdb_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project_healthcheck_1
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;new_project-dir-cht-upgrade-service-1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now if we uncompress the tarball created above and list the contents, it should look very similar when we call &lt;code&gt;cd ~/.medic/support_logs&amp;amp;&amp;amp;tar xzvf cht-docker-logs-2023-02-14T15.04.45-08.00.tar.gz&lt;/code&gt;:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;pre&gt;&lt;code&gt;docker_ps.log
docker_stats.log
new_project-dir-cht-upgrade-service-1.log
new_project_api_1.log
new_project_couchdb_1.log
new_project_haproxy_1.log
new_project_healthcheck_1.log
new_project_nginx_1.log
new_project_sentinel_1.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There&amp;rsquo;s one file per container, each with the logs from that container. As well there&amp;rsquo;s two other files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker_ps.log&lt;/code&gt; - the output of &lt;code&gt;docker ps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker_stats.log&lt;/code&gt; - the output of &lt;code&gt;docker stats&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>