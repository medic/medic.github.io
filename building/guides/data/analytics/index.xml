<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Synchronization and Analytics on Community Health Toolkit</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/</link><description>Recent content in Data Synchronization and Analytics on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/guides/data/analytics/index.xml" rel="self" type="application/rss+xml"/><item><title>Migrating from couch2pg to CHT Sync</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/couch2pg-to-cht-sync-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/couch2pg-to-cht-sync-migration/</guid><description>This page outlines guidelines for migrating from couch2pg to the data pipeline based on CHT Sync. One of the main changes in this flow is separating the syncing process from the data transformation, with dbt now handling the latter in cht-pipeline. This migration requires dbt models in the cht-pipeline repository instead of SQL views and tables. One thing to note is that the schema for CHT Sync differs from couch2pg, so dbt models will not directly replace the SQL views and tables.</description></item><item><title>Introduction &amp; Prerequisites to data synchronization and analytics</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/introduction/</guid><description>The pages in this section apply to both CHT 3.x (beyond 3.12) and CHT 4.x.
Most CHT deployments require some sort of analytics so that stakeholders can make data driven decisions. CouchDB, which is the database used by the CHT, is not designed for analytics. It is a document database, which means that it is optimized for storing and retrieving documents, and not for aggregating data. For example, if you wanted to know how many patients were registered in a particular area, you would have to query the database for all the patients in that area, and then count them.</description></item><item><title>dbt models for CHT Applications</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/building-dbt-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/building-dbt-models/</guid><description>OverviewCHT Sync copies data from CouchDB to a relational database. It initially stores the document data from CouchDB in a jsonb column in a single PostgreSQL table. This is not possible to query for analytics, so it uses dbt to convert the document data to a relational database format.
The cht-pipeline repository defines a dbt project, which contains model files for the data schema described in the database schema conventions.</description></item><item><title>Local CHT Sync Setup</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/setup/</guid><description>Before setting up CHT Sync in production, it&amp;rsquo;s very handy to be able to run it locally. This will allow you to experiment with the data flow and easily query development data quickly and locally.
These instructions assume you&amp;rsquo;re running CHT Sync, CHT Core and PostgreSQL either locally on your workstation or on a local server. They are not meant to be used to deploy a secure, always on production instance.</description></item><item><title>Production CHT Sync Setup</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/production/</guid><description>We recommend running CHT Sync in production using Kubernetes. This guide will walk you through setting up a production deployment of CHT Sync with the CHT using Kubernetes.
Prerequisites: A Kubernetes cluster: You can use a managed Kubernetes service like Google Kubernetes Engine (GKE), Amazon Elastic Kubernetes Service (EKS), or Azure Kubernetes Service (AKS), or you can set up a cluster using a tool like Minikube. kubectl: The Kubernetes command-line tool.</description></item><item><title>Environment Variables</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/environment-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/environment-variables/</guid><description>There are three environment variable groups in the .env file. To successfully set up CHT Sync, it is important to understand the difference between them.
POSTGRES_: Used by PostgreSQL to establish the PostgreSQL database to synchronize CouchDB data to. They define the schema and table names to store the CouchDB data, as well as where the tables and views for the models defined in CHT_PIPELINE_BRANCH_URL will be created. COUCHDB_: Used by CouchDB to define the CouchDB instance to sync with.</description></item><item><title>Testing dbt models</title><link>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/testing-dbt-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/data/analytics/testing-dbt-models/</guid><description>OverviewTo ensure code accuracy and data integrity, and also to prevent data quality regressions on dbt models, it is recommended to write dbt tests. dbt tests help validate the accuracy and reliability of data and data models and identify issues before they cause downstream impacts on analytics and decision-making. Additionally, they increase developer confidence in making changes to the data models.
Types of dbt testsThere are two main types of dbt tests:</description></item></channel></rss>