<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community Health Toolkit â€“ Security</title><link>https://docs.communityhealthtoolkit.org/building/guides/security/</link><description>Recent content in Security on Community Health Toolkit</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://docs.communityhealthtoolkit.org/building/guides/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Securely onboarding users at scale</title><link>https://docs.communityhealthtoolkit.org/building/guides/security/securely-onboarding-users-at-scale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/security/securely-onboarding-users-at-scale/</guid><description>
&lt;p&gt;This document shows how to achieve a high level of credential management security for a CHT deployment. Implementers need to know when ease of use is more important than a more secure system. By reading this document you should be able to know when to make the &amp;ldquo;more secure&amp;rdquo; vs &amp;ldquo;easier to use&amp;rdquo; trade off.&lt;/p&gt;
&lt;p&gt;No system is perfectly secure - be prepared to remediate a security breach!&lt;/p&gt;
&lt;p&gt;When a CHT deployment will support hundreds of users or more, secure credential management becomes critical. Patient data is sensitive and should never be accessed in any way by unauthorized parties. By following best practices and preparing for the worst case scenario of a password breach, patient data can be kept safe and CHWs can be kept online and able to deliver care.&lt;/p&gt;
&lt;h2&gt;Before starting&lt;span class="hx-absolute -hx-mt-20" id="before-starting"&gt;&lt;/span&gt;
&lt;a href="#before-starting" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Secure devices&lt;span class="hx-absolute -hx-mt-20" id="secure-devices"&gt;&lt;/span&gt;
&lt;a href="#secure-devices" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Firstly, ensure that the CHWs&amp;rsquo; devices are secure: they all employ disk encryption and require a password or PIN to unlock and use. See our &lt;a href="https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/" target="_blank" rel="noopener"&gt;Securing Android Devices document&lt;/a&gt; for more information. As well, an &lt;a href="https://docs.communityhealthtoolkit.org/building/branding/publishing/#mobile-device-management" target="_blank" rel="noopener"&gt;MDM&lt;/a&gt; may be used to enforce disk encryption and device unlock protocols.&lt;/p&gt;
&lt;h3&gt;Secure administrative users&lt;span class="hx-absolute -hx-mt-20" id="secure-administrative-users"&gt;&lt;/span&gt;
&lt;a href="#secure-administrative-users" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;CHT administrators have the ability to create and delete users and push new configurations to the CHT so they should take extra precautions in managing their password. They should use a &lt;a href="https://en.wikipedia.org/wiki/Passphrase" target="_blank" rel="noopener"&gt;strong passphrase&lt;/a&gt; (instead of a password) that is unique to their CHT login. They should use a &lt;a href="https://en.wikipedia.org/wiki/Password_manager" target="_blank" rel="noopener"&gt;password manager&lt;/a&gt; to store this passphrase.
By following these steps, unauthorized people are less likely to be able to access administrator accounts.&lt;/p&gt;
&lt;h3&gt;Secure passwords&lt;span class="hx-absolute -hx-mt-20" id="secure-passwords"&gt;&lt;/span&gt;
&lt;a href="#secure-passwords" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;When generating passwords for CHWs, do not use a formula which repeats itself (eg &lt;code&gt;password123&lt;/code&gt; for user A, &lt;code&gt;password234&lt;/code&gt; for user B etc.). Do not use the CHW information such as username, email or phone number in the password. Train CHWs to not re-use passwords.&lt;/p&gt;
&lt;p&gt;For a reference application showing secure password generation, see &lt;code&gt;generatePassword()&lt;/code&gt; in the &lt;a href="https://github.com/medic/cht-core/blob/master/scripts/bulk-password-update-export.js" target="_blank" rel="noopener"&gt;CHT Core scripts directory&lt;/a&gt;. This will generate a truly random 14 character password with uppercase (&lt;code&gt;A-Z&lt;/code&gt;), lowercase (&lt;code&gt;a-z&lt;/code&gt;), numerical (&lt;code&gt;0-9&lt;/code&gt;) and one special character (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To generate a password that is easier to remember, type and speak over a phone, consider using &lt;a href="https://en.wikipedia.org/wiki/Diceware" target="_blank" rel="noopener"&gt;Diceware passphrases&lt;/a&gt;. For added accessibility, use a word list from the CHWs native language if it is not English. This will make the words easier to spell and more likely to be remembered, but still secure.&lt;/p&gt;
&lt;h2&gt;Spreadsheet use&lt;span class="hx-absolute -hx-mt-20" id="spreadsheet-use"&gt;&lt;/span&gt;
&lt;a href="#spreadsheet-use" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Most deployments manage users in a spreadsheet shared either in Google Docs or other cloud service. It is convenient to have a canonical shared location to access the data. This is an acceptable, but not ideal, solution as it ensures changes are instantly shared while still ensuring a number of key security requirements. For an ideal solution, see &lt;a href="#ideal-practice-1-only-magic-links" &gt;&amp;ldquo;Ideal&amp;rdquo; below&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of paramount importance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Never&lt;/strong&gt; enable anonymous access to the URL for the spreadsheet. You &lt;strong&gt;must always require authentication&lt;/strong&gt; to access user credential lists&lt;/li&gt;
&lt;li&gt;Audit regularly who has access to the shared spreadsheet. Consider setting up an alert every time a new person is granted access&lt;/li&gt;
&lt;li&gt;Reduce the total number of users that need access by breaking up user lists by logical group. For example, each sub-county could have its own user spreadsheet. That way the user credentials are only shared with the local administrators who need it&lt;/li&gt;
&lt;li&gt;Refrain from printing spreadsheets of users and passwords. They can be lost, stolen or easily photographed when shown in public&lt;/li&gt;
&lt;li&gt;If you ever need to download a plaintext CSV with username and password, ensure the computer also has disk encryption enabled and requires a password to unlock&lt;/li&gt;
&lt;li&gt;Do not keep downloaded CSV plaintext copies of credentials. Instead, delete and re-download them from the authorized, authenticated cloud server as needed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Transmitting credentials&lt;span class="hx-absolute -hx-mt-20" id="transmitting-credentials"&gt;&lt;/span&gt;
&lt;a href="#transmitting-credentials" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When it comes time get a username and password onto a device or to a remote user, be sure to use mediums that are secure. One of the main concerns is credentials being found long after they were sent.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A best practice is for the sender to add a credential to a shared password manager. The person receiving the credentials can then securely open the password manager.&lt;/li&gt;
&lt;li&gt;If no password manager is available, consider sending the password via &lt;a href="https://onetimesecret.com/" target="_blank" rel="noopener"&gt;One Time Secret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To send credentials in to many CHWs, consider using &lt;a href="https://docs.communityhealthtoolkit.org/building/login/#magic-links-for-logging-in-token-login" target="_blank" rel="noopener"&gt;token login&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For sending large lists of credentials, as mentioned above, using a cloud provider like Google Sheets, is a good way to have an audit trail and still provide easy, remote access.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example scenarios&lt;span class="hx-absolute -hx-mt-20" id="example-scenarios"&gt;&lt;/span&gt;
&lt;a href="#example-scenarios" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Ideal practice 1: Only Magic Links&lt;span class="hx-absolute -hx-mt-20" id="ideal-practice-1-only-magic-links"&gt;&lt;/span&gt;
&lt;a href="#ideal-practice-1-only-magic-links" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create a spreadsheet with all your users&amp;rsquo; data. Included is a username but NOT a password. When users are created in bulk via &lt;a href="https://docs.communityhealthtoolkit.org/community/contributing/code/test-data/csv-to-docs/#creating-csv-files-for-users" target="_blank" rel="noopener"&gt;the command line&lt;/a&gt; or &lt;a href="https://docs.communityhealthtoolkit.org/building/training/users-bulk-load/" target="_blank" rel="noopener"&gt;bulk user upload&lt;/a&gt;, have a &lt;a href="https://docs.communityhealthtoolkit.org/building/login/#magic-links-for-logging-in-token-login" target="_blank" rel="noopener"&gt;token login&lt;/a&gt; sent to the user via an SMS gateway. This avoids the problem of passwords being stored in clear text in the spreadsheet or on a printed version. The token login links can only be used once and are only valid for 24 hours.&lt;/p&gt;
&lt;h3&gt;Ideal practice 2: Unknown passwords, reset during provision&lt;span class="hx-absolute -hx-mt-20" id="ideal-practice-2-unknown-passwords-reset-during-provision"&gt;&lt;/span&gt;
&lt;a href="#ideal-practice-2-unknown-passwords-reset-during-provision" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;An alternate and also secure approach, is to bulk create the users as described above, not use magic links, and use random passwords that you do not save after giving users the credentials. Train the users on changing their password after they&amp;rsquo;ve logged in for the first time. This makes it harder for a password to be leaked because the password list isn&amp;rsquo;t kept. Additionally, as users are trained to change their password, a leaked list is likely not useful as all passwords have changed.&lt;/p&gt;
&lt;h3&gt;Acceptable practice: Shared list, limited access, unique passwords&lt;span class="hx-absolute -hx-mt-20" id="acceptable-practice-shared-list-limited-access-unique-passwords"&gt;&lt;/span&gt;
&lt;a href="#acceptable-practice-shared-list-limited-access-unique-passwords" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For deployments that are centrally provisioning devices, it is acceptable for generate a &lt;a href="#secure-passwords" &gt;strong password&lt;/a&gt; per user in a centrally accessible, &lt;a href="#spreadsheet-use" &gt;secure spreadsheet&lt;/a&gt;. Working off a computer to view the spreadsheet, provision each device. Do not to print the list of credentials.&lt;/p&gt;
&lt;h3&gt;Worst practice: Shared list, anonymous access, similar passwords&lt;span class="hx-absolute -hx-mt-20" id="worst-practice-shared-list-anonymous-access-similar-passwords"&gt;&lt;/span&gt;
&lt;a href="#worst-practice-shared-list-anonymous-access-similar-passwords" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create all users with near identical passwords (eg &lt;code&gt;password123&lt;/code&gt;, &lt;code&gt;passord234&lt;/code&gt;, &lt;code&gt;password345&lt;/code&gt; etc.) that are then printed out, shared via email or posted to a public URL which requires no authentication. Send an SMS to the CHW with username, password and URL of the device.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s many failures here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Passwords are predictable and easy to guess&lt;/li&gt;
&lt;li&gt;Credential lists are shared too widely&lt;/li&gt;
&lt;li&gt;Users will have their credentials in SMS which may be easily discovered weeks or months later by an unauthorized party&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Remediation of security failure&lt;span class="hx-absolute -hx-mt-20" id="remediation-of-security-failure"&gt;&lt;/span&gt;
&lt;a href="#remediation-of-security-failure" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;By knowing what the security threats are you can know the most helpful steps to remediate them to limit the damage done to the CHT deployment, the privacy of the patients and the security of CHWs.&lt;/p&gt;
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200"&gt;
&lt;p class="hx-flex hx-items-center hx-font-medium"&gt;&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"&gt;&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/&gt;&lt;/svg&gt;Note&lt;/p&gt;
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7"&gt;
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0"&gt;&lt;p&gt;Users who have their password changed can continue to use the CHT to deliver care. They need to &lt;em&gt;keep their device offline&lt;/em&gt; though. After a password change, when a CHW attempts to sync, they will be prompted to log in. At that point, they will not be able to continue using the CHT until they log in.
No data will be lost if they log in as the &lt;em&gt;same user&lt;/em&gt;.&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Credential list shared on internet&lt;span class="hx-absolute -hx-mt-20" id="credential-list-shared-on-internet"&gt;&lt;/span&gt;
&lt;a href="#credential-list-shared-on-internet" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If an online list of credentials is leaked to unauthorized parties, or worse, the Internet at large in the form of being indexed by a search engine, you need to change all passwords as soon as possible for any user on the leaked list. Per the note above, changing a password will log the user out immediately unless they are offline. Having supervisors encourage a user to switch their device to offline mode (turn off all data) is a good way to ensure they can continue to deliver care so they&amp;rsquo;re not locked out.&lt;/p&gt;
&lt;h3&gt;Programmatic password reset&lt;span class="hx-absolute -hx-mt-20" id="programmatic-password-reset"&gt;&lt;/span&gt;
&lt;a href="#programmatic-password-reset" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Medic &lt;a href="https://github.com/medic/cht-core/blob/master/scripts/bulk-password-update-export.js" target="_blank" rel="noopener"&gt;has published a script&lt;/a&gt; to easily change all passwords for a list of users. Administrators will then be responsible to log CHWs back in by &lt;a href="#transmitting-credentials" &gt;securely sending&lt;/a&gt; them their password.&lt;/p&gt;
&lt;p&gt;Additionally, this script could be updated to immediately send a &lt;a href="https://docs.communityhealthtoolkit.org/building/login/#magic-links-for-logging-in-token-login" target="_blank" rel="noopener"&gt;token login&lt;/a&gt; link to the user. There would be no need to change the password as this is done automatically for you. Note that users would need their phone numbers recorded in the CHT to receive a token login link. Here&amp;rsquo;s an example &lt;code&gt;curl&lt;/code&gt; command to send a token login link for the &lt;code&gt;mary&lt;/code&gt; user:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl https://medic:password@cht.example.com/api/v1/users/mary &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -X POST -H &lt;span class="s2"&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -d &lt;span class="s1"&gt;&amp;#39;{&amp;#34;token_login&amp;#34;:true}&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Audit who has changed their password&lt;span class="hx-absolute -hx-mt-20" id="audit-who-has-changed-their-password"&gt;&lt;/span&gt;
&lt;a href="#audit-who-has-changed-their-password" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If you have instructed all users to manually change their password, CHT administrators can search their server logs to see which users have made the update. First find a list of all running services that have the word &lt;code&gt;haproxy&lt;/code&gt; in it:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;docker ps --filter &lt;span class="s2"&gt;&amp;#34;name=haproxy&amp;#34;&lt;/span&gt; --format &lt;span class="s1"&gt;&amp;#39;{{.Names}}&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then, assuming your service is called &lt;code&gt;cht_haproxy_1&lt;/code&gt;, run this command to find all password changes in the past 24 hours:&lt;/p&gt;
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code"&gt;
&lt;div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;docker logs cht_haproxy_1 --since 24h 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep password_scheme&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0"&gt;
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
&gt;
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4"&gt;&lt;/div&gt;
&lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here is an example event showing user &lt;code&gt;mary&lt;/code&gt; having changed their password on Feb 9 18:47:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Feb 9 18:47:08 haproxy[12]: 172.22.0.2,couchdb,201,15,0,0,PUT,/_users/org.couchdb.user%3Amary,api,medic,'{&amp;quot;_id&amp;quot;:&amp;quot;org.couchdb.user:mary&amp;quot;,&amp;quot;_rev&amp;quot;:&amp;quot;3-d3dd14f3026942245ce3881adfcd513e&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;mary&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;user&amp;quot;,&amp;quot;roles&amp;quot;:[&amp;quot;chw&amp;quot;],&amp;quot;facility_id&amp;quot;:&amp;quot;14046008-f796-4418-9ff2-12c2ef77b478&amp;quot;,&amp;quot;password_scheme&amp;quot;:&amp;quot;***&amp;quot;,&amp;quot;iterations&amp;quot;:10,&amp;quot;derived_key&amp;quot;:&amp;quot;f846a7a20209592c613c09ea4405170735c7a557&amp;quot;,&amp;quot;salt&amp;quot;:&amp;quot;bbb089e5fc459c2ca1088c8316e0cc99&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;***&amp;quot;}',411,15,86,'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)'&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Frequently Asked Questions&lt;span class="hx-absolute -hx-mt-20" id="frequently-asked-questions"&gt;&lt;/span&gt;
&lt;a href="#frequently-asked-questions" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forum.communityhealthtoolkit.org/t/best-practices-for-user-management-at-scale/1668/1" target="_blank" rel="noopener"&gt;Best practices for user management at scale?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.communityhealthtoolkit.org/t/send-magic-link-via-mobile-bundle/2760/2" target="_blank" rel="noopener"&gt;Is it possible to send Magic Link to users using their own mobile bundles instead of setting up a messaging gateway?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Securing Android Devices</title><link>https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/</guid><description>
&lt;p&gt;To secure an android device you should enable at least a pin code lock on the device, enable FDE (full disc encryption) and setup remote wiping capabilities by enabling mobile device management.&lt;/p&gt;
&lt;h2&gt;PIN Setup and FDE&lt;span class="hx-absolute -hx-mt-20" id="pin-setup-and-fde"&gt;&lt;/span&gt;
&lt;a href="#pin-setup-and-fde" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Instructions are slightly different per device. Enabling FDE has the added benefit that you must also lock the device with a pin code or password.&lt;/p&gt;
&lt;h3&gt;Android 5.0 or later&lt;span class="hx-absolute -hx-mt-20" id="android-50-or-later"&gt;&lt;/span&gt;
&lt;a href="#android-50-or-later" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Open the &lt;code&gt;Security&lt;/code&gt; menu under settings. On unmodified versions of Android, this
can be found under &lt;code&gt;Settings&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Personal&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Security&lt;/code&gt;. Choose &lt;code&gt;Encrypt Phone&lt;/code&gt;, &lt;code&gt;Encrypt Tablet&lt;/code&gt;, or &lt;code&gt;Encrypt Device&lt;/code&gt;. If you haven&amp;rsquo;t already set a PIN
or passcode for the lock screen, you will be prompted to do so. Remember this
PIN and do not write it down.&lt;/p&gt;
&lt;figure&gt;&lt;a href="encrypt-50.jpg"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/encrypt-50.jpg"
alt="Screenshot for Android 5.0"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;Screenshot for Android 5.0&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Android 4.4 or earlier&lt;span class="hx-absolute -hx-mt-20" id="android-44-or-earlier"&gt;&lt;/span&gt;
&lt;a href="#android-44-or-earlier" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;First, you&amp;rsquo;ll need to set up a PIN. Navigate to &lt;code&gt;Settings&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Security&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt;
&lt;code&gt;Screen Lock&lt;/code&gt;, and set a numeric PIN for the device of &lt;em&gt;at least&lt;/em&gt; four digits.
Remember this PIN and do not write it down.&lt;/p&gt;
&lt;p&gt;Then, open the &lt;code&gt;Security&lt;/code&gt; menu under settings. On unmodified versions of
Android, this can be found under &lt;code&gt;Settings&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Personal&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;Security&lt;/code&gt;.
On some devices, the exact menu layout may have been modified by the hardware
manufacturer. Choose &lt;code&gt;Encrypt Phone&lt;/code&gt; or &lt;code&gt;Encrypt Tablet&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;a href="encrypt-44.jpg"&gt;&lt;img src="https://docs.communityhealthtoolkit.org/building/guides/security/securing-android/encrypt-44.jpg"
alt="Screenshot for Android 4.4"&gt;&lt;/a&gt;&lt;figcaption&gt;
&lt;p&gt;Screenshot for Android 4.4&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;Android Versions before 3.0&lt;span class="hx-absolute -hx-mt-20" id="android-versions-before-30"&gt;&lt;/span&gt;
&lt;a href="#android-versions-before-30" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Android does not support disk encryption in versions earlier than 3.0
(Honeycomb). If you have one of these devices, we recommend that you do not use it.&lt;/p&gt;
&lt;h2&gt;Mobile device management&lt;span class="hx-absolute -hx-mt-20" id="mobile-device-management"&gt;&lt;/span&gt;
&lt;a href="#mobile-device-management" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Using mobile device management (MDM) software allows administrators to remotely manage mobile devices, which often includes the option to delete apps and data from lost or stolen mobile devices.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See Also&lt;/em&gt;: &lt;a href="https://docs.communityhealthtoolkit.org/building/branding/publishing/#mobile-device-management"&gt;Publishing &amp;gt; Mobile Device Management&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>